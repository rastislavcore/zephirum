{
.appVersion = "3343";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = CORE;
},
{
name = panose;
value = (
2,
0,
6,
9,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
7,
34
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
space,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine
);
},
{
name = isFixedPitch;
value = 1;
}
);
date = "2019-12-31 12:00:00 +0000";
familyName = Zephirum;
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 2146;
},
{
name = typoDescender;
value = -555;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2146;
},
{
name = winDescent;
value = 555;
},
{
name = hheaAscender;
value = 2146;
},
{
name = hheaDescender;
value = -555;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */";
}
);
id = m01;
metricValues = (
{
pos = 2146;
},
{
pos = 1456;
},
{
pos = 1082;
},
{
},
{
pos = -555;
},
{
}
);
name = Regular;
userData = {
GSCornerRadius = 120;
GSExtrudeAngle = 0;
GSExtrudeOffset = 15;
};
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2025-02-28 21:44:13 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,1452,l),
(166,0,l),
(1062,0,l),
(1062,1452,l)
);
},
{
closed = 1;
nodes = (
(272,1199,l),
(535,707,l),
(272,207,l)
);
},
{
closed = 1;
nodes = (
(878,1340,l),
(611,851,l),
(343,1340,l)
);
},
{
closed = 1;
nodes = (
(611,567,l),
(864,112,l),
(357,112,l)
);
},
{
closed = 1;
nodes = (
(955,1212,l),
(955,196,l),
(686,707,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
15 14 13 11 6 5 6 3 2 1 76 0 1 0 2 3 1 2 103 4 1 3 0 0 3 87 4 1 3 3 0 95 0 0 3 0 79 10 10 10 12 10 12 21 17 16 5 6 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = .notdef;
},
{
glyphname = space;
lastChange = "2025-03-10 17:58:13 +0000";
layers = (
{
layerId = m01;
width = 1229;
}
);
note = space;
unicode = 32;
},
{
glyphname = A;
lastChange = "2025-03-10 17:45:57 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,0,l),
(71,0,l),
(541,1456,l),
(696,1456,l),
(1158,0,l),
(974,0,l),
(859,377,l),
(373,377,l)
);
},
{
closed = 1;
nodes = (
(618,1170,l),
(423,538,l),
(810,538,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 3 2 0 3 104 0 1 1 30 77 5 4 2 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 0 0 0 3 2 0 3 104 5 4 2 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
3 3 3 10 3 10 17 17 19 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
lastChange = "2025-03-15 16:07:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,1456,l),
(579,1456,l),
(841,1456,o),
(1043,1341,o),
(1043,1082,c),
(1043,848,o),
(859,782,o),
(824,767,c),
(824,764,l),
(861,755,o),
(1088,678,o),
(1088,420,c),
(1088,174,o),
(981,0,o),
(622,0,c),
(141,0,l)
);
},
{
closed = 1;
nodes = (
(327,157,l),
(612,157,l),
(849,157,o),
(901,308,o),
(901,418,c),
(901,543,o),
(791,681,o),
(622,681,c),
(327,681,l)
);
},
{
closed = 1;
nodes = (
(585,835,l),
(762,835,o),
(877,950,o),
(877,1082,c),
(877,1211,o),
(803,1298,o),
(580,1298,c),
(327,1298,l),
(327,835,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 3 2 0 3 103 0 1 1 4 95 0 4 4 30 77 0 2 2 5 95 6 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 4 0 1 0 4 1 103 0 0 0 3 2 0 3 103 0 2 2 5 95 6 1 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
23 23 23 43 23 42 34 38 33 39 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
lastChange = "2025-03-16 10:50:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1122,1082,l),
(1122,1383,l),
(940,1456,l),
(832,1476,o),
(803,1476,o),
(727,1476,c),
(502,1476,l),
(397,1476,o),
(297,1434,o),
(223,1360,c),
(149,1286,o),
(107,1186,o),
(107,1081,c),
(107,375,l),
(107,270,o),
(149,170,o),
(223,96,c),
(297,22,o),
(397,-20,o),
(502,-20,c),
(727,-20,l),
(832,-20,o),
(932,22,o),
(1006,96,c),
(1080,170,o),
(1122,270,o),
(1122,374,c),
(940,374,l),
(929,246,o),
(822,145,o),
(691,145,c),
(538,145,l),
(400,145,o),
(288,257,o),
(288,395,c),
(288,1061,l),
(288,1199,o),
(400,1311,o),
(538,1311,c),
(691,1311,l),
(822,1311,o),
(929,1210,o),
(940,1082,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 0 128 0 0 5 4 0 5 126 0 4 4 2 97 0 2 2 36 77 0 5 5 1 97 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 5 4 0 5 126 0 2 0 4 3 2 4 105 0 5 5 1 97 0 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 36 19 42 51 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
lastChange = "2025-03-15 16:19:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,1456,l),
(683,1456,l),
(772,1456,o),
(916,1208,o),
(994,1082,c),
(1021,1039,o),
(1050,1001,o),
(1067,961,c),
(1096,890,o),
(1105,823,o),
(1105,781,c),
(1105,674,l),
(1105,610,o),
(1099,549,o),
(1087,492,c),
(1074,435,o),
(1056,382,o),
(1033,334,c),
(1009,284,o),
(979,239,o),
(942,198,c),
(905,157,o),
(864,123,o),
(819,94,c),
(771,64,o),
(717,41,o),
(657,25,c),
(596,9,o),
(531,1,o),
(461,0,c),
(124,0,l)
);
},
{
closed = 1;
nodes = (
(312,151,l),
(312,151,o),
(609,141,o),
(723,225,c),
(883,343,o),
(920,560,o),
(920,674,c),
(920,783,l),
(910,913,o),
(838,1002,o),
(783,1082,c),
(705,1197,o),
(648,1304,o),
(564,1304,c),
(312,1304,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 0 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 1 1 30 77 0 0 0 2 96 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 1 0 1 133 0 0 0 2 96 3 1 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
15 15 15 25 15 24 46 32 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
lastChange = "2025-03-15 16:20:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,157,l),
(1081,157,l),
(1081,0,l),
(187,0,l),
(187,1456,l),
(1072,1456,l),
(1072,1298,l),
(372,1298,l),
(372,830,l),
(910,830,l),
(910,673,l),
(372,673,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 30 77 0 4 4 5 95 6 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 2 0 1 103 0 2 0 3 4 2 3 103 0 4 4 5 95 6 1 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 11 0 11 17 17 17 17 17 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
lastChange = "2025-03-15 16:20:43 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,0,l),
(187,0,l),
(187,1456,l),
(1081,1456,l),
(1081,1298,l),
(374,1298,l),
(374,700,l),
(910,700,l),
(910,543,l),
(374,543,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 30 77 5 1 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 1 2 0 1 103 0 2 0 3 4 2 3 103 5 1 4 4 31 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 9 0 9 17 17 17 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
lastChange = "2025-03-15 16:26:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1122,0,l),
(1122,748,l),
(615,748,l),
(615,567,l),
(941,567,l),
(941,415,l),
(941,277,o),
(829,165,o),
(691,165,c),
(538,165,l),
(400,165,o),
(288,277,o),
(288,415,c),
(288,1081,l),
(288,1219,o),
(400,1331,o),
(538,1331,c),
(691,1331,l),
(829,1331,o),
(941,1219,o),
(941,1081,c),
(941,1049,l),
(1122,1049,l),
(1122,1101,l),
(1122,1206,o),
(1080,1306,o),
(1006,1380,c),
(932,1454,o),
(832,1496,o),
(727,1496,c),
(502,1496,l),
(397,1496,o),
(297,1454,o),
(223,1380,c),
(149,1306,o),
(107,1206,o),
(107,1101,c),
(107,395,l),
(107,290,o),
(149,190,o),
(223,116,c),
(297,42,o),
(397,0,o),
(502,0,c),
(727,0,l),
(832,0,o),
(868,20,o),
(962,80,c),
(981,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 1 6 0 4 1 2 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 5 1 5 4 1 128 0 1 0 0 6 1 0 103 0 5 5 3 97 0 3 3 36 77 0 6 6 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 1 5 4 1 128 0 3 0 5 4 3 5 105 0 1 0 0 6 1 0 103 0 6 6 2 97 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 34 19 42 34 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
lastChange = "2025-02-27 17:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(912,673,l),
(315,673,l),
(315,0,l),
(141,0,l),
(141,1456,l),
(315,1456,l),
(315,830,l),
(912,830,l),
(912,1456,l),
(1087,1456,l),
(1087,0,l),
(912,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 4 3 1 4 103 2 1 0 0 30 77 6 5 2 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 4 3 1 4 103 2 1 0 0 3 95 6 5 2 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 11 0 11 17 17 17 17 17 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
lastChange = "2025-03-16 15:23:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(705,1266,l),
(974,1266,l),
(974,1456,l),
(254,1456,l),
(254,1266,l),
(515,1266,l),
(515,190,l),
(254,190,l),
(254,0,l),
(974,0,l),
(974,190,l),
(705,190,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 1 2 95 0 2 2 30 77 4 1 0 0 5 95 6 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 2 3 1 1 0 2 1 103 4 1 0 0 5 95 6 1 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 11 0 11 17 17 17 17 17 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
lastChange = "2025-03-15 16:31:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1068,443,ls),
(1066,342,o),
(993,172,o),
(930,111,qs),
(867,49,o),
(696,-20,o),
(595,-20,qs),
(493,-20,o),
(326,42,o),
(265,100,qs),
(203,157,o),
(129,320,o),
(120,421,q),
(308,421,l),
(311,360,o),
(354,256,o),
(391,218,qs),
(428,179,o),
(531,137,o),
(595,137,qs),
(661,137,o),
(765,186,o),
(802,228,qs),
(838,270,o),
(879,381,o),
(879,443,qs),
(879,1267,l),
(308,1267,l),
(308,1456,l),
(1068,1456,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 3 2 3 1 2 128 4 1 3 3 30 77 0 2 2 0 98 0 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 1 3 133 0 1 2 1 133 0 2 2 0 98 0 0 0 31 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 18 0 18 50 20 51 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
lastChange = "2025-03-03 12:15:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,l),
(121,0,l),
(121,1456,l),
(310,1456,l),
(310,748,l),
(878,1456,l),
(1103,1456,l),
(517,748,l),
(1147,0,l),
(912,0,l),
(395,605,l),
(310,492,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
8 5 2 3 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
1 1 0 0 30 77 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
1 1 0 0 2 95 3 1 2 2 31 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
lastChange = "2025-03-03 12:15:31 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(898,364,l),
(898,157,l),
(371,157,l),
(371,1456,l),
(186,1456,l),
(186,0,l),
(1083,0,l),
(1083,364,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 30 77 0 1 1 2 96 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 0 133 0 1 1 2 96 3 1 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 5 0 5 17 17 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
lastChange = "2025-03-15 16:29:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(860,1456,l),
(1090,1456,l),
(1090,0,l),
(910,0,l),
(910,581,l),
(925,1189,l),
(656,505,l),
(550,505,l),
(303,1168,l),
(318,581,l),
(318,0,l),
(138,0,l),
(138,1456,l),
(367,1456,l),
(604,828,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 8 3 3 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 0 2 0 3 2 128 1 1 0 0 30 77 5 4 2 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 0 2 0 3 2 128 1 1 0 0 2 95 5 4 2 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 12 0 12 18 17 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
lastChange = "2025-02-27 17:34:50 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(333,1088,l),
(330,0,l),
(143,0,l),
(143,1456,l),
(331,1456,l),
(896,370,l),
(899,1456,l),
(1086,1456,l),
(1086,0,l),
(898,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
8 3 2 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
1 1 0 0 30 77 4 3 2 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
1 1 0 0 2 95 4 3 2 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 9 0 9 17 18 17 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
lastChange = "2025-03-15 15:32:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(727,-20,l),
(832,-20,o),
(932,22,o),
(1006,96,c),
(1080,170,o),
(1122,270,o),
(1122,375,c),
(1122,1081,l),
(1122,1186,o),
(1080,1286,o),
(1006,1360,c),
(932,1434,o),
(832,1476,o),
(727,1476,c),
(502,1476,l),
(397,1476,o),
(297,1434,o),
(223,1360,c),
(149,1286,o),
(107,1186,o),
(107,1081,c),
(107,375,l),
(107,270,o),
(149,170,o),
(223,96,c),
(297,22,o),
(397,-20,o),
(502,-20,c)
);
},
{
closed = 1;
nodes = (
(400,145,o),
(288,257,o),
(288,395,c),
(288,1061,l),
(288,1199,o),
(400,1311,o),
(538,1311,c),
(691,1311,l),
(829,1311,o),
(941,1199,o),
(941,1061,c),
(941,395,l),
(941,257,o),
(829,145,o),
(691,145,c),
(538,145,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 2 97 0 2 2 36 77 4 1 1 1 3 97 5 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 0 1 2 0 105 4 1 1 1 3 97 5 1 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
lastChange = "2025-03-15 16:47:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(322,0,l),
(137,0,l),
(137,1456,l),
(699,1456,l),
(916,1456,o),
(1091,1239,o),
(1091,1019,c),
(1091,776,o),
(876,584,o),
(699,584,c),
(322,584,l)
);
},
{
closed = 1;
nodes = (
(639,736,l),
(736,736,o),
(794,788,o),
(821,812,c),
(848,836,o),
(869,865,o),
(884,900,c),
(899,934,o),
(906,973,o),
(906,1017,c),
(906,1061,o),
(899,1101,o),
(884,1136,c),
(869,1171,o),
(848,1201,o),
(822,1226,c),
(795,1251,o),
(735,1298,o),
(639,1304,c),
(322,1304,l),
(322,736,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 3 4 0 3 103 0 1 1 2 95 0 2 2 30 77 5 1 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 2 0 1 0 2 1 103 0 0 0 3 4 0 3 103 5 1 4 4 31 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
11 11 11 23 11 23 38 34 38 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
lastChange = "2025-03-15 16:38:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1122,-264,l),
(967,61,l),
(981,72,o),
(994,83,o),
(1006,95,c),
(1080,169,o),
(1122,270,o),
(1122,374,c),
(1122,1081,l),
(1122,1185,o),
(1080,1286,o),
(1006,1360,c),
(932,1434,o),
(832,1476,o),
(727,1476,c),
(502,1476,l),
(397,1476,o),
(297,1434,o),
(223,1360,c),
(149,1286,o),
(107,1185,o),
(107,1081,c),
(107,374,l),
(107,270,o),
(149,169,o),
(223,95,c),
(297,21,o),
(397,-20,o),
(502,-20,c),
(727,-20,l),
(748,-20,o),
(769,-19,o),
(790,-15,c),
(908,-264,l)
);
},
{
closed = 1;
nodes = (
(400,145,o),
(288,256,o),
(288,395,c),
(288,1061,l),
(288,1199,o),
(400,1311,o),
(538,1311,c),
(691,1311,l),
(829,1311,o),
(941,1199,o),
(941,1061,c),
(941,395,l),
(941,334,o),
(920,279,o),
(884,236,c),
(738,543,l),
(524,543,l),
(713,145,l),
(706,145,o),
(698,145,o),
(691,145,c),
(538,145,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
40 20 1 3 1 2 1 76 6 1 2 0 1 0 2 1 128 0 5 3 5 134 0 4 0 0 2 4 0 105 0 1 1 3 98 0 3 3 31 3 78 0 0 42 41 34 32 26 24 0 21 0 21 54 40 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
lastChange = "2025-03-15 16:50:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,584,l),
(322,584,l),
(322,0,l),
(137,0,l),
(137,1456,l),
(699,1456,l),
(916,1456,o),
(1091,1239,o),
(1091,1019,c),
(1091,828,o),
(959,669,o),
(816,609,c),
(1091,0,l),
(891,0,l)
);
},
{
closed = 1;
nodes = (
(659,737,l),
(744,743,o),
(796,790,o),
(821,812,c),
(848,836,o),
(869,865,o),
(884,900,c),
(899,934,o),
(906,973,o),
(906,1017,c),
(906,1061,o),
(899,1101,o),
(884,1136,c),
(869,1171,o),
(848,1201,o),
(822,1226,c),
(795,1251,o),
(735,1298,o),
(639,1304,c),
(322,1304,l),
(322,736,l),
(559,736,l),
(559,737,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 4 3 0 4 103 0 1 1 2 95 0 2 2 30 77 6 5 2 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 0 2 1 103 0 0 0 4 3 0 4 103 6 5 2 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
11 11 11 28 11 28 18 25 34 38 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
lastChange = "2025-03-16 13:42:43 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,683,o),
(403,716,o),
(278,803,c),
(238,831,o),
(196,865,o),
(171,910,c),
(143,956,o),
(127,1012,o),
(129,1066,c),
(132,1179,o),
(157,1309,o),
(241,1386,c),
(330,1468,o),
(472,1478,o),
(594,1478,c),
(733,1477,o),
(890,1457,o),
(998,1370,c),
(1048,1329,o),
(1068,1260,o),
(1085,1198,c),
(1099,1142,o),
(1098,1059,o),
(1099,1026,c),
(927,1026,l),
(927,1100,o),
(932,1194,o),
(879,1251,c),
(811,1323,o),
(691,1338,o),
(594,1336,c),
(511,1332,o),
(418,1313,o),
(362,1254,c),
(317,1207,o),
(303,1133,o),
(309,1069,c),
(310,1032,o),
(330,996,o),
(355,968,c),
(402,914,o),
(472,883,o),
(537,849,c),
(668,774,o),
(825,744,o),
(950,657,c),
(990,628,o),
(1032,593,o),
(1059,550,c),
(1085,502,o),
(1101,448,o),
(1099,393,c),
(1094,280,o),
(1069,148,o),
(987,72,c),
(898,-10,o),
(758,-18,o),
(636,-18,c),
(495,-18,o),
(339,0,o),
(231,90,c),
(180,131,o),
(161,200,o),
(143,263,c),
(127,316,o),
(131,402,o),
(129,434,c),
(300,434,l),
(300,360,o),
(296,264,o),
(347,209,c),
(416,134,o),
(537,120,o),
(636,124,c),
(717,125,o),
(811,147,o),
(867,205,c),
(911,252,o),
(923,326,o),
(920,391,c),
(916,427,o),
(898,464,o),
(874,491,c),
(827,547,o),
(756,575,o),
(691,611,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 0 0 4 97 0 4 4 36 77 0 3 3 1 97 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 0 0 4 97 0 4 4 36 77 0 3 3 1 97 0 1 1 37 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
6 1 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 4 0 0 5 4 0 105 0 3 3 1 97 0 1 1 37 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 40 0 40 43 35 18 43 34 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
lastChange = "2025-02-27 17:54:05 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1156,1140,l),
(998,1140,l),
(998,1298,l),
(706,1298,l),
(706,0,l),
(526,0,l),
(526,1298,l),
(234,1298,l),
(234,1140,l),
(76,1140,l),
(76,1456,l),
(1156,1456,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 1 95 0 1 1 30 77 4 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 2 1 0 3 1 0 103 4 1 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 7 0 7 17 17 17 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
lastChange = "2025-03-15 16:53:57 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1122,1456,l),
(941,1456,l),
(941,395,l),
(941,257,o),
(829,145,o),
(691,145,c),
(538,145,l),
(400,145,o),
(288,257,o),
(288,395,c),
(288,1456,l),
(107,1456,l),
(107,375,l),
(107,270,o),
(149,170,o),
(223,96,c),
(297,22,o),
(397,-20,o),
(502,-20,c),
(727,-20,l),
(832,-20,o),
(932,22,o),
(1006,96,c),
(1080,170,o),
(1122,270,o),
(1122,375,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
2 1 0 0 30 77 0 1 1 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
2 1 0 1 0 133 0 1 1 3 97 0 3 3 37 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
36 20 36 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
lastChange = "2025-03-15 17:07:05 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,1456,l),
(610,338,l),
(954,1456,l),
(1151,1456,l),
(692,0,l),
(531,0,l),
(71,1456,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
1 1 0 0 30 77 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
1 1 0 2 0 133 0 2 2 31 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
lastChange = "2025-02-27 18:33:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,1456,l),
(360,414,l),
(547,1456,l),
(708,1456,l),
(896,414,l),
(1007,1456,l),
(1182,1456,l),
(1005,0,l),
(816,0,l),
(629,1077,l),
(440,0,l),
(250,0,l),
(73,1456,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 11 9 3 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 1 0 1 2 0 128 3 1 1 1 30 77 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 1 0 1 2 0 128 3 1 1 1 0 95 4 1 0 0 31 0 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
20 21 21 20 17 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
lastChange = "2025-03-15 16:51:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1144,1456,l),
(751,734,l),
(1154,0,l),
(938,0,l),
(616,582,l),
(293,0,l),
(74,0,l),
(478,734,l),
(85,1456,l),
(302,1456,l),
(612,885,l),
(926,1456,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
9 6 3 3 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
1 1 0 0 30 77 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
1 1 0 0 2 95 3 1 2 2 31 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
lastChange = "2025-03-15 16:54:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1156,1456,l),
(703,543,l),
(703,0,l),
(525,0,l),
(525,543,l),
(72,1456,l),
(283,1456,l),
(614,775,l),
(946,1456,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
6 3 0 3 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
1 1 0 0 30 77 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
1 1 0 2 0 133 0 2 2 31 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
lastChange = "2025-02-27 17:45:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1097,0,l),
(134,0,l),
(132,144,l),
(857,1298,l),
(145,1298,l),
(145,1456,l),
(1068,1456,l),
(1070,1315,l),
(343,157,l),
(1097,157,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 3 0 7 1 2 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 3 0 95 0 0 0 30 77 0 1 1 2 95 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 0 0 3 1 0 3 103 0 1 1 2 95 0 2 2 31 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Z;
unicode = 90;
},
{
glyphname = a;
lastChange = "2025-03-15 18:02:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(904,0,l),
(874,118,l),
(855,99,o),
(835,82,o),
(812,65,c),
(789,48,o),
(763,34,o),
(736,21,c),
(708,8,o),
(678,-2,o),
(647,-9,c),
(616,-16,o),
(582,-20,o),
(547,-20,c),
(490,-20,o),
(438,-12,o),
(392,5,c),
(345,22,o),
(306,44,o),
(274,73,c),
(241,101,o),
(216,135,o),
(199,174,c),
(181,213,o),
(172,255,o),
(172,300,c),
(172,359,o),
(184,411,o),
(208,456,c),
(231,501,o),
(265,538,o),
(308,568,c),
(351,597,o),
(404,619,o),
(465,634,c),
(526,649,o),
(872,684,o),
(872,684,c),
(872,858,o),
(819,906,o),
(722,938,c),
(645,963,o),
(546,948,o),
(517,939,c),
(488,930,o),
(464,916,o),
(443,902,c),
(396,870,o),
(391,846,o),
(374,796,c),
(202,796,l),
(202,861,o),
(244,947,o),
(310,1001,c),
(347,1031,o),
(392,1055,o),
(445,1074,c),
(498,1093,o),
(558,1102,o),
(625,1102,c),
(686,1102,o),
(765,1094,o),
(840,1073,c),
(945,1044,o),
(1056,900,o),
(1056,739,c),
(1056,0,l)
);
},
{
closed = 1;
nodes = (
(610,141,o),
(644,146,o),
(675,155,c),
(706,164,o),
(827,236,o),
(867,293,c),
(871,525,l),
(655,508,l),
(557,500,o),
(407,477,o),
(373,401,c),
(363,379,o),
(357,354,o),
(357,326,c),
(357,299,o),
(362,275,o),
(371,252,c),
(380,229,o),
(393,210,o),
(411,194,c),
(429,177,o),
(452,164,o),
(479,155,c),
(506,146,o),
(538,141,o),
(574,141,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
26 1 3 5 12 1 1 0 13 1 2 1 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
26 1 3 5 12 1 1 0 13 1 7 1 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 4 4 6 97 0 6 6 33 77 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 105 0 3 0 0 1 3 0 105 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
19 34 18 36 52 37 36 64 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
lastChange = "2025-03-15 18:02:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(308,0,l),
(336,118,l),
(351,99,o),
(367,83,o),
(384,68,c),
(401,53,o),
(420,40,o),
(440,29,c),
(468,13,o),
(575,-20,o),
(644,-20,c),
(713,-20,o),
(775,-6,o),
(828,21,c),
(881,48,o),
(926,86,o),
(962,135,c),
(998,184,o),
(1025,242,o),
(1044,310,c),
(1053,344,o),
(1070,445,o),
(1070,545,c),
(1070,641,o),
(1053,737,o),
(1044,770,c),
(1025,837,o),
(998,895,o),
(962,944,c),
(926,993,o),
(882,1032,o),
(829,1060,c),
(776,1088,o),
(715,1102,o),
(647,1102,c),
(565,1102,o),
(464,1068,o),
(435,1052,c),
(418,1042,o),
(401,1031,o),
(386,1019,c),
(371,1006,o),
(356,993,o),
(343,978,c),
(343,1498,l),
(158,1498,l)
);
},
{
closed = 1;
nodes = (
(890,639,o),
(887,438,o),
(870,382,c),
(841,289,o),
(816,233,o),
(723,169,c),
(688,145,o),
(641,137,o),
(589,137,c),
(537,137,o),
(463,163,o),
(444,176,c),
(409,199,o),
(368,234,o),
(343,305,c),
(343,786,l),
(364,857,o),
(412,894,o),
(445,915,c),
(466,929,o),
(540,951,o),
(591,951,c),
(642,951,o),
(689,943,o),
(724,919,c),
(806,860,o),
(837,809,o),
(870,704,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 0 3 35 1 4 1 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
19 1 0 3 35 1 5 1 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 2 32 77 0 0 0 3 97 0 3 3 33 77 6 1 1 1 4 97 7 5 2 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 2 32 77 0 0 0 3 97 0 3 3 33 77 6 1 1 1 4 97 7 5 2 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 32 77 0 0 0 3 97 0 3 3 33 77 7 1 5 5 31 77 6 1 1 1 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 0 1 3 0 105 0 2 2 32 77 7 1 5 5 31 77 6 1 1 1 4 97 0 4 4 37 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
16 16 0 0 16 36 16 36 32 30 24 22 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
lastChange = "2025-03-16 14:06:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(325,520,l),
(325,473,o),
(329,417,o),
(340,371,c),
(351,325,o),
(367,283,o),
(391,247,c),
(415,209,o),
(447,180,o),
(487,157,c),
(525,135,o),
(582,132,o),
(640,132,c),
(677,132,o),
(722,128,o),
(754,141,c),
(786,155,o),
(814,171,o),
(838,193,c),
(858,213,o),
(876,236,o),
(890,263,c),
(904,288,o),
(904,339,o),
(905,372,c),
(1080,372,l),
(1080,317,o),
(1078,256,o),
(1057,208,c),
(1034,160,o),
(1005,119,o),
(966,83,c),
(926,48,o),
(880,21,o),
(826,1,c),
(773,-20,o),
(704,-20,o),
(640,-20,c),
(559,-20,o),
(476,-15,o),
(415,15,c),
(355,43,o),
(303,83,o),
(263,132,c),
(221,183,o),
(191,240,o),
(169,305,c),
(148,371,o),
(148,449,o),
(148,520,c),
(148,562,l),
(148,633,o),
(148,712,o),
(169,777,c),
(191,842,o),
(221,900,o),
(263,950,c),
(303,998,o),
(355,1038,o),
(415,1068,c),
(476,1097,o),
(559,1102,o),
(640,1102,c),
(704,1102,o),
(773,1102,o),
(826,1082,c),
(880,1061,o),
(926,1034,o),
(966,998,c),
(1005,964,o),
(1034,922,o),
(1057,874,c),
(1078,826,o),
(1080,765,o),
(1080,710,c),
(905,710,l),
(904,742,o),
(906,784,o),
(894,813,c),
(880,842,o),
(861,866,o),
(838,889,c),
(814,910,o),
(786,928,o),
(754,941,c),
(722,954,o),
(677,950,o),
(640,950,c),
(582,950,o),
(525,949,o),
(487,926,c),
(447,902,o),
(415,873,o),
(391,836,c),
(367,798,o),
(351,757,o),
(340,710,c),
(329,665,o),
(325,609,o),
(325,562,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 5 3 2 114 6 1 5 4 4 5 112 0 3 3 1 97 0 1 1 39 77 0 4 4 0 98 0 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 5 3 2 114 6 1 5 4 3 5 4 126 0 3 3 1 97 0 1 1 39 77 0 4 4 0 98 0 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 5 3 2 5 128 6 1 5 4 3 5 4 126 0 3 3 1 97 0 1 1 39 77 0 4 4 0 98 0 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 5 3 2 5 128 6 1 5 4 3 5 4 126 0 1 0 3 2 1 3 105 0 4 4 0 98 0 0 0 31 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 34 0 34 54 35 19 38 35 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
lastChange = "2025-03-15 18:00:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1070,0,l),
(920,0,l),
(892,118,l),
(877,99,o),
(861,83,o),
(844,68,c),
(827,53,o),
(808,40,o),
(788,29,c),
(760,13,o),
(653,-20,o),
(584,-20,c),
(515,-20,o),
(453,-6,o),
(400,21,c),
(347,48,o),
(302,86,o),
(266,135,c),
(230,184,o),
(203,242,o),
(184,310,c),
(175,344,o),
(158,445,o),
(158,545,c),
(158,641,o),
(175,737,o),
(184,770,c),
(203,837,o),
(230,895,o),
(266,944,c),
(302,993,o),
(346,1032,o),
(399,1060,c),
(452,1088,o),
(513,1102,o),
(581,1102,c),
(663,1102,o),
(764,1068,o),
(793,1052,c),
(810,1042,o),
(827,1031,o),
(842,1019,c),
(857,1006,o),
(872,993,o),
(885,978,c),
(885,1498,l),
(1070,1498,l)
);
},
{
closed = 1;
nodes = (
(338,639,o),
(341,438,o),
(358,382,c),
(387,289,o),
(412,233,o),
(505,169,c),
(540,145,o),
(587,137,o),
(639,137,c),
(691,137,o),
(765,163,o),
(784,176,c),
(819,199,o),
(860,234,o),
(885,305,c),
(885,786,l),
(864,857,o),
(816,894,o),
(783,915,c),
(762,929,o),
(688,951,o),
(637,951,c),
(586,951,o),
(539,943,o),
(504,919,c),
(422,860,o),
(391,809,o),
(358,704,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 0 4 19 1 2 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 5 5 32 77 0 0 0 4 97 0 4 4 33 77 6 1 1 1 2 97 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 5 32 77 0 0 0 4 97 0 4 4 33 77 0 2 2 31 77 6 1 1 1 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 4 0 0 1 4 0 105 7 1 5 5 32 77 0 2 2 31 77 6 1 1 1 3 97 0 3 3 37 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
16 16 0 0 16 36 16 36 32 30 24 22 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
lastChange = "2025-03-15 17:28:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,-21,o),
(499,-9,o),
(439,18,c),
(379,45,o),
(326,81,o),
(281,128,c),
(236,175,o),
(200,230,o),
(175,294,c),
(150,358,o),
(137,428,o),
(137,503,c),
(137,545,l),
(137,632,o),
(151,711,o),
(179,780,c),
(207,849,o),
(244,907,o),
(291,955,c),
(337,1002,o),
(390,1039,o),
(449,1064,c),
(508,1089,o),
(568,1102,o),
(630,1102,c),
(708,1102,o),
(776,1089,o),
(835,1062,c),
(893,1035,o),
(941,997,o),
(980,950,c),
(1019,902,o),
(1051,847,o),
(1067,781,c),
(1103,633,o),
(1090,459,o),
(1090,459,c),
(322,461,l),
(322,342,o),
(392,267,o),
(421,236,c),
(489,163,o),
(563,131,o),
(664,131,c),
(766,131,o),
(842,178,o),
(890,258,c),
(1055,257,l),
(1021,162,o),
(978,113,o),
(922,66,c),
(855,10,o),
(771,-19,o),
(669,-20,c)
);
},
{
closed = 1;
nodes = (
(593,950,o),
(502,936,o),
(434,870,c),
(340,778,o),
(330,670,o),
(323,620,c),
(915,620,l),
(915,620,o),
(910,774,o),
(838,856,c),
(772,931,o),
(677,950,o),
(630,950,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 4 5 4 6 5 128 7 1 1 0 4 6 1 4 103 0 0 0 3 97 0 3 3 39 77 0 5 5 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
8 1 6 4 5 4 6 5 128 0 3 0 0 1 3 0 105 7 1 1 0 4 6 1 4 103 0 5 5 2 97 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
9 9 0 0 9 35 9 35 32 30 27 26 22 20 14 12 0 8 0 8 35 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
lastChange = "2025-02-28 21:33:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,939,l),
(164,1082,l),
(462,1082,l),
(462,1158,ls),
(462,1262,o),
(523,1419,o),
(579,1472,qs),
(634,1525,o),
(790,1579,o),
(886,1579,q),
(1065,1579,l),
(1065,1422,l),
(909,1422,l),
(846,1422,o),
(749,1391,o),
(717,1360,qs),
(683,1328,o),
(648,1226,o),
(648,1158,qs),
(648,1082,l),
(1065,1082,l),
(1065,939,l),
(648,939,l),
(648,0,l),
(462,0,l),
(462,939,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 3 97 0 3 3 32 77 6 1 1 1 2 95 5 1 2 2 33 77 0 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
5 1 2 6 1 1 0 2 1 103 0 4 4 3 97 0 3 3 32 77 0 0 0 31 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 20 33 36 17 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
lastChange = "2025-03-15 18:04:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,874,o),
(255,947,qs),
(311,1020,o),
(471,1102,o),
(572,1102,qs),
(637,1102,o),
(746,1072,o),
(790,1043,qs),
(814,1028,o),
(857,988,o),
(876,964,q),
(896,1082,l),
(1053,1082,l),
(1053,23,ls),
(1053,-84,o),
(986,-250,o),
(926,-308,qs),
(865,-366,o),
(697,-426,o),
(595,-426,qs),
(553,-426,o),
(390,-400,o),
(320,-354,qs),
(237,-300,o),
(165,-208,o),
(140,-128,q),
(310,-128,l),
(332,-176,o),
(396,-226,o),
(433,-243,qs),
(470,-260,o),
(544,-275,o),
(581,-275,qs),
(647,-275,o),
(753,-237,o),
(791,-200,qs),
(828,-164,o),
(868,-56,o),
(868,14,qs),
(868,107,l),
(847,83,o),
(800,43,o),
(773,28,qs),
(731,5,o),
(629,-20,o),
(570,-20,qs),
(471,-20,o),
(311,64,o),
(256,138,qs),
(200,212,o),
(140,413,o),
(140,529,qs),
(140,550,ls),
(140,671,o)
);
},
{
closed = 1;
nodes = (
(358,308,o),
(394,254,qs),
(429,200,o),
(539,137,o),
(616,137,qs),
(664,137,o),
(741,160,o),
(772,181,qs),
(802,202,o),
(850,260,o),
(868,295,q),
(868,791,l),
(850,825,o),
(802,881,o),
(771,902,qs),
(740,922,o),
(664,945,o),
(618,945,qs),
(540,945,o),
(429,881,o),
(394,827,qs),
(358,772,o),
(325,629,o),
(325,550,qs),
(325,529,ls),
(325,450,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
32 1 0 3 16 1 2 1 2 76 0 6 2 7 2 6 7 128 4 1 3 0 0 1 3 0 105 0 7 0 5 7 5 101 8 1 1 1 2 97 0 2 2 31 2 78 0 0 49 47 44 43 40 38 34 33 29 27 21 19 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
lastChange = "2025-03-15 18:28:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,1498,l),
(343,1498,l),
(343,978,l),
(356,993,o),
(371,1006,o),
(386,1019,c),
(401,1031,o),
(418,1042,o),
(435,1052,c),
(464,1068,o),
(565,1102,o),
(647,1102,c),
(715,1102,o),
(776,1088,o),
(829,1060,c),
(882,1032,o),
(942,993,o),
(978,944,c),
(1013,896,o),
(1062,823,o),
(1070,733,cs),
(1070,730,o),
(1070,733,o),
(1070,730,c),
(1070,730,o),
(1069,94,o),
(1070,0,c),
(884,0,l),
(883,62,o),
(888,645,o),
(870,704,c),
(837,809,o),
(806,860,o),
(724,919,c),
(689,943,o),
(642,951,o),
(591,951,c),
(540,951,o),
(466,929,o),
(445,915,c),
(412,894,o),
(364,857,o),
(343,786,c),
(343,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 32 77 0 3 3 1 97 0 1 1 33 77 5 4 2 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 32 77 0 3 3 1 97 0 1 1 39 77 5 4 2 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 0 0 0 32 77 5 4 2 2 2 31 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 24 0 24 52 20 36 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
lastChange = "2025-02-27 18:56:55 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(876,0,l),
(691,0,l),
(691,921,l),
(323,921,l),
(323,1082,l),
(876,1082,l)
);
},
{
closed = 1;
nodes = (
(656,1288,l),
(906,1288,l),
(906,1538,l),
(656,1538,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 95 0 3 3 32 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 2 1 0 2 103 5 1 4 4 3 95 0 3 3 32 77 0 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
6 6 6 9 6 9 18 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
lastChange = "2025-02-27 18:57:02 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(931,-7,ls),
(931,-111,o),
(874,-271,o),
(820,-325,qs),
(765,-380,o),
(608,-437,o),
(508,-437,qs),
(477,-437,o),
(419,-435,o),
(391,-433,qs),
(368,-431,o),
(322,-424,o),
(297,-420,q),
(310,-268,l),
(327,-271,o),
(379,-276,o),
(406,-277,qs),
(432,-279,o),
(481,-280,o),
(495,-280,qs),
(547,-280,o),
(639,-253,o),
(673,-221,qs),
(707,-189,o),
(746,-84,o),
(746,-7,qs),
(746,921,l),
(385,921,l),
(385,1082,l),
(931,1082,l)
);
},
{
closed = 1;
nodes = (
(706,1288,l),
(956,1288,l),
(956,1538,l),
(706,1538,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 5 5 4 95 0 4 4 32 77 0 3 3 0 95 0 0 0 33 77 0 2 2 1 95 0 1 1 35 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 3 2 0 3 103 6 1 5 5 4 95 0 4 4 32 77 0 2 2 1 95 0 1 1 35 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
12 12 12 15 12 15 18 18 33 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
lastChange = "2025-03-03 12:16:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,0,l),
(157,0,l),
(157,1536,l),
(343,1536,l),
(343,596,l),
(819,1082,l),
(1044,1082,l),
(566,592,l),
(1111,0,l),
(876,0,l),
(439,466,l),
(343,374,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
9 6 2 3 2 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 32 77 0 1 1 33 77 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 32 77 0 1 1 2 95 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 2 95 3 1 2 2 31 77 0 1 1 2 95 3 1 2 2 31 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
19 18 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
lastChange = "2025-03-16 17:40:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,153,o),
(511,79,qs),
(615,0,o),
(853,0,qs),
(982,0,l),
(982,162,l),
(902,162,ls),
(726,162,o),
(669,206,qs),
(590,265,o),
(590,409,qs),
(590,1456,l),
(407,1456,l),
(407,375,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 32 77 0 1 1 2 95 0 2 2 31 2 78 33 36 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
lastChange = "2025-03-15 18:28:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,1037,o),
(403,1101,o),
(479,1102,qs),
(522,1102,o),
(591,1083,o),
(617,1065,qs),
(636,1051,o),
(667,1011,o),
(678,986,q),
(692,1009,o),
(730,1049,o),
(752,1064,qs),
(780,1081,o),
(849,1101,o),
(890,1102,qs),
(946,1102,o),
(1036,1069,o),
(1067,1037,qs),
(1101,1001,o),
(1137,886,o),
(1137,808,qs),
(1137,0,l),
(961,0,l),
(961,810,ls),
(961,844,o),
(945,896,o),
(930,913,qs),
(914,929,o),
(867,945,o),
(836,945,qs),
(803,945,o),
(755,927,o),
(739,912,qs),
(723,896,o),
(705,855,o),
(702,830,qs),
(702,825,o),
(702,816,o),
(702,810,qs),
(702,0,l),
(526,0,l),
(526,811,ls),
(526,845,o),
(511,897,o),
(495,914,qs),
(480,930,o),
(435,945,o),
(405,945,qs),
(372,945,o),
(323,930,o),
(306,916,qs),
(293,905,o),
(274,877,o),
(268,861,q),
(268,0,l),
(92,0,l),
(92,1082,l),
(243,1082,l),
(263,980,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
10 2 2 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 33 77 7 5 2 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
6 1 4 3 0 4 89 2 1 2 0 0 3 95 7 5 2 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 4 2 89 6 1 4 3 0 4 89 1 1 0 0 3 95 7 5 2 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
20 36 20 36 20 38 36 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
lastChange = "2025-03-15 18:28:37 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,1082,l),
(323,1082,l),
(343,978,l),
(356,993,o),
(371,1006,o),
(386,1019,c),
(401,1031,o),
(418,1042,o),
(435,1052,c),
(464,1068,o),
(565,1102,o),
(647,1102,c),
(715,1102,o),
(776,1088,o),
(829,1060,c),
(882,1032,o),
(942,993,o),
(978,944,c),
(1013,896,o),
(1062,823,o),
(1070,733,cs),
(1070,730,o),
(1070,733,o),
(1070,730,c),
(1070,730,o),
(1069,94,o),
(1070,0,c),
(884,0,l),
(883,62,o),
(888,645,o),
(870,704,c),
(837,809,o),
(806,860,o),
(724,919,c),
(689,943,o),
(642,951,o),
(591,951,c),
(540,951,o),
(466,929,o),
(445,915,c),
(412,894,o),
(364,857,o),
(343,786,c),
(343,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 1 2 0 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
0 1 2 4 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 2 0 97 4 1 0 0 33 77 3 1 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 1 0 2 89 4 1 0 0 1 95 3 1 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 0 0 2 1 0 2 105 0 4 4 1 95 3 1 1 1 31 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 20 36 20 35 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
lastChange = "2025-03-16 13:37:22 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,550,l),
(123,628,o),
(124,711,o),
(146,778,c),
(169,844,o),
(202,902,o),
(245,953,c),
(287,1002,o),
(338,1040,o),
(399,1067,c),
(459,1098,o),
(537,1102,o),
(614,1102,c),
(690,1102,o),
(768,1098,o),
(829,1067,c),
(891,1040,o),
(944,1002,o),
(986,953,c),
(1027,902,o),
(1060,844,o),
(1083,778,c),
(1105,711,o),
(1106,628,o),
(1106,550,c),
(1106,529,l),
(1106,450,o),
(1105,368,o),
(1083,301,c),
(1060,235,o),
(1027,176,o),
(986,128,c),
(944,80,o),
(892,38,o),
(830,11,c),
(769,-16,o),
(691,-20,o),
(616,-20,c),
(538,-20,o),
(460,-16,o),
(400,11,c),
(338,38,o),
(287,80,o),
(245,128,c),
(202,176,o),
(169,235,o),
(146,301,c),
(124,368,o),
(123,450,o),
(123,529,c)
);
},
{
closed = 1;
nodes = (
(308,529,l),
(308,475,o),
(305,415,o),
(317,365,c),
(329,318,o),
(349,275,o),
(375,239,c),
(401,202,o),
(433,172,o),
(470,152,c),
(510,131,o),
(564,130,o),
(616,130,c),
(667,130,o),
(721,131,o),
(759,152,c),
(798,172,o),
(829,202,o),
(855,239,c),
(881,275,o),
(900,318,o),
(913,365,c),
(926,415,o),
(922,475,o),
(922,529,c),
(922,550,l),
(922,603,o),
(925,665,o),
(913,712,c),
(899,760,o),
(880,804,o),
(854,839,c),
(828,876,o),
(797,904,o),
(758,926,c),
(720,949,o),
(665,950,o),
(614,950,c),
(562,950,o),
(508,949,o),
(469,926,c),
(432,904,o),
(401,876,o),
(375,839,c),
(349,804,o),
(329,760,o),
(317,712,c),
(305,665,o),
(308,603,o),
(308,550,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 2 97 0 2 2 39 77 4 1 1 1 3 97 5 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 0 1 2 0 105 4 1 1 1 3 97 5 1 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
lastChange = "2025-03-15 17:57:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,1082,l),
(308,1082,l),
(336,964,l),
(351,983,o),
(367,1000,o),
(384,1015,c),
(401,1030,o),
(420,1043,o),
(440,1053,c),
(468,1069,o),
(575,1102,o),
(644,1102,c),
(713,1102,o),
(775,1089,o),
(828,1061,c),
(881,1034,o),
(926,996,o),
(962,947,c),
(998,899,o),
(1025,840,o),
(1044,773,c),
(1053,738,o),
(1070,637,o),
(1070,538,c),
(1070,441,o),
(1053,346,o),
(1044,313,c),
(1025,246,o),
(998,188,o),
(962,138,c),
(926,89,o),
(881,50,o),
(828,22,c),
(775,-6,o),
(715,-20,o),
(647,-20,c),
(565,-20,o),
(464,14,o),
(435,30,c),
(418,40,o),
(401,51,o),
(386,64,c),
(371,76,o),
(356,90,o),
(343,104,c),
(343,-416,l),
(158,-416,l)
);
},
{
closed = 1;
nodes = (
(890,443,o),
(887,644,o),
(869,701,c),
(841,793,o),
(816,849,o),
(723,913,c),
(688,938,o),
(641,945,o),
(589,945,c),
(537,945,o),
(463,919,o),
(444,906,c),
(409,883,o),
(368,848,o),
(343,777,c),
(343,296,l),
(364,225,o),
(412,189,o),
(445,167,c),
(466,153,o),
(540,131,o),
(591,131,c),
(642,131,o),
(689,139,o),
(724,164,c),
(806,222,o),
(837,273,o),
(869,378,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
18 1 1 2 34 1 4 0 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
6 1 1 1 2 97 3 1 2 2 33 77 0 0 0 4 97 0 4 4 31 77 0 5 5 35 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 33 77 6 1 1 1 3 97 0 3 3 39 77 0 0 0 4 97 0 4 4 31 77 0 5 5 35 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 3 6 1 1 0 3 1 105 0 0 0 4 97 0 4 4 31 77 0 2 2 5 95 0 5 5 35 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 36 35 31 29 23 21 17 16 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
lastChange = "2025-03-15 17:59:05 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1070,1082,l),
(920,1082,l),
(892,964,l),
(877,983,o),
(861,1000,o),
(844,1015,c),
(827,1030,o),
(808,1042,o),
(788,1053,c),
(760,1069,o),
(653,1102,o),
(584,1102,c),
(515,1102,o),
(453,1088,o),
(400,1061,c),
(347,1034,o),
(302,996,o),
(266,947,c),
(230,898,o),
(203,840,o),
(184,773,c),
(175,738,o),
(158,637,o),
(158,537,c),
(158,441,o),
(175,345,o),
(184,313,c),
(203,246,o),
(230,187,o),
(266,138,c),
(302,89,o),
(346,50,o),
(399,22,c),
(452,-6,o),
(513,-20,o),
(581,-20,c),
(663,-20,o),
(764,14,o),
(793,30,c),
(810,40,o),
(827,51,o),
(842,64,c),
(857,76,o),
(872,89,o),
(885,104,c),
(885,-416,l),
(1070,-416,l)
);
},
{
closed = 1;
nodes = (
(338,443,o),
(341,644,o),
(358,701,c),
(387,793,o),
(412,849,o),
(505,913,c),
(540,937,o),
(587,945,o),
(639,945,c),
(691,945,o),
(765,919,o),
(784,906,c),
(819,883,o),
(860,848,o),
(885,777,c),
(885,296,l),
(864,225,o),
(816,188,o),
(783,167,c),
(762,153,o),
(688,131,o),
(637,131,c),
(586,131,o),
(539,139,o),
(504,164,c),
(422,222,o),
(391,273,o),
(358,378,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
35 1 1 4 19 1 3 0 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
35 1 1 5 19 1 3 0 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
6 1 1 1 4 97 7 5 2 4 4 39 77 0 0 0 3 97 0 3 3 31 77 0 2 2 35 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 5 33 77 6 1 1 1 4 97 0 4 4 39 77 0 0 0 3 97 0 3 3 31 77 0 2 2 35 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 4 6 1 1 0 4 1 105 0 0 0 3 97 0 3 3 31 77 7 1 5 5 2 95 0 2 2 35 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
16 16 0 0 16 36 16 36 32 30 24 22 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
lastChange = "2025-03-15 18:30:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1006,932,o),
(1025,785,q),
(873,785,l),
(857,895,o),
(758,918,qs),
(690,920,o),
(580,885,o),
(539,853,qs),
(502,825,o),
(447,744,o),
(429,694,q),
(429,0,l),
(243,0,l),
(243,1082,l),
(408,1082,l),
(428,910,l),
(494,999,o),
(681,1105,o),
(797,1102,qs),
(876,1100,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 1 2 0 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
0 1 2 4 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 2 3 2 1 114 0 2 2 0 97 4 1 0 0 33 77 0 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 4 1 0 0 33 77 0 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 3 2 1 3 128 0 2 1 0 2 89 4 1 0 0 3 95 0 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 4 4 3 95 0 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 20 35 35 35 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
lastChange = "2025-03-16 17:38:21 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(489,1103,o),
(360,1097,o),
(275,1032,c),
(195,972,o),
(174,873,o),
(170,788,c),
(170,788,o),
(170,788,o),
(170,788,c),
(169,746,o),
(185,702,o),
(211,667,c),
(235,630,o),
(273,605,o),
(309,584,c),
(309,584,o),
(309,584,o),
(309,584,c),
(422,518,o),
(561,494,o),
(674,441,c),
(731,414,o),
(790,394,o),
(830,357,c),
(830,357,o),
(830,356,o),
(830,356,c),
(848,339,o),
(863,315,o),
(866,293,c),
(868,247,o),
(857,198,o),
(824,168,c),
(778,130,o),
(701,114,o),
(632,113,c),
(632,113,o),
(632,113,o),
(632,113,c),
(548,110,o),
(447,122,o),
(392,171,c),
(355,204,o),
(356,271,o),
(356,325,c),
(356,333,o),
(356,340,o),
(356,340,c),
(170,340,l),
(170,325,l),
(170,325,o),
(170,324,o),
(171,324,c),
(171,314,o),
(171,292,o),
(173,268,c),
(174,244,o),
(176,218,o),
(185,196,c),
(185,196,o),
(185,196,o),
(185,196,c),
(200,150,o),
(217,96,o),
(267,63,c),
(367,-8,o),
(508,-20,o),
(633,-20,c),
(741,-20,o),
(869,-15,o),
(954,49,c),
(954,49,o),
(954,49,o),
(954,49,c),
(1031,110,o),
(1054,210,o),
(1059,294,c),
(1059,294,o),
(1059,294,o),
(1059,294,c),
(1060,338,o),
(1044,380,o),
(1020,417,c),
(1020,417,o),
(1020,418,o),
(1020,418,c),
(994,452,o),
(956,478,o),
(920,500,c),
(920,500,o),
(920,500,o),
(920,500,c),
(805,567,o),
(665,589,o),
(555,642,c),
(554,642,o),
(554,642,o),
(554,642,c),
(498,667,o),
(439,690,o),
(399,726,c),
(380,745,o),
(366,769,o),
(364,791,c),
(364,791,o),
(364,791,o),
(364,792,c),
(360,835,o),
(372,886,o),
(406,915,c),
(406,915,o),
(406,915,o),
(406,915,c),
(450,954,o),
(526,968,o),
(597,970,c),
(680,972,o),
(779,960,o),
(835,913,c),
(874,877,o),
(872,814,o),
(872,758,c),
(872,750,o),
(872,744,o),
(872,744,c),
(1059,744,l),
(1059,758,l),
(1059,758,o),
(1059,759,o),
(1059,759,c),
(1058,782,o),
(1059,843,o),
(1044,888,c),
(1044,888,o),
(1044,888,o),
(1044,888,c),
(1029,933,o),
(1012,987,o),
(963,1022,c),
(963,1022,o),
(963,1022,o),
(963,1022,c),
(862,1089,o),
(719,1103,o),
(596,1103,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 5 3 2 5 128 6 1 5 0 3 5 0 126 0 3 3 1 97 0 1 1 33 77 0 0 0 4 97 0 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 5 3 2 5 128 6 1 5 0 3 5 0 126 0 3 3 1 97 0 1 1 33 77 0 0 0 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 5 3 2 5 128 6 1 5 0 3 5 0 126 0 1 0 3 2 1 3 105 0 0 0 4 97 0 4 4 37 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 39 0 39 43 34 18 43 34 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
lastChange = "2025-02-27 18:28:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1035,1082,l),
(1035,939,l),
(623,939,l),
(623,351,ls),
(623,288,o),
(655,206,o),
(683,182,qs),
(711,157,o),
(784,137,o),
(825,137,qs),
(855,137,o),
(919,144,o),
(950,149,qs),
(980,154,o),
(1033,165,o),
(1050,169,q),
(1076,38,l),
(1053,24,o),
(987,3,o),
(948,-4,qs),
(909,-12,o),
(822,-20,o),
(779,-20,qs),
(707,-20,o),
(582,21,o),
(536,66,qs),
(490,110,o),
(437,251,o),
(437,351,qs),
(437,939,l),
(153,939,l),
(153,1082,l),
(437,1082,l),
(437,1264,l),
(623,1364,l),
(623,1082,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
11 1 2 1 12 1 3 2 2 76 25 0 2 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 1 1 0 95 5 1 0 0 33 77 0 2 2 3 97 0 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
5 1 0 4 1 1 2 0 1 103 0 2 2 3 97 0 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 20 37 36 17 17 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
lastChange = "2025-03-15 18:43:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1070,1082,l),
(1070,0,l),
(905,0,l),
(885,104,l),
(872,89,o),
(857,76,o),
(842,63,c),
(827,51,o),
(810,40,o),
(793,30,c),
(764,14,o),
(663,-20,o),
(581,-20,c),
(513,-20,o),
(452,-6,o),
(399,22,c),
(346,50,o),
(286,89,o),
(250,138,c),
(215,186,o),
(166,259,o),
(158,349,cs),
(158,352,o),
(158,349,o),
(158,352,c),
(158,352,o),
(159,988,o),
(158,1082,c),
(344,1082,l),
(345,1020,o),
(340,437,o),
(358,378,c),
(391,273,o),
(422,222,o),
(504,163,c),
(539,139,o),
(586,131,o),
(637,131,c),
(688,131,o),
(762,153,o),
(783,167,c),
(816,188,o),
(864,225,o),
(885,296,c),
(885,1082,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 1 0 2 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
0 1 4 2 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 33 77 0 2 2 0 97 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 33 77 0 2 2 0 97 4 1 0 0 37 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 33 77 0 2 2 0 97 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 33 77 0 2 2 0 97 4 1 0 0 37 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 1 0 97 4 1 0 0 37 77 0 2 2 0 97 4 1 0 0 37 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 1 1 4 95 0 4 4 31 77 0 2 2 0 97 0 0 0 37 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 20 36 20 35 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
lastChange = "2025-03-15 18:44:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,1082,l),
(618,249,l),
(939,1082,l),
(1128,1082,l),
(687,0,l),
(546,0,l),
(101,1082,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
1 1 0 0 33 77 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
1 1 0 2 0 133 3 1 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 6 0 6 18 17 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
lastChange = "2025-02-27 18:33:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207,1082,l),
(355,257,l),
(555,1082,l),
(674,1082,l),
(875,242,l),
(1022,1082,l),
(1186,1082,l),
(956,0,l),
(810,0,l),
(613,811,l),
(419,0,l),
(273,0,l),
(43,1082,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 6 3 3 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 2 1 0 0 33 77 5 4 2 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 2 1 0 0 3 95 5 4 2 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
lastChange = "2025-03-15 16:51:29 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1117,1082,l),
(744,547,l),
(1128,0,l),
(914,0,l),
(615,412,l),
(316,0,l),
(100,0,l),
(484,547,l),
(111,1082,l),
(325,1082,l),
(611,681,l),
(900,1082,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
9 6 3 3 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
3 1 0 0 33 77 2 1 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
3 1 0 0 1 95 2 1 1 1 31 1 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
lastChange = "2025-03-15 18:31:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-437,l),
(149,-275,l),
(267,-275,l),
(305,-275,o),
(368,-233,o),
(393,-204,qs),
(417,-175,o),
(451,-114,o),
(462,-93,qs),
(536,51,l),
(70,1082,l),
(277,1082,l),
(622,313,l),
(952,1082,l),
(1159,1082,l),
(610,-167,ls),
(591,-209,o),
(532,-303,o),
(490,-343,qs),
(448,-383,o),
(336,-437,o),
(263,-437,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
1 1 0 0 33 77 0 3 3 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
1 1 0 3 0 133 0 3 3 2 98 0 2 2 41 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
33 34 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
lastChange = "2025-02-27 18:35:50 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1077,0,l),
(152,0,l),
(152,136,l),
(798,929,l),
(161,929,l),
(161,1082,l),
(1041,1082,l),
(1041,951,l),
(388,151,l),
(1077,151,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
6 1 2 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 4 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 2 1 0 103 0 2 2 3 95 4 1 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 9 0 9 18 17 18 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = z;
unicode = 122;
},
{
glyphname = zero;
lastChange = "2025-03-15 18:45:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,487,l),
(757,772,l),
(758,971,l),
(473,686,l)
);
},
{
closed = 1;
nodes = (
(719,-20,l),
(816,-20,o),
(910,22,o),
(978,96,c),
(1047,170,o),
(1086,270,o),
(1086,375,c),
(1086,1081,l),
(1086,1186,o),
(1047,1286,o),
(978,1360,c),
(910,1434,o),
(816,1476,o),
(719,1476,c),
(510,1476,l),
(413,1476,o),
(319,1434,o),
(251,1360,c),
(182,1286,o),
(143,1186,o),
(143,1081,c),
(143,375,l),
(143,270,o),
(182,170,o),
(251,96,c),
(319,22,o),
(413,-20,o),
(510,-20,c)
);
},
{
closed = 1;
nodes = (
(416,145,o),
(312,257,o),
(312,395,c),
(312,1061,l),
(312,1199,o),
(416,1311,o),
(544,1311,c),
(685,1311,l),
(813,1311,o),
(917,1199,o),
(917,1061,c),
(917,395,l),
(917,257,o),
(813,145,o),
(685,145,c),
(544,145,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 2 97 0 2 2 32 77 4 1 1 1 3 97 5 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 0 1 2 0 105 4 1 1 1 3 97 5 1 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
25 25 0 0 25 40 25 39 33 31 0 24 0 23 42 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
lastChange = "2025-03-16 15:16:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(773,1456,l),
(588,1456,l),
(207,1244,l),
(207,1075,l),
(588,1220,l),
(588,185,l),
(341,185,l),
(341,0,l),
(1021,0,l),
(1021,185,l),
(773,185,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
3 2 1 3 1 0 1 76 0 0 0 32 77 2 1 1 1 31 1 78 0 0 0 6 0 6 20 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
lastChange = "2025-02-27 20:28:57 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1054,182,l),
(388,182,l),
(391,282,o),
(538,472,o),
(694,609,qs),
(820,720,o),
(948,814,qs),
(1054,920,o),
(1054,1081,qs),
(1054,1269,o),
(930,1375,qs),
(806,1480,o),
(621,1480,qs),
(391,1467,o),
(176,1358,q),
(175,1138,l),
(297,1214,l),
(445,1299,o),
(621,1299,qs),
(694,1299,o),
(748,1266,qs),
(830,1217,o),
(848,1157,qs),
(857,1114,o),
(857,1078,qs),
(857,1020,o),
(830,981,qs),
(741,900,o),
(557,745,qs),
(342,564,o),
(176,330,o),
(176,0,q),
(1054,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
22 1 0 1 1 76 0 0 0 1 97 0 1 1 32 77 0 2 2 3 95 4 1 3 3 31 3 78 0 0 0 38 0 38 27 40 45 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
lastChange = "2025-03-02 12:34:22 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1054,1052,o),
(1028,962,o),
(1001,920,qs),
(974,877,o),
(889,802,o),
(830,777,q),
(901,754,o),
(996,680,o),
(1025,634,qs),
(1053,588,o),
(1076,456,o),
(1076,406,qs),
(1076,304,o),
(1006,146,o),
(944,92,qs),
(882,37,o),
(713,-20,o),
(615,-20,qs),
(519,-20,o),
(350,34,o),
(288,86,qs),
(226,138,o),
(153,288,o),
(153,384,q),
(338,384,l),
(338,327,o),
(377,233,o),
(413,200,qs),
(449,167,o),
(552,131,o),
(615,131,qs),
(678,131,o),
(780,164,o),
(816,198,qs),
(852,232,o),
(891,333,o),
(891,402,qs),
(891,470,o),
(846,599,o),
(806,632,qs),
(765,665,o),
(650,697,o),
(581,697,qs),
(449,697,l),
(449,847,l),
(581,847,ls),
(651,847,o),
(758,885,o),
(795,918,qs),
(831,951,o),
(869,1042,o),
(869,1097,q),
(869,1305,l),
(248,1305,l),
(248,1456,l),
(1054,1456,l),
(1054,1094,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
36 31 2 2 3 15 1 1 2 14 1 0 1 3 76 0 2 3 1 3 2 1 128 0 3 3 4 95 0 4 4 32 77 0 1 1 0 97 0 0 0 31 0 78 17 18 41 36 43 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
lastChange = "2025-02-27 12:53:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(924,814,l),
(924,489,l),
(1127,489,l),
(1127,338,l),
(924,338,l),
(924,0,l),
(739,0,l),
(739,338,l),
(75,338,l),
(75,447,l),
(727,1456,l),
(924,1456,l),
(280,489,l),
(739,489,l),
(739,814,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
12 1 0 1 1 76 2 1 0 5 1 3 4 0 3 104 0 6 6 32 77 0 1 1 4 95 0 4 4 31 4 78 18 17 17 17 17 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
lastChange = "2025-03-02 12:32:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1003,1456,l),
(1003,1276,l),
(412,1276,l),
(371,888,l),
(414,913,o),
(534,951,o),
(613,951,qs),
(714,951,o),
(874,881,o),
(930,818,qs),
(986,754,o),
(1046,574,o),
(1046,464,qs),
(1046,360,o),
(990,182,o),
(934,118,qs),
(877,53,o),
(734,-20,o),
(589,-20,q),
(183,-20,l),
(183,164,l),
(589,161,l),
(713,160,o),
(782,232,qs),
(820,272,o),
(861,387,o),
(861,462,qs),
(861,530,o),
(822,648,o),
(785,692,qs),
(748,735,o),
(640,785,o),
(570,785,qs),
(524,785,o),
(457,772,o),
(430,760,qs),
(403,748,o),
(356,714,o),
(331,692,q),
(183,730,l),
(256,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
4 1 5 2 27 15 2 4 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 1 0 95 0 0 0 32 77 0 5 5 2 97 0 2 2 33 77 0 4 4 3 97 0 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 5 4 2 5 105 0 1 1 0 95 0 0 0 32 77 0 4 4 3 97 0 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 50 36 50 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
lastChange = "2025-02-27 13:04:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426,884,l),
(477,913,l),
(516,932,o),
(607,955,o),
(657,955,qs),
(766,955,o),
(924,872,o),
(975,804,qs),
(1026,736,o),
(1074,564,o),
(1074,475,qs),
(1074,373,o),
(1017,193,o),
(960,126,qs),
(903,58,o),
(734,-20,o),
(623,-20,qs),
(511,-20,o),
(341,70,o),
(283,142,qs),
(218,221,o),
(154,432,o),
(154,538,qs),
(154,625,ls),
(154,807,o),
(426,1214,o),
(674,1456,q),
(903,1456,l),
(622,1119,l)
);
},
{
closed = 1;
nodes = (
(510,788,o),
(465,762,qs),
(429,741,o),
(394,707,qs),
(359,661,o),
(341,533,qs),
(341,437,o),
(387,288,o),
(426,237,qs),
(465,186,o),
(567,133,o),
(623,133,qs),
(688,133,o),
(788,183,o),
(823,227,qs),
(857,271,o),
(892,394,o),
(892,466,qs),
(892,530,o),
(860,651,o),
(827,698,qs),
(794,745,o),
(694,801,o),
(627,801,qs),
(580,801,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 5 1 1 0 2 1 106 0 4 4 32 77 0 0 0 3 97 0 3 3 31 3 78 0 0 39 38 31 29 21 19 0 17 0 16 39 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
lastChange = "2025-03-02 20:22:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(910,1294,l),
(906,1283,o),
(843,1202,q),
(831,1192,o),
(580,909,qs),
(449,761,o),
(371,502,q),
(324,377,o),
(309,0,q),
(503,0,l),
(520,271,l),
(540,459,o),
(599,568,q),
(700,786,o),
(848,927,qs),
(1082,1149,o),
(1101,1370,qs),
(1106,1429,o),
(1106,1456,q),
(122,1456,l),
(122,1130,l),
(285,1130,l),
(285,1294,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
10 1 1 2 1 76 3 1 2 2 0 95 0 0 0 32 77 0 1 1 31 1 78 0 0 0 20 0 19 25 17 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
lastChange = "2025-02-27 13:05:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(989,876,o),
(941,828,qs),
(918,805,o),
(862,765,o),
(830,749,q),
(886,725,o),
(977,654,o),
(1010,608,qs),
(1042,562,o),
(1077,454,o),
(1077,393,qs),
(1077,294,o),
(1004,140,o),
(942,88,qs),
(879,35,o),
(711,-20,o),
(615,-20,qs),
(517,-20,o),
(348,34,o),
(286,87,qs),
(223,139,o),
(151,293,o),
(151,393,qs),
(151,454,o),
(185,563,o),
(217,609,qs),
(249,654,o),
(339,726,o),
(395,750,q),
(347,774,o),
(269,841,o),
(242,883,qs),
(215,924,o),
(185,1022,o),
(185,1076,qs),
(185,1171,o),
(249,1320,o),
(306,1371,qs),
(362,1422,o),
(519,1476,o),
(612,1476,qs),
(704,1476,o),
(862,1422,o),
(920,1371,qs),
(978,1320,o),
(1044,1171,o),
(1044,1076,qs),
(1043,1003,o)
);
},
{
closed = 1;
nodes = (
(851,560,o),
(814,597,qs),
(777,633,o),
(674,673,o),
(613,673,qs),
(550,673,o),
(448,633,o),
(412,597,qs),
(376,560,o),
(337,458,o),
(337,397,qs),
(337,334,o),
(376,235,o),
(412,201,qs),
(448,167,o),
(551,131,o),
(615,131,qs),
(676,131,o),
(778,167,o),
(815,201,qs),
(851,235,o),
(892,334,o),
(892,397,qs),
(892,458,o)
);
},
{
closed = 1;
nodes = (
(821,1220,o),
(789,1254,qs),
(756,1287,o),
(666,1324,o),
(612,1324,qs),
(558,1324,o),
(470,1289,o),
(438,1256,qs),
(406,1223,o),
(371,1130,o),
(371,1073,qs),
(371,1016,o),
(406,925,o),
(439,893,qs),
(471,860,o),
(560,825,o),
(614,825,qs),
(667,825,o),
(757,860,o),
(790,893,qs),
(822,925,o),
(858,1017,o),
(858,1073,qs),
(858,1128,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
59 27 17 13 4 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 2 97 0 2 2 32 77 4 1 1 1 3 97 0 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 2 0 0 1 2 0 105 4 1 1 1 3 97 0 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 69 67 51 48 18 37 19 36 39 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
lastChange = "2025-02-27 13:04:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(802,572,l),
(751,543,l),
(712,524,o),
(621,501,o),
(571,501,qs),
(462,501,o),
(304,584,o),
(253,652,qs),
(202,720,o),
(154,892,o),
(154,981,qs),
(154,1083,o),
(211,1263,o),
(268,1330,qs),
(325,1398,o),
(494,1476,o),
(605,1476,qs),
(717,1476,o),
(887,1386,o),
(945,1314,qs),
(1010,1235,o),
(1074,1024,o),
(1074,918,qs),
(1074,831,ls),
(1074,649,o),
(802,242,o),
(554,0,q),
(325,0,l),
(606,337,l)
);
},
{
closed = 1;
nodes = (
(718,668,o),
(763,694,qs),
(799,715,o),
(834,749,qs),
(869,795,o),
(887,923,qs),
(887,1019,o),
(841,1168,o),
(802,1219,qs),
(763,1270,o),
(661,1323,o),
(605,1323,qs),
(540,1323,o),
(440,1273,o),
(405,1229,qs),
(371,1185,o),
(336,1062,o),
(336,990,qs),
(336,926,o),
(368,805,o),
(401,758,qs),
(434,711,o),
(534,655,o),
(601,655,qs),
(648,655,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 1 0 2 4 1 2 105 0 0 0 3 97 0 3 3 32 77 0 4 4 31 4 78 0 0 39 38 31 29 21 19 0 17 0 16 39 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = nine;
unicode = 57;
},
{
glyphname = Aacute;
lastChange = "2025-03-01 23:30:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
lastChange = "2025-03-01 23:30:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
ref = brevecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = Acircumflex;
lastChange = "2025-03-01 23:31:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Adieresis;
lastChange = "2025-03-01 23:32:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
ref = dieresiscomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
6 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 5 4 2 5 104 8 1 1 1 0 95 7 3 2 0 0 30 77 9 6 2 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
7 3 2 0 8 1 1 2 0 1 103 0 2 0 5 4 2 5 104 9 6 2 4 4 31 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
7 7 18 17 16 15 7 14 7 14 17 17 19 17 17 16 10 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Agrave;
lastChange = "2025-03-02 10:23:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
ref = gravecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Amacron;
lastChange = "2025-03-02 10:22:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
ref = macroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = Aogonek;
lastChange = "2025-03-16 16:47:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-58,0);
ref = A;
scale = (0.8986,1);
},
{
pos = (277,0);
ref = ogonek;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
2 1 0 1 1 76 11 6 2 5 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 4 5 0 4 104 0 2 0 3 2 3 99 0 1 1 30 77 6 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 1 133 0 0 0 4 5 0 4 104 0 2 0 3 2 3 99 6 1 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
3 3 3 14 3 14 18 17 18 19 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = Aring;
lastChange = "2025-03-02 10:24:37 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
ref = ringcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
31 15 8 3 1 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 0 6 7 4 6 105 0 0 0 2 3 0 2 103 0 1 1 7 97 9 1 7 7 39 77 8 5 2 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 4 0 6 7 4 6 105 9 1 7 0 1 0 7 1 105 0 0 0 2 3 0 2 103 8 5 2 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
33 33 9 9 33 47 33 46 40 38 9 32 9 32 40 17 20 35 17 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = Atilde;
lastChange = "2025-03-02 10:25:21 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = AE;
lastChange = "2025-03-02 13:20:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(571,1170,l),
(376,538,l),
(571,538,l)
);
},
{
closed = 1;
nodes = (
(1204,157,l),
(1204,0,l),
(571,0,l),
(571,377,l),
(326,377,l),
(209,0,l),
(24,0,l),
(494,1456,l),
(1196,1456,l),
(1197,1298,l),
(755,1298,l),
(755,830,l),
(1132,830,l),
(1132,673,l),
(755,673,l),
(755,157,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 0 5 0 4 5 103 0 0 0 8 6 0 8 103 3 1 1 1 2 95 0 2 2 30 77 0 6 6 7 95 10 9 2 7 7 31 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 2 3 1 1 4 2 1 103 0 4 0 5 0 4 5 103 0 0 0 8 6 0 8 103 0 6 6 7 95 10 9 2 7 7 31 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
4 4 4 19 4 19 17 17 17 17 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Cacute;
lastChange = "2025-03-02 10:25:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = Ccaron;
lastChange = "2025-03-16 17:52:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
ref = caroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = Ccedilla;
lastChange = "2025-03-02 10:26:19 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
ref = cedilla;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 1 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 4 0 4 3 0 128 0 0 5 4 0 5 126 0 5 0 1 5 1 99 0 4 4 2 97 0 2 2 36 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 0 4 3 0 128 0 0 5 4 0 5 126 0 2 0 4 3 2 4 105 0 5 1 1 5 89 0 5 5 1 95 0 1 5 1 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 36 19 44 21 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Ccircumflex;
lastChange = "2025-03-02 10:27:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ccircumflex;
unicode = 264;
},
{
glyphname = Cdotaccent;
lastChange = "2025-03-02 10:28:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
ref = dotaccentcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = Dcaron;
lastChange = "2025-03-03 22:02:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (-150,0);
ref = caroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = Dcroat;
lastChange = "2025-03-02 11:33:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (62,0);
ref = D;
},
{
pos = (62,0);
ref = uniE336;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 0 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 0 6 7 2 3 4 0 3 104 0 1 1 30 77 0 4 4 2 95 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 1 133 5 1 0 6 7 2 3 4 0 3 104 0 4 4 2 95 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 33 32 31 30 17 15 0 14 0 14 38 33 17 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = Eth;
lastChange = "2025-03-02 10:32:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Dcroat;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 0 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 0 6 7 2 3 4 0 3 104 0 1 1 30 77 0 4 4 2 95 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 1 133 5 1 0 6 7 2 3 4 0 3 104 0 4 4 2 95 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 33 32 31 30 17 15 0 14 0 14 38 33 17 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Eacute;
lastChange = "2025-03-02 10:34:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ebreve;
lastChange = "2025-03-02 10:37:29 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = brevecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ebreve;
unicode = 276;
},
{
glyphname = Ecaron;
lastChange = "2025-03-02 10:37:46 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = caroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = Ecircumflex;
lastChange = "2025-03-02 10:38:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
lastChange = "2025-03-02 10:38:18 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = dieresiscomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 2
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Edotaccent;
lastChange = "2025-03-02 10:38:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = dotaccentcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = Egrave;
lastChange = "2025-03-02 10:38:55 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = gravecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Emacron;
lastChange = "2025-03-02 10:39:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = macroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = Eogonek;
lastChange = "2025-03-16 16:47:31 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-110,0);
ref = E;
},
{
pos = (266,0);
ref = ogonek;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 0 6 7 5 6 103 0 0 0 1 0 1 99 0 4 4 3 95 0 3 3 30 77 0 7 7 2 95 9 8 2 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 4 5 3 4 103 0 5 0 6 7 5 6 103 0 0 0 1 0 1 99 0 7 7 2 95 9 8 2 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 17 0 17 17 17 17 17 17 17 17 17 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = uni018F;
lastChange = "2025-03-02 10:43:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
angle = 180;
pos = (1333,1449);
ref = e;
scale = (1.1706,1.3341);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 5 4 5 6 4 128 0 4 7 1 1 0 4 1 103 0 5 5 2 97 0 2 2 30 77 0 0 0 3 97 0 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 5 4 5 6 4 128 0 4 7 1 1 0 4 1 103 0 5 5 2 97 0 2 2 30 77 0 0 0 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
8 1 6 5 4 5 6 4 128 0 2 0 5 6 2 5 105 0 4 7 1 1 0 4 1 103 0 0 0 3 97 0 3 3 37 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
9 9 0 0 9 35 9 35 32 30 27 26 22 20 14 12 0 8 0 8 35 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni018F;
unicode = 399;
},
{
glyphname = Gbreve;
lastChange = "2025-03-02 10:43:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
ref = brevecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = Gcircumflex;
lastChange = "2025-03-02 10:44:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Gcircumflex;
unicode = 284;
},
{
glyphname = Gdotaccent;
lastChange = "2025-03-02 10:44:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
ref = dotaccentcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = Hbar;
lastChange = "2025-03-02 10:57:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,0,l),
(315,673,l),
(912,673,l),
(912,0,l),
(1087,0,l),
(1087,1082,l),
(1204,1082,l),
(1204,1242,l),
(1087,1242,l),
(1087,1456,l),
(912,1456,l),
(912,1242,l),
(315,1242,l),
(315,1456,l),
(141,1456,l),
(141,1242,l),
(24,1242,l),
(24,1082,l),
(141,1082,l),
(141,0,l)
);
},
{
closed = 1;
nodes = (
(315,1082,l),
(912,1082,l),
(912,830,l),
(315,830,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 3 2 1 10 6 2 0 11 1 0 103 13 1 11 0 8 7 11 8 103 4 1 2 2 30 77 12 9 2 7 7 31 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
5 3 2 1 10 6 2 0 11 1 0 103 13 1 11 0 8 7 11 8 103 4 1 2 2 7 95 12 9 2 7 7 31 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
20 20 0 0 20 23 20 23 22 21 0 19 0 19 17 17 17 17 17 17 17 17 17 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = Hcircumflex;
lastChange = "2025-03-02 10:50:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Hcircumflex;
unicode = 292;
},
{
glyphname = IJ;
lastChange = "2025-03-16 15:30:56 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1211,473,ls),
(1211,372,o),
(1159,156,o),
(1096,95,qs),
(1033,33,o),
(876,-9,o),
(808,10,qs),
(736,30,o),
(657,72,o),
(614,130,qs),
(570,187,o),
(551,350,o),
(551,451,q),
(721,451,l),
(723,390,o),
(728,286,o),
(754,248,qs),
(781,209,o),
(847,187,o),
(893,187,qs),
(929,187,o),
(976,220,o),
(995,253,qs),
(1021,299,o),
(1022,411,o),
(1022,473,qs),
(1022,1267,l),
(651,1267,l),
(651,1456,l),
(1211,1456,l)
);
},
{
closed = 1;
nodes = (
(338,1266,l),
(477,1266,l),
(477,1456,l),
(17,1456,l),
(17,1266,l),
(148,1266,l),
(148,190,l),
(17,190,l),
(17,0,l),
(477,0,l),
(477,190,l),
(338,190,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 7 1 0 1 7 0 128 3 1 1 1 2 95 11 9 2 2 2 30 77 8 4 2 0 0 5 98 6 10 2 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 1 0 1 7 0 128 11 9 2 2 3 1 1 7 2 1 103 8 4 2 0 0 5 98 6 10 2 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 1 0 1 7 0 128 11 9 2 2 3 1 1 7 2 1 103 4 1 0 0 5 97 6 10 2 5 5 31 77 0 8 8 5 98 6 10 2 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 0 1 7 0 128 0 2 3 1 1 7 2 1 103 11 1 9 9 30 77 4 1 0 0 5 97 6 10 2 5 5 31 77 0 8 8 5 98 6 10 2 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
11 1 9 2 9 133 0 7 1 0 1 7 0 128 0 2 3 1 1 7 2 1 103 4 1 0 0 5 97 6 10 2 5 5 31 77 0 8 8 5 98 6 10 2 5 5 31 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
12 12 0 0 12 30 12 30 28 25 23 22 18 15 0 11 0 11 17 17 17 17 17 12 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = Iacute;
lastChange = "2025-03-02 10:56:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Ibreve;
lastChange = "2025-03-02 10:56:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = brevecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ibreve;
unicode = 300;
},
{
glyphname = Icircumflex;
lastChange = "2025-03-02 10:57:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
lastChange = "2025-03-02 10:57:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = dieresiscomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 2
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Idotaccent;
lastChange = "2025-03-03 14:07:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = dotaccentcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Idotaccent;
production = Idotaccent;
unicode = 304;
},
{
glyphname = Igrave;
lastChange = "2025-03-02 10:58:19 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = gravecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Imacron;
lastChange = "2025-03-02 10:58:28 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = macroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = Iogonek;
lastChange = "2025-03-02 10:58:43 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = ogonek;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 1 0 1 99 6 1 4 4 5 95 0 5 5 30 77 7 1 3 3 2 95 9 8 2 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 6 1 4 3 5 4 103 0 0 0 1 0 1 99 7 1 3 3 2 95 9 8 2 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 17 0 17 17 17 17 17 17 17 17 17 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = Itilde;
lastChange = "2025-03-02 10:59:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = J_acutecomb;
lastChange = "2025-03-02 11:00:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = J;
},
{
pos = (200,0);
ref = acutecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 4 5 4 133 7 1 5 3 5 133 6 1 3 1 3 133 0 1 2 1 133 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 19 19 0 0 19 22 19 22 21 20 0 18 0 18 50 20 51 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = J_acutecomb;
},
{
glyphname = Jacute;
lastChange = "2025-03-02 11:01:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = J;
},
{
pos = (200,0);
ref = acutecomb;
}
);
width = 1229;
}
);
},
{
glyphname = Jcircumflex;
lastChange = "2025-03-02 11:02:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = J;
},
{
pos = (200,0);
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Jcircumflex;
unicode = 308;
},
{
glyphname = Lacute;
lastChange = "2025-03-02 11:02:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (-360,0);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
240
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = Lcaron;
lastChange = "2025-03-02 11:03:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (-280,0);
ref = caroncomb.alt;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 3 133 6 1 4 0 1 0 4 1 128 0 0 0 30 77 0 1 1 2 96 5 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 3 0 3 133 0 0 4 0 133 6 1 4 1 4 133 0 1 1 2 96 5 1 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
6 6 0 0 6 9 6 9 8 7 0 5 0 5 17 17 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = Ldot;
lastChange = "2025-03-02 11:04:40 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (100,0);
ref = periodcentered;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
99
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ldot;
unicode = 319;
},
{
glyphname = Lslash;
lastChange = "2025-03-16 16:48:29 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-137,0);
ref = uniE02F;
},
{
pos = (133,0);
ref = L;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
10 9 8 7 4 3 2 1 8 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 30 77 0 1 1 2 96 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 0 133 0 1 1 2 96 3 1 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 13 0 13 21 21 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = Nacute;
lastChange = "2025-03-02 11:06:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = Ncaron;
lastChange = "2025-03-02 11:06:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
ref = caroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = Ntilde;
lastChange = "2025-03-02 11:07:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 31 2 8 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 2 32 77 0 4 4 0 97 0 0 0 32 77 10 5 2 3 3 1 97 0 1 1 30 77 7 1 6 6 33 77 11 9 2 8 8 31 8 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
10 1 5 4 3 4 5 114 0 2 2 32 77 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 7 1 6 6 33 77 11 9 2 8 8 31 8 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
10 1 5 4 3 4 5 3 128 0 2 2 32 77 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 7 1 6 6 33 77 11 9 2 8 8 31 8 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 1 0 2 1 128 10 1 5 4 3 4 5 3 128 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 7 1 6 6 33 77 11 9 2 8 8 31 8 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 2 0 1 0 2 1 128 10 1 5 4 3 4 5 3 128 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 7 1 6 6 8 95 11 9 2 8 8 31 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 1 0 2 1 128 10 1 5 4 3 4 5 3 128 0 1 0 3 6 1 3 106 0 4 4 0 97 0 0 0 32 77 7 1 6 6 8 95 11 9 2 8 8 31 8 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
28 28 0 0 28 37 28 37 35 34 33 32 30 29 0 27 0 27 35 35 19 35 35 12 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Eng;
lastChange = "2025-03-02 11:17:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1053,-171,o),
(1010,-300,o),
(970,-345,qs),
(929,-390,o),
(811,-437,o),
(735,-437,qs),
(705,-437,o),
(654,-429,o),
(625,-419,q),
(639,-272,l),
(659,-278,o),
(717,-285,o),
(735,-285,qs),
(761,-285,o),
(802,-267,o),
(818,-251,qs),
(842,-225,o),
(867,-142,o),
(867,-89,qs),
(867,2,l),
(360,1069,l),
(360,0,l),
(175,0,l),
(175,1456,l),
(360,1456,l),
(363,1450,l),
(867,389,l),
(867,1456,l),
(1052,1456,l),
(1053,-89,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 3 2 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
1 1 0 0 30 77 5 1 4 4 31 77 0 3 3 2 97 0 2 2 41 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 2 3 2 101 1 1 0 0 30 77 5 1 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 2 3 2 101 1 1 0 0 4 95 5 1 4 4 31 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 19 0 19 33 35 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = Oacute;
lastChange = "2025-03-02 11:08:05 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Obreve;
lastChange = "2025-03-02 11:08:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
ref = brevecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Obreve;
unicode = 334;
},
{
glyphname = Ocircumflex;
lastChange = "2025-03-02 11:08:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Odieresis;
lastChange = "2025-03-02 11:08:46 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
ref = dieresiscomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 0 4 5 6 4 105 3 1 1 1 0 95 2 1 0 0 32 77 8 1 5 5 7 97 9 1 7 7 37 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 3 1 1 6 0 1 103 0 6 0 4 5 6 4 105 8 1 5 5 7 97 9 1 7 7 37 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
24 24 8 8 24 39 24 38 32 30 8 23 8 22 39 17 17 17 16 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = Ograve;
lastChange = "2025-03-02 11:08:56 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
ref = gravecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Ohungarumlaut;
lastChange = "2025-03-02 11:09:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
ref = hungarumlautcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 2
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = Omacron;
lastChange = "2025-03-02 11:09:37 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
ref = macroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = Oslash;
lastChange = "2025-03-16 15:05:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (0,130);
ref = slash;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
10 7 2 5 0 43 30 29 3 4 5 23 20 2 2 4 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 133 0 3 2 3 134 0 5 5 0 97 0 0 0 30 77 0 4 4 2 98 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 133 0 3 2 3 134 0 0 0 5 4 0 5 105 0 4 4 2 98 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 41 18 40 18 36 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Otilde;
lastChange = "2025-03-02 11:16:02 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = OE;
lastChange = "2025-03-16 14:49:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1198,0,l),
(1198,157,l),
(849,157,l),
(849,673,l),
(1087,673,l),
(1087,830,l),
(849,830,l),
(849,1298,l),
(1189,1298,l),
(1189,1456,l),
(425,1456,l),
(320,1456,o),
(220,1416,o),
(146,1344,c),
(72,1272,o),
(30,1174,o),
(30,1071,c),
(30,385,l),
(30,282,o),
(72,185,o),
(146,112,c),
(220,40,o),
(320,0,o),
(425,0,cs),
(664,0,l)
);
},
{
closed = 1;
nodes = (
(283,161,o),
(211,269,o),
(211,404,c),
(211,1052,l),
(211,1187,o),
(283,1295,o),
(421,1295,c),
(414,1295,l),
(552,1295,o),
(664,1187,o),
(664,1052,c),
(664,404,l),
(664,269,o),
(552,161,o),
(414,161,c),
(421,161,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
48 1 0 2 0 1 4 0 17 1 1 5 31 1 7 1 4 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
48 1 0 2 0 1 4 0 17 1 6 5 31 1 7 1 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
48 1 0 2 0 1 4 3 17 1 6 5 31 1 7 1 4 76
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 0 5 1 4 5 103 3 1 0 0 2 97 9 1 2 2 30 77 6 1 1 1 7 97 8 1 7 7 31 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 0 5 6 4 5 103 3 1 0 0 2 97 9 1 2 2 30 77 0 6 6 7 97 8 1 7 7 31 77 0 1 1 7 97 8 1 7 7 31 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
9 1 2 3 1 0 4 2 0 105 0 4 0 5 6 4 5 103 0 6 6 7 97 8 1 7 7 31 77 0 1 1 7 97 8 1 7 7 31 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 3 2 0 89 9 1 2 0 3 4 2 3 103 0 4 0 5 6 4 5 103 0 6 6 7 97 8 1 7 7 31 77 0 1 1 7 97 8 1 7 7 31 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
47 45 35 17 17 17 17 17 21 39 35 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = OE;
unicode = 338;
},
{
glyphname = Thorn;
lastChange = "2025-03-02 11:17:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(630,1163,ls),
(747,1163,o),
(928,1100,o),
(991,1044,qs),
(1053,987,o),
(1118,831,o),
(1118,738,qs),
(1118,645,o),
(1053,489,o),
(991,433,qs),
(928,376,o),
(747,313,o),
(630,313,qs),
(353,313,l),
(353,0,l),
(168,0,l),
(168,1456,l),
(353,1456,l),
(353,1163,l)
);
},
{
closed = 1;
nodes = (
(630,465,ls),
(708,465,o),
(822,510,o),
(860,548,qs),
(897,585,o),
(933,683,o),
(933,736,qs),
(933,790,o),
(897,889,o),
(860,928,qs),
(823,966,o),
(708,1011,o),
(630,1011,qs),
(353,1011,l),
(353,465,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 1 0 5 4 1 5 103 0 4 0 2 3 4 2 103 0 0 0 3 95 6 1 3 3 31 3 78 0 0 19 17 14 12 0 11 0 11 35 33 17 7 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = Racute;
lastChange = "2025-03-02 11:18:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (-100,0);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = Rcaron;
lastChange = "2025-03-02 11:18:37 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (-100,0);
ref = caroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 2 0 28 1 7 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
1 1 0 2 0 133 0 2 5 2 133 0 3 0 7 6 3 7 103 0 4 4 5 95 0 5 5 30 77 9 8 2 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
1 1 0 2 0 133 0 2 5 2 133 0 5 0 4 3 5 4 104 0 3 0 7 6 3 7 103 9 8 2 6 6 31 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
18 18 18 35 18 35 18 25 34 38 33 17 18 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = Sacute;
lastChange = "2025-03-02 11:19:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
9 1 7 6 4 6 7 4 128 0 2 5 3 5 2 3 128 0 6 8 1 5 2 6 5 103 0 0 0 4 97 0 4 4 36 77 0 3 3 1 97 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
9 1 7 6 4 6 7 4 128 0 2 5 3 5 2 3 128 0 4 0 0 5 4 0 105 0 6 8 1 5 2 6 5 103 0 3 3 1 97 0 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
41 41 0 0 41 44 41 44 43 42 0 40 0 40 43 35 18 43 34 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = Scaron;
lastChange = "2025-03-02 11:19:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
ref = caroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 8 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 8 6 4 6 8 4 128 0 2 5 3 5 2 3 128 7 1 6 9 1 5 2 6 5 103 0 0 0 4 97 0 4 4 36 77 0 3 3 1 97 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 8 6 4 6 8 4 128 0 2 5 3 5 2 3 128 0 4 0 0 5 4 0 105 7 1 6 9 1 5 2 6 5 103 0 3 3 1 97 0 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 47 46 45 44 42 41 0 40 0 40 43 35 18 43 34 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = Scedilla;
lastChange = "2025-03-16 16:48:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
ref = cedilla;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
7 1 6 0 3 0 6 3 128 0 3 4 0 3 4 126 0 1 2 1 134 0 0 0 5 97 0 5 5 36 77 0 4 4 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
7 1 6 0 3 0 6 3 128 0 3 4 0 3 4 126 0 1 2 1 134 0 5 0 0 6 5 0 105 0 4 4 2 97 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 44 0 44 43 35 19 17 30 18 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Scedilla;
unicode = 350;
},
{
glyphname = Scircumflex;
lastChange = "2025-03-02 11:19:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
45 1 7 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 7 6 133 8 1 7 4 7 133 9 1 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 0 0 4 97 0 4 4 36 77 0 3 3 1 97 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 6 7 6 133 8 1 7 4 7 133 9 1 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 4 0 0 5 4 0 106 0 3 3 1 97 0 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 47 46 44 43 42 41 0 40 0 40 43 35 18 43 34 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Scircumflex;
unicode = 348;
},
{
glyphname = uni1E9E;
lastChange = "2025-03-02 11:20:18 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,1112,ls),
(272,1261,o),
(373,1358,qs),
(428,1412,o),
(579,1412,qs),
(644,1412,o),
(717,1412,qs),
(814,1412,o),
(770,1326,o),
(668,1169,qs),
(520,940,l),
(520,737,l),
(663,737,o),
(750,675,qs),
(859,598,o),
(860,453,qs),
(860,446,ls),
(860,321,o),
(793,250,qs),
(692,185,o),
(495,182,q),
(495,0,l),
(763,0,o),
(939,117,qs),
(1051,213,o),
(1051,440,qs),
(1052,646,o),
(939,751,qs),
(814,868,o),
(692,883,q),
(1141,1597,l),
(847,1599,o),
(589,1598,qs),
(579,1598,ls),
(378,1597,o),
(256,1509,qs),
(87,1389,o),
(87,1116,qs),
(87,0,l),
(269,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
29 28 10 3 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 0 95 0 0 0 32 77 0 2 2 1 97 5 4 2 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 3 2 0 3 103 0 2 2 1 97 5 4 2 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 41 77 17 25 68 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni1E9E;
unicode = 7838;
},
{
glyphname = Tbar;
lastChange = "2025-03-02 11:21:26 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
ref = uniE337;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
6 1 2 8 7 2 1 0 2 1 103 5 1 3 3 4 95 0 4 4 30 77 0 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 4 5 1 3 2 4 3 103 6 1 2 8 7 2 1 0 2 1 103 0 0 0 31 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 15 0 15 17 17 17 17 17 17 17 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Tbar;
unicode = 358;
},
{
glyphname = Tcaron;
lastChange = "2025-03-02 11:21:40 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
ref = caroncomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
1 1 0 2 0 133 0 2 4 2 133 5 1 3 3 4 95 0 4 4 30 77 7 1 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
1 1 0 2 0 133 0 2 4 2 133 0 4 5 1 3 6 4 3 104 7 1 6 6 31 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
7 7 7 14 7 14 17 17 18 17 18 16 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = Uacute;
lastChange = "2025-03-02 11:22:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ubreve;
lastChange = "2025-03-02 11:22:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = brevecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
11 7 5 1 4 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 1 2 0 1 105 4 1 2 2 30 77 0 3 3 5 97 0 5 5 37 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
4 1 2 1 3 1 2 3 128 0 0 0 1 2 0 1 105 0 3 3 5 97 0 5 5 37 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 20 36 18 36 34 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = Ucircumflex;
lastChange = "2025-03-02 11:22:22 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
lastChange = "2025-03-02 11:22:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = dieresiscomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
6 1 4 1 5 1 4 5 128 9 3 8 3 1 1 0 95 2 1 0 0 32 77 0 5 5 7 97 0 7 7 37 7 78 4 4 0 0 26 24 20 19 15 13 9 8 4 7 4 7 6 5 0 3 0 3 17 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Ugrave;
lastChange = "2025-03-02 11:23:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = gravecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uhungarumlaut;
lastChange = "2025-03-02 11:23:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = hungarumlautcomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
6 1 4 7 1 5 0 4 5 103 2 1 0 0 30 77 0 1 1 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
2 1 0 5 1 5 0 1 128 6 1 4 7 1 5 0 4 5 103 0 1 1 3 97 0 3 3 37 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 17 17 20 36 20 36 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = Umacron;
lastChange = "2025-03-02 11:23:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = macroncomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 6 1 1 2 0 1 103 4 1 2 2 30 77 0 3 3 5 97 0 5 5 37 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
4 1 2 1 3 1 2 3 128 0 0 6 1 1 2 0 1 103 0 3 3 5 97 0 5 5 37 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 22 20 16 15 11 9 5 4 0 3 0 3 17 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = Uogonek;
lastChange = "2025-03-02 11:23:57 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = ogonek;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
21 16 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 100 2 1 0 0 30 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 1 3 1 133 0 3 4 4 3 87 0 3 3 4 96 0 4 3 4 80
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 20 20 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = Uring;
lastChange = "2025-03-02 11:24:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = ringcomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 0 1 2 0 105 8 1 1 9 1 3 4 1 3 105 6 1 4 4 30 77 0 5 5 7 97 0 7 7 37 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 5 3 4 5 128 0 2 0 0 1 2 0 105 8 1 1 9 1 3 4 1 3 105 0 5 5 7 97 0 7 7 37 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
8 8 0 0 34 32 28 27 23 21 17 16 8 15 8 14 12 10 0 7 0 6 34 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = Utilde;
lastChange = "2025-03-02 11:24:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
ref = tildecomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 1 1 2 114 0 0 0 4 3 0 4 105 0 1 10 5 2 3 6 1 3 106 8 1 6 6 30 77 0 7 7 9 97 0 9 9 37 9 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 0 1 1 2 114 10 1 5 4 3 4 5 114 0 0 0 4 5 0 4 105 0 1 0 3 6 1 3 106 8 1 6 6 30 77 0 7 7 9 97 0 9 9 37 9 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 2 0 1 1 2 114 10 1 5 4 3 4 5 3 128 0 0 0 4 5 0 4 105 0 1 0 3 6 1 3 106 8 1 6 6 30 77 0 7 7 9 97 0 9 9 37 9 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 0 1 0 2 1 128 10 1 5 4 3 4 5 3 128 0 0 0 4 5 0 4 105 0 1 0 3 6 1 3 106 8 1 6 6 30 77 0 7 7 9 97 0 9 9 37 9 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 2 0 1 0 2 1 128 10 1 5 4 3 4 5 3 128 8 1 6 3 7 3 6 7 128 0 0 0 4 5 0 4 105 0 1 0 3 6 1 3 106 0 7 7 9 97 0 9 9 37 9 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
0 0 46 44 40 39 35 33 29 28 0 27 0 27 35 35 19 35 35 11 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = Wacute;
lastChange = "2025-03-02 11:24:29 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 11 9 3 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 133 7 1 6 1 6 133 0 2 1 0 1 2 0 128 3 1 1 1 30 77 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 133 7 1 6 1 6 133 0 2 1 0 1 2 0 128 3 1 1 1 0 95 4 1 0 0 31 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 25 25 28 25 28 18 20 21 21 20 17 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Wacute;
unicode = 7810;
},
{
glyphname = Wcircumflex;
lastChange = "2025-03-02 11:24:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
29 1 6 5 14 11 9 3 0 2 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 133 7 1 6 1 6 133 0 2 1 0 1 2 0 128 3 1 1 1 30 77 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 133 7 1 6 1 6 133 0 2 1 0 1 2 0 128 3 1 1 1 0 95 4 1 0 0 31 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
18 17 17 20 21 21 20 17 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = Wdieresis;
lastChange = "2025-03-02 11:24:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
ref = dieresiscomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 11 9 3 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 0 1 2 0 128 7 1 5 8 1 6 1 5 6 103 3 1 1 1 30 77 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 0 1 2 0 128 7 1 5 8 1 6 1 5 6 103 3 1 1 1 0 95 4 1 0 0 31 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 17 17 17 20 21 21 20 17 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Wdieresis;
unicode = 7812;
},
{
glyphname = Wgrave;
lastChange = "2025-03-02 11:25:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
ref = gravecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 11 9 3 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 5 133 0 6 1 6 133 0 2 1 0 1 2 0 128 3 1 1 1 30 77 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 6 5 133 0 6 1 6 133 0 2 1 0 1 2 0 128 3 1 1 1 0 95 4 1 0 0 31 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 20 21 21 20 17 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Wgrave;
unicode = 7808;
},
{
glyphname = Yacute;
lastChange = "2025-03-02 11:25:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
220
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Ycircumflex;
lastChange = "2025-03-02 11:26:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
ref = circumflexcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
4 1 1 0 13 10 7 3 5 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 0 133 2 1 1 3 1 133 4 1 3 3 30 77 0 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 0 133 2 1 1 3 1 133 4 1 3 5 3 133 0 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 18 18 18 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = Ydieresis;
lastChange = "2025-03-02 11:26:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
ref = dieresiscomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 11 8 3 6 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
2 1 0 3 1 1 4 0 1 103 5 1 4 4 30 77 0 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
5 1 4 1 6 1 4 6 128 2 1 0 3 1 1 4 0 1 103 0 6 6 31 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
18 18 18 17 17 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Ygrave;
lastChange = "2025-03-02 11:26:23 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
ref = gravecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
6 3 0 3 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 4 3 133 0 4 0 4 133 1 1 0 0 30 77 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 4 3 133 0 4 0 4 133 1 1 0 2 0 133 0 2 2 31 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 17 18 18 17 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = Zacute;
lastChange = "2025-03-02 11:26:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
ref = acutecomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 3 0 7 1 2 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 5 4 133 6 1 5 0 5 133 0 3 3 0 95 0 0 0 30 77 0 1 1 2 95 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 4 5 4 133 6 1 5 0 5 133 0 0 0 3 1 0 3 104 0 1 1 2 95 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
10 10 10 13 10 13 18 18 17 18 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = Zcaron;
lastChange = "2025-03-02 11:26:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
ref = caroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
2 1 2 0 9 1 6 3 14 1 5 4 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
1 1 0 2 0 133 0 2 3 2 133 0 6 6 3 95 0 3 3 30 77 0 4 4 5 95 0 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
1 1 0 2 0 133 0 2 3 2 133 0 3 0 6 4 3 6 104 0 4 4 5 95 0 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
18 17 18 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = Zdotaccent;
lastChange = "2025-03-02 11:27:05 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
ref = dotaccentcomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
6 1 5 2 11 1 4 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 2 0 1 103 0 5 5 2 95 0 2 2 30 77 0 3 3 4 95 0 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 1 2 0 1 103 0 2 0 5 3 2 5 103 0 3 3 4 95 0 4 4 31 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 17 18 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = uniA78B;
lastChange = "2025-03-02 12:23:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(723,456,l),
(764,1456,l),
(464,1456,l),
(503,456,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 95 0 0 0 30 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uniA78B;
unicode = 42891;
},
{
glyphname = uni0122;
lastChange = "2025-03-02 11:28:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHW[ ]	/* 1 value pushed */
-1078
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0122;
unicode = 290;
},
{
glyphname = uni0136;
lastChange = "2025-03-02 11:28:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHW[ ]	/* 1 value pushed */
-1078
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0136;
unicode = 310;
},
{
glyphname = uni013B;
lastChange = "2025-03-02 11:28:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHW[ ]	/* 1 value pushed */
-1078
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni013B;
unicode = 315;
},
{
glyphname = uni0145;
lastChange = "2025-03-02 11:28:36 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHW[ ]	/* 1 value pushed */
-1078
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0145;
unicode = 325;
},
{
glyphname = uni0156;
lastChange = "2025-03-02 11:28:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 5 1 5 0 1 128 8 1 1 1 132 0 2 0 6 5 2 6 103 0 3 3 4 95 0 4 4 30 77 9 7 2 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 5 1 5 0 1 128 8 1 1 1 132 0 4 0 3 2 4 3 103 0 2 0 6 5 2 6 103 9 7 2 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
15 15 0 0 15 32 15 32 31 30 28 27 18 16 14 12 6 4 0 3 0 3 17 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0156;
unicode = 342;
},
{
glyphname = uni0162;
lastChange = "2025-03-03 12:30:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
ref = cedilla;
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
1 1 3 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 3 0 4 0 3 4 128 2 1 0 0 1 95 0 1 1 30 77 5 1 4 4 35 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 3 0 4 0 3 4 128 0 1 2 1 0 3 1 0 103 5 1 4 4 35 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 10 0 10 17 17 17 18 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = uni0187;
lastChange = "2025-03-16 14:16:13 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-59,0);
ref = C;
scale = (0.9013,1);
},
{
pos = (270,674);
ref = uniE100;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
8 1 3 4 0 4 3 0 128 0 0 5 4 0 5 126 0 6 0 7 2 6 7 105 0 4 4 2 97 0 2 2 36 77 0 5 5 1 97 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
8 1 3 4 0 4 3 0 128 0 0 5 4 0 5 126 0 6 0 7 2 6 7 105 0 2 0 4 3 2 4 105 0 5 5 1 97 0 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
18 33 38 39 36 19 42 51 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0187;
unicode = 391;
},
{
glyphname = uni0189;
lastChange = "2025-03-02 11:34:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Dcroat;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 0 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 0 6 7 2 3 4 0 3 104 0 1 1 30 77 0 4 4 2 95 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 1 133 5 1 0 6 7 2 3 4 0 3 104 0 4 4 2 95 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 33 32 31 30 17 15 0 14 0 14 38 33 17 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0189;
unicode = 393;
},
{
glyphname = uni0218;
lastChange = "2025-03-02 12:12:22 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
8 1 5 0 2 0 5 2 128 0 6 1 7 1 6 7 128 0 2 9 1 7 2 7 99 0 0 0 4 97 0 4 4 36 77 0 3 3 1 97 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
8 1 5 0 2 0 5 2 128 0 6 1 7 1 6 7 128 0 4 0 0 5 4 0 105 0 2 9 1 7 2 7 99 0 3 3 1 97 0 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
41 41 0 0 41 44 41 44 43 42 0 40 0 40 43 35 18 43 34 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0218;
unicode = 536;
},
{
glyphname = uni021A;
lastChange = "2025-03-02 12:12:36 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 5 1 5 0 1 128 6 1 1 1 132 4 1 2 2 3 95 0 3 3 30 77 7 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 5 1 5 0 1 128 6 1 1 1 132 0 3 4 1 2 5 3 2 103 7 1 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
4 4 0 0 4 11 4 11 10 9 8 7 6 5 0 3 0 3 17 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = uni0243;
lastChange = "2025-03-02 12:14:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = B;
},
{
ref = uniECB0;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 7 0 3 103 9 1 7 0 6 2 7 6 103 0 1 1 4 95 0 4 4 30 77 0 2 2 5 95 8 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 0 1 0 4 1 103 0 0 0 3 7 0 3 103 9 1 7 0 6 2 7 6 103 0 2 2 5 95 8 1 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
44 44 23 23 44 47 44 47 46 45 23 43 23 42 34 38 33 39 32 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0243;
unicode = 579;
},
{
glyphname = uni1E20;
lastChange = "2025-03-02 12:15:56 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
ref = macroncomb;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 1 6 0 4 1 2 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 5 1 5 4 1 128 0 7 9 1 8 3 7 8 103 0 1 0 0 6 1 0 103 0 5 5 3 97 0 3 3 36 77 0 6 6 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 5 1 5 4 1 128 0 7 9 1 8 3 7 8 103 0 3 0 5 4 3 5 105 0 1 0 0 6 1 0 103 0 6 6 2 97 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
37 37 37 40 37 40 19 38 34 19 42 34 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni1E20;
unicode = 7712;
},
{
glyphname = uni1EBC;
lastChange = "2025-03-02 12:16:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
ref = tildecomb;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 6 7 7 8 114 0 6 0 10 9 6 10 105 0 7 13 11 2 9 0 7 9 106 0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 30 77 0 4 4 5 95 12 1 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 8 6 7 7 8 114 13 1 11 10 9 10 11 114 0 6 0 10 11 6 10 105 0 7 0 9 0 7 9 106 0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 30 77 0 4 4 5 95 12 1 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 8 6 7 7 8 114 13 1 11 10 9 10 11 9 128 0 6 0 10 11 6 10 105 0 7 0 9 0 7 9 106 0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 30 77 0 4 4 5 95 12 1 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 8 6 7 6 8 7 128 13 1 11 10 9 10 11 9 128 0 6 0 10 11 6 10 105 0 7 0 9 0 7 9 106 0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 30 77 0 4 4 5 95 12 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 8 6 7 6 8 7 128 13 1 11 10 9 10 11 9 128 0 6 0 10 11 6 10 105 0 7 0 9 0 7 9 106 0 0 0 1 2 0 1 103 0 2 0 3 4 2 3 103 0 4 4 5 95 12 1 5 5 31 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
12 12 0 0 12 39 12 39 36 34 31 29 26 25 22 20 17 15 0 11 0 11 17 17 17 17 17 14 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni1EBC;
unicode = 7868;
},
{
glyphname = uni1EF8;
lastChange = "2025-03-02 12:16:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
6 3 0 3 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 4 4 5 114 0 3 0 7 6 3 7 105 0 4 9 8 2 6 0 4 6 106 1 1 0 0 30 77 0 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 3 4 4 5 114 9 1 8 7 6 7 8 114 0 3 0 7 8 3 7 105 0 4 0 6 0 4 6 106 1 1 0 0 30 77 0 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 3 4 4 5 114 9 1 8 7 6 7 8 6 128 0 3 0 7 8 3 7 105 0 4 0 6 0 4 6 106 1 1 0 0 30 77 0 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 128 9 1 8 7 6 7 8 6 128 0 3 0 7 8 3 7 105 0 4 0 6 0 4 6 106 1 1 0 0 30 77 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 128 9 1 8 7 6 7 8 6 128 1 1 0 6 2 6 0 2 128 0 3 0 7 8 3 7 105 0 4 0 6 0 4 6 106 0 2 2 31 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
9 9 9 36 9 36 35 35 19 35 36 18 18 17 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni1EF8;
unicode = 7928;
},
{
glyphname = Lcommaaccent.loclMAH;
lastChange = "2025-03-03 21:04:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
ref = commaaccentcomb.loclMAH;
}
);
width = 1229;
}
);
},
{
glyphname = Ncommaaccent.loclMAH;
lastChange = "2025-03-03 21:04:46 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
ref = commaaccentcomb.loclMAH;
}
);
width = 1229;
}
);
},
{
glyphname = aacute;
lastChange = "2025-03-01 19:55:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
ref = acute;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
26 1 3 5 12 1 1 0 13 1 2 1 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
26 1 3 5 12 1 1 0 13 1 7 1 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
10 1 9 8 6 8 9 6 128 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 106 0 8 8 32 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
10 1 9 8 6 8 9 6 128 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 106 0 8 8 32 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
10 1 9 8 6 8 9 6 128 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 106 0 8 8 32 77 0 4 4 6 97 0 6 6 33 77 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
10 1 9 8 6 8 9 6 128 0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 105 0 3 0 0 1 3 0 106 0 8 8 32 77 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
42 42 42 45 42 45 18 19 34 18 36 52 37 36 64 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
lastChange = "2025-03-01 20:42:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
ref = breve;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHW[ ]	/* 1 value pushed */
-60
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = acircumflex;
lastChange = "2025-03-01 20:03:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
ref = circumflex;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
46 1 9 8 26 1 3 5 12 1 1 0 13 1 2 1 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
46 1 9 8 26 1 3 5 12 1 1 0 13 1 7 1 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 9 8 133 10 1 9 6 9 133 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 9 8 133 10 1 9 6 9 133 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 9 8 133 10 1 9 6 9 133 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 8 9 8 133 10 1 9 6 9 133 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 4 4 6 97 0 6 6 33 77 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 8 9 8 133 10 1 9 6 9 133 0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 106 0 3 0 0 1 3 0 105 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
48 47 45 44 17 19 34 18 36 52 37 36 64 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = adieresis;
lastChange = "2025-03-01 19:58:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(874,118,l),
(846,90,o),
(777,40,o),
(736,21,qs),
(694,2,o),
(600,-20,o),
(547,-20,qs),
(461,-20,o),
(322,30,o),
(274,73,qs),
(225,115,o),
(172,232,o),
(172,300,qs),
(172,389,o),
(243,523,o),
(308,568,qs),
(373,612,o),
(556,656,o),
(669,656,qs),
(871,656,l),
(871,741,ls),
(871,790,o),
(835,868,o),
(802,896,qs),
(769,923,o),
(674,953,o),
(615,953,qs),
(560,953,o),
(473,925,o),
(443,902,qs),
(413,879,o),
(380,816,o),
(380,782,q),
(194,782,l),
(195,841,o),
(254,955,o),
(310,1001,qs),
(365,1046,o),
(524,1102,o),
(625,1102,qs),
(717,1102,o),
(875,1057,o),
(933,1012,qs),
(990,966,o),
(1056,830,o),
(1056,739,qs),
(1056,0,l),
(874,0,l)
);
},
{
closed = 1;
nodes = (
(722,169,o),
(761,192,qs),
(799,215,o),
(855,274,o),
(871,306,q),
(871,525,l),
(699,525,ls),
(603,525,o),
(460,492,o),
(418,458,qs),
(388,434,o),
(357,368,o),
(357,326,qs),
(357,286,o),
(384,218,o),
(411,194,qs),
(438,169,o),
(520,141,o),
(574,141,qs),
(628,141,o)
);
},
{
ref = dieresis;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
34 1 7 9 20 1 5 4 21 1 6 5 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
34 1 7 9 20 1 5 4 21 1 11 5 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 8 7 8 9 7 128 0 7 0 4 5 7 4 105 3 1 1 1 0 95 2 1 0 0 30 77 0 8 8 10 97 0 10 10 33 77 0 5 5 6 97 11 1 6 6 37 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 8 7 8 9 7 128 0 7 0 4 5 7 4 105 3 1 1 1 0 95 2 1 0 0 30 77 0 8 8 10 97 0 10 10 33 77 0 5 5 6 97 11 1 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 8 7 8 9 7 128 0 7 0 4 5 7 4 105 3 1 1 1 0 95 2 1 0 0 30 77 0 8 8 10 97 0 10 10 33 77 0 5 5 6 97 11 1 6 6 37 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 8 7 8 9 7 128 0 7 0 4 5 7 4 105 3 1 1 1 0 95 2 1 0 0 30 77 0 8 8 10 97 0 10 10 33 77 0 11 11 31 77 0 5 5 6 97 0 6 6 37 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 9 8 7 8 9 7 128 0 10 0 8 9 10 8 105 0 7 0 4 5 7 4 105 3 1 1 1 0 95 2 1 0 0 30 77 0 11 11 31 77 0 5 5 6 97 0 6 6 37 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 8 7 8 9 7 128 2 1 0 3 1 1 10 0 1 103 0 10 0 8 9 10 8 105 0 7 0 4 5 7 4 105 0 11 11 31 77 0 5 5 6 97 0 6 6 37 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
49 48 45 43 41 40 36 52 37 36 65 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = agrave;
lastChange = "2025-03-01 20:04:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
ref = grave;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
26 1 3 5 12 1 1 0 13 1 2 1 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
26 1 3 5 12 1 1 0 13 1 7 1 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 8 6 8 9 6 128 0 5 4 3 4 5 114 0 3 0 0 1 3 0 105 0 8 8 32 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 8 6 8 9 6 128 0 5 4 3 4 5 114 0 3 0 0 1 3 0 105 0 8 8 32 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 9 8 6 8 9 6 128 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 8 8 32 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 8 6 8 9 6 128 0 5 4 3 4 5 3 128 0 3 0 0 1 3 0 105 0 8 8 32 77 0 4 4 6 97 0 6 6 33 77 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 8 6 8 9 6 128 0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 106 0 3 0 0 1 3 0 105 0 8 8 32 77 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 8 9 8 133 0 9 6 9 133 0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 106 0 3 0 0 1 3 0 105 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
45 44 17 19 34 18 36 52 37 36 64 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = amacron;
lastChange = "2025-03-01 20:42:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
ref = macron;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHW[ ]	/* 1 value pushed */
-93
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = aogonek;
lastChange = "2025-03-03 12:58:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-120,0);
ref = a;
},
{
pos = (230,0);
ref = ogonek;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
16 1 2 4 41 1 8 7 3 1 1 8 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 3 2 3 4 2 128 0 2 10 1 7 8 2 7 105 9 1 6 0 0 6 0 99 0 3 3 5 97 0 5 5 33 77 0 8 8 1 97 0 1 1 37 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 3 2 3 4 2 128 0 2 10 1 7 8 2 7 105 9 1 6 0 0 6 0 99 0 3 3 5 97 0 5 5 33 77 0 8 8 1 97 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 3 2 3 4 2 128 0 2 10 1 7 8 2 7 105 9 1 6 0 0 6 0 99 0 3 3 5 97 0 5 5 33 77 0 8 8 1 97 0 1 1 37 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 2 10 1 7 8 2 7 105 9 1 6 0 0 6 0 99 0 8 8 1 97 0 1 1 37 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
33 31 0 0 39 37 31 43 33 42 0 30 0 30 34 18 36 52 35 17 11 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = aring;
lastChange = "2025-03-01 20:06:22 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
ref = ring;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
60 48 2 6 1 24 1 3 2 25 1 4 3 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
60 48 2 6 1 24 1 3 2 25 1 9 3 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 5 6 7 5 128 0 8 0 0 1 8 0 105 0 5 0 2 3 5 2 105 0 6 6 1 97 10 1 1 1 39 77 0 3 3 4 97 9 1 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 6 5 6 7 5 128 0 8 0 0 1 8 0 105 0 5 0 2 3 5 2 105 0 6 6 1 97 10 1 1 1 39 77 0 9 9 31 77 0 3 3 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 6 5 6 7 5 128 0 8 0 0 1 8 0 105 10 1 1 0 6 7 1 6 105 0 5 0 2 3 5 2 105 0 9 9 31 77 0 3 3 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 6 5 6 7 5 128 0 8 0 0 1 8 0 105 10 1 1 0 6 7 1 6 105 0 5 0 2 3 5 2 105 0 3 0 4 3 4 101 0 9 9 31 9 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 65 64 55 53 45 44 42 40 37 33 29 27 22 20 16 12 0 11 0 10 36 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = aring;
unicode = 229;
},
{
glyphname = atilde;
lastChange = "2025-03-01 20:06:57 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
26 1 3 5 12 1 1 0 13 1 2 1 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
26 1 3 5 12 1 1 0 13 1 7 1 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 5 4 3 4 5 3 128 0 9 14 13 2 11 6 9 11 106 0 3 0 0 1 3 0 105 0 10 10 30 77 0 12 12 8 97 0 8 8 36 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
14 1 13 12 11 12 13 114 0 5 4 3 4 5 3 128 0 9 0 11 6 9 11 106 0 3 0 0 1 3 0 105 0 10 10 30 77 0 12 12 8 97 0 8 8 36 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
14 1 13 12 11 12 13 114 0 5 4 3 4 5 3 128 0 9 0 11 6 9 11 106 0 3 0 0 1 3 0 105 0 10 10 30 77 0 12 12 8 97 0 8 8 36 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
14 1 13 12 11 12 13 114 0 5 4 3 4 5 3 128 0 9 0 11 6 9 11 106 0 3 0 0 1 3 0 105 0 10 10 30 77 0 12 12 8 97 0 8 8 36 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
14 1 13 12 11 12 13 11 128 0 5 4 3 4 5 3 128 0 9 0 11 6 9 11 106 0 3 0 0 1 3 0 105 0 10 10 30 77 0 12 12 8 97 0 8 8 36 77 0 4 4 6 97 0 6 6 33 77 0 1 1 2 97 7 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
14 1 13 12 11 12 13 11 128 0 5 4 3 4 5 3 128 0 8 0 12 13 8 12 105 0 9 0 11 6 9 11 106 0 3 0 0 1 3 0 105 0 10 10 30 77 0 4 4 6 97 0 6 6 33 77 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
14 1 13 12 11 12 13 11 128 0 5 4 3 4 5 3 128 0 8 0 12 13 8 12 105 0 9 0 11 6 9 11 106 0 6 0 4 5 6 4 105 0 3 0 0 1 3 0 105 0 10 10 30 77 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 10 8 9 8 10 9 128 14 1 13 12 11 12 13 11 128 0 5 4 3 4 5 3 128 0 8 0 12 13 8 12 105 0 9 0 11 6 9 11 106 0 6 0 4 5 6 4 105 0 3 0 0 1 3 0 105 0 7 7 31 77 0 1 1 2 97 0 2 2 37 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
42 42 42 69 42 69 66 64 61 59 56 55 52 50 36 19 34 18 36 52 37 36 64 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = ae;
lastChange = "2025-03-01 20:09:21 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-47,0);
ref = a;
scale = (0.6917,1);
},
{
pos = (493,0);
ref = e;
scale = (0.6074,1);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
22 1 0 2 69 1 4 9 101 99 2 6 4 38 1 5 6 49 1 7 5 5 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 9 0 1 114 0 6 4 5 5 6 114 14 11 2 9 12 1 4 6 9 4 105 10 1 0 0 2 97 3 1 2 2 39 77 13 1 5 5 7 98 8 1 7 7 31 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 9 0 1 114 0 6 4 5 4 6 5 128 14 11 2 9 12 1 4 6 9 4 105 10 1 0 0 2 97 3 1 2 2 39 77 13 1 5 5 7 98 8 1 7 7 31 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 9 0 1 9 128 0 6 4 5 4 6 5 128 14 11 2 9 12 1 4 6 9 4 105 10 1 0 0 2 97 3 1 2 2 39 77 13 1 5 5 7 98 8 1 7 7 31 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 9 0 1 9 128 0 6 4 5 4 6 5 128 3 1 2 10 1 0 1 2 0 105 14 11 2 9 12 1 4 6 9 4 105 13 1 5 5 7 98 8 1 7 7 31 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 1 10 9 10 1 9 128 0 6 4 5 4 6 5 128 0 0 10 2 0 89 3 1 2 0 10 1 2 10 105 14 11 2 9 12 1 4 6 9 4 105 13 1 5 5 7 98 8 1 7 7 31 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
70 70 96 93 85 83 70 82 70 82 77 74 68 66 38 36 18 35 20 38 51 19 54 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ae;
unicode = 230;
},
{
glyphname = cacute;
lastChange = "2025-03-01 20:43:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
ref = acute;
}
);
width = 1229;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = ccaron;
lastChange = "2025-03-01 20:43:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
ref = caron;
}
);
width = 1229;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = ccedilla;
lastChange = "2025-03-01 20:09:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
ref = cedilla;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 0 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 5 3 2 114 6 1 5 4 3 5 4 126 0 4 0 0 4 0 99 0 3 3 1 97 0 1 1 39 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 5 3 2 5 128 6 1 5 4 3 5 4 126 0 4 0 0 4 0 99 0 3 3 1 97 0 1 1 39 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 3 5 3 2 5 128 6 1 5 4 3 5 4 126 0 1 0 3 2 1 3 105 0 4 0 0 4 89 0 4 4 0 95 0 0 4 0 79
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 36 0 36 54 35 19 39 21 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = ccircumflex;
lastChange = "2025-03-01 20:43:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
ref = circumflex;
}
);
width = 1229;
}
);
note = ccircumflex;
unicode = 265;
},
{
glyphname = cdotaccent;
lastChange = "2025-03-01 20:44:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
ref = dotaccent;
}
);
width = 1229;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = dcaron;
lastChange = "2025-03-01 22:23:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-84,0);
ref = d;
scale = (0.8569,1);
},
{
pos = (93,0);
ref = caroncomb.alt;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 0 4 19 1 2 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
10 1 7 5 4 5 7 4 128 6 9 2 5 5 32 77 0 0 0 4 97 0 4 4 33 77 8 1 1 1 2 97 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 7 5 4 5 7 4 128 6 9 2 5 5 32 77 0 0 0 4 97 0 4 4 33 77 0 2 2 31 77 8 1 1 1 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 7 5 4 5 7 4 128 0 4 0 0 1 4 0 105 6 9 2 5 5 32 77 0 2 2 31 77 8 1 1 1 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
10 1 7 6 4 6 7 4 128 0 4 0 0 1 4 0 105 9 1 5 5 32 77 0 6 6 32 77 0 2 2 31 77 8 1 1 1 3 97 0 3 3 37 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
37 37 16 16 0 0 37 40 37 40 39 38 16 36 16 36 32 30 24 22 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = dcroat;
lastChange = "2025-03-01 20:30:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
ref = uniE335;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 1 8 6 11 1 4 9 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 1 32 77 10 7 2 3 3 0 95 2 1 0 0 30 77 0 8 8 6 97 0 6 6 33 77 0 9 9 4 97 5 1 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 1 32 77 10 7 2 3 3 0 95 2 1 0 0 30 77 0 8 8 6 97 0 6 6 33 77 0 4 4 31 77 0 9 9 5 97 0 5 5 37 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 0 8 9 6 8 105 0 1 1 32 77 10 7 2 3 3 0 95 2 1 0 0 30 77 0 4 4 31 77 0 9 9 5 97 0 5 5 37 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 10 7 2 3 6 0 3 103 0 6 0 8 9 6 8 105 0 1 1 32 77 0 4 4 31 77 0 9 9 5 97 0 5 5 37 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 41 40 34 33 0 28 0 28 38 36 17 17 17 17 17 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = eth;
lastChange = "2025-03-01 21:41:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1066,839,o),
(1066,633,qs),
(1066,571,ls),
(1066,489,o),
(1039,344,o),
(1014,283,qs),
(980,207,o),
(882,87,o),
(819,48,qs),
(764,15,o),
(636,-20,o),
(565,-20,qs),
(457,-20,o),
(276,55,o),
(211,121,qs),
(145,187,o),
(73,365,o),
(73,467,qs),
(73,582,o),
(146,770,o),
(212,837,qs),
(277,904,o),
(456,977,o),
(561,977,qs),
(649,977,o),
(802,909,o),
(859,853,q),
(836,963,o),
(746,1131,o),
(684,1194,q),
(418,1042,l),
(345,1141,l),
(584,1278,l),
(543,1305,o),
(456,1346,o),
(410,1362,q),
(467,1521,l),
(547,1499,o),
(690,1426,o),
(753,1375,q),
(983,1507,l),
(1056,1407,l),
(845,1286,l),
(949,1168,o)
);
},
{
closed = 1;
nodes = (
(693,155,o),
(726,179,qs),
(765,206,o),
(826,292,o),
(847,350,qs),
(863,397,o),
(881,509,o),
(881,571,qs),
(881,635,ls),
(881,648,o),
(880,672,o),
(880,685,q),
(846,739,o),
(686,825,o),
(561,825,qs),
(492,825,o),
(380,768,o),
(341,719,qs),
(301,670,o),
(259,540,o),
(259,467,qs),
(259,405,o),
(301,284,o),
(341,237,qs),
(380,189,o),
(495,130,o),
(569,130,qs),
(614,130,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
18 17 16 15 14 12 11 10 8 7 10 1 74 0 1 0 3 2 1 3 103 5 1 2 2 0 95 4 1 0 0 31 0 78 26 25 1 0 32 29 25 36 26 35 6 4 0 24 1 23 6 8 22
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = eth;
unicode = 240;
},
{
glyphname = eacute;
lastChange = "2025-03-01 20:30:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = acute;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
9 1 1 0 5 0 1 5 128 11 1 8 6 7 6 8 7 128 10 1 3 0 6 8 3 6 104 0 0 0 32 77 0 2 2 5 97 0 5 5 39 77 0 7 7 4 97 0 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 0 133 9 1 1 5 1 133 11 1 8 6 7 6 8 7 128 10 1 3 0 6 8 3 6 104 0 2 2 5 97 0 5 5 39 77 0 7 7 4 97 0 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 0 1 0 133 9 1 1 5 1 133 11 1 8 6 7 6 8 7 128 0 5 0 2 3 5 2 105 10 1 3 0 6 8 3 6 104 0 7 7 4 97 0 4 4 31 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
13 13 4 4 0 0 13 39 13 39 36 34 31 30 26 24 18 16 4 12 4 12 9 7 0 3 0 3 17 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ebreve;
lastChange = "2025-03-01 20:44:21 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = breve;
}
);
width = 1229;
}
);
note = ebreve;
unicode = 277;
},
{
glyphname = ecaron;
lastChange = "2025-03-01 20:44:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = caron;
}
);
width = 1229;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = ecircumflex;
lastChange = "2025-03-01 20:32:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = circumflex;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
4 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
2 1 1 0 6 0 1 6 128 11 1 9 7 8 7 9 8 128 10 1 4 0 7 9 4 7 103 0 0 0 32 77 0 3 3 6 97 0 6 6 39 77 0 8 8 5 97 0 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 0 133 2 1 1 6 1 133 11 1 9 7 8 7 9 8 128 10 1 4 0 7 9 4 7 103 0 3 3 6 97 0 6 6 39 77 0 8 8 5 97 0 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 0 1 0 133 2 1 1 6 1 133 11 1 9 7 8 7 9 8 128 0 6 0 3 4 6 3 106 10 1 4 0 7 9 4 7 103 0 8 8 5 97 0 5 5 31 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
16 16 7 7 16 42 16 42 39 37 34 33 29 27 21 19 7 15 7 15 36 18 17 16 12 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
lastChange = "2025-03-01 20:32:43 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = dieresis;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
12 1 10 8 9 8 10 9 128 11 1 5 0 8 10 5 8 103 3 1 1 1 0 95 2 1 0 0 32 77 0 4 4 7 97 0 7 7 39 77 0 9 9 6 97 0 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
12 1 10 8 9 8 10 9 128 0 7 0 4 5 7 4 105 11 1 5 0 8 10 5 8 103 3 1 1 1 0 95 2 1 0 0 32 77 0 9 9 6 97 0 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 1 10 8 9 8 10 9 128 2 1 0 3 1 1 7 0 1 103 0 7 0 4 5 7 4 105 11 1 5 0 8 10 5 8 103 0 9 9 6 97 0 6 6 31 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
17 17 8 8 17 43 17 43 40 38 35 34 30 28 22 20 8 16 8 16 36 17 17 17 16 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = edotaccent;
lastChange = "2025-03-01 20:44:41 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = dotaccent;
}
);
width = 1229;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = egrave;
lastChange = "2025-03-01 20:33:02 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = grave;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 5 0 1 5 128 10 1 8 6 7 6 8 7 128 9 1 3 0 6 8 3 6 103 0 0 0 32 77 0 2 2 5 97 0 5 5 39 77 0 7 7 4 97 0 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 133 0 1 5 1 133 10 1 8 6 7 6 8 7 128 9 1 3 0 6 8 3 6 103 0 2 2 5 97 0 5 5 39 77 0 7 7 4 97 0 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 0 133 0 1 5 1 133 10 1 8 6 7 6 8 7 128 0 5 0 2 3 5 2 106 9 1 3 0 6 8 3 6 103 0 7 7 4 97 0 4 4 31 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
13 13 4 4 13 39 13 39 36 34 31 30 26 24 18 16 4 12 4 12 36 17 16 11 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = emacron;
lastChange = "2025-03-01 20:45:07 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = macron;
}
);
width = 1229;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = eogonek;
lastChange = "2025-03-01 20:33:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = ogonek;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
9 4 2 0 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 5 3 4 3 5 4 128 0 4 0 3 4 0 126 9 1 7 0 3 5 7 3 103 0 0 0 1 0 1 100 0 6 6 2 97 0 2 2 39 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
8 1 5 3 4 3 5 4 128 0 4 0 3 4 0 126 0 2 0 6 7 2 6 105 9 1 7 0 3 5 7 3 103 0 0 1 1 0 87 0 0 0 1 96 0 1 0 1 80
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
32 32 0 0 32 40 32 40 37 35 0 31 0 31 35 20 40 17 21 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = uni0259;
lastChange = "2025-03-01 21:17:23 +0000";
layers = (
{
layerId = m01;
shapes = (
{
angle = 180;
pos = (1245,1071);
ref = e;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 5 4 5 6 4 128 0 4 7 1 1 0 4 1 103 0 5 5 2 97 0 2 2 39 77 0 0 0 3 97 0 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 5 4 5 6 4 128 0 4 7 1 1 0 4 1 103 0 5 5 2 97 0 2 2 39 77 0 0 0 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
8 1 6 5 4 5 6 4 128 0 2 0 5 6 2 5 105 0 4 7 1 1 0 4 1 103 0 0 0 3 97 0 3 3 37 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
9 9 0 0 9 35 9 35 32 30 27 26 22 20 14 12 0 8 0 8 35 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0259;
unicode = 601;
},
{
glyphname = gbreve;
lastChange = "2025-03-01 20:42:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
ref = breve;
}
);
width = 1229;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = gcircumflex;
lastChange = "2025-03-01 20:41:57 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
ref = circumflex;
}
);
width = 1229;
}
);
note = gcircumflex;
unicode = 285;
},
{
glyphname = gdotaccent;
lastChange = "2025-03-01 20:41:40 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
ref = dotaccent;
}
);
width = 1229;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = hbar;
lastChange = "2025-03-01 20:38:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
ref = uniE334;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
9 1 6 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 1 32 77 9 8 2 3 3 0 95 2 1 0 0 30 77 0 6 6 4 97 0 4 4 33 77 7 1 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 1 32 77 9 8 2 3 3 0 95 2 1 0 0 30 77 0 6 6 4 97 0 4 4 39 77 7 1 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 0 6 5 4 6 105 0 1 1 32 77 9 8 2 3 3 0 95 2 1 0 0 30 77 7 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 9 8 2 3 4 0 3 103 0 4 0 6 5 4 6 105 0 1 1 32 77 7 1 5 5 31 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 32 0 32 20 52 20 36 17 17 17 17 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = hcircumflex;
lastChange = "2025-03-03 21:03:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (96,0);
ref = h;
},
{
pos = (-294,340);
ref = circumflex;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHB[ ]	/* 1 value pushed */
235
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = hcircumflex;
unicode = 293;
},
{
glyphname = dotlessi;
lastChange = "2025-03-01 20:40:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(876,0,l),
(691,0,l),
(691,921,l),
(323,921,l),
(323,1082,l),
(876,1082,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 2 1 0 2 103 0 1 1 31 1 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = iacute;
lastChange = "2025-03-01 20:40:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
ref = acute;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
5 1 4 3 0 3 4 0 128 0 3 3 32 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 4 3 133 5 1 4 0 4 133 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 4 3 133 5 1 4 0 4 133 0 0 0 2 1 0 2 103 0 1 1 31 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
6 6 6 9 6 9 18 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = ibreve;
lastChange = "2025-03-01 20:41:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
ref = breve;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
17 13 11 7 4 3 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 4 3 97 0 3 3 36 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 2 1 0 2 103 0 4 4 3 97 0 3 3 36 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 0 4 0 3 4 105 0 0 0 2 1 0 2 103 0 1 1 31 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 35 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ibreve;
unicode = 301;
},
{
glyphname = icircumflex;
lastChange = "2025-03-01 20:45:56 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
ref = circumflex;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 4 3 133 5 1 4 0 4 133 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 4 3 133 5 1 4 0 4 133 0 0 0 2 1 0 2 104 0 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
lastChange = "2025-03-01 20:46:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
ref = dieresis;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
6 1 4 4 3 95 5 1 3 3 30 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 1 0 2 103 6 1 4 4 3 95 5 1 3 3 30 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 3 6 1 4 0 3 4 103 0 0 0 2 1 0 2 103 0 1 1 31 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = idotaccent;
lastChange = "2025-03-03 21:50:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = i;
}
);
width = 1229;
}
);
production = idotaccent;
},
{
glyphname = igrave;
lastChange = "2025-03-01 20:46:26 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
ref = grave;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 3 0 3 4 0 128 0 3 3 32 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 3 4 3 133 0 4 0 4 133 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 3 4 3 133 0 4 0 4 133 0 0 0 2 1 0 2 104 0 1 1 31 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = imacron;
lastChange = "2025-03-01 20:46:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
ref = macron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 4 3 95 0 3 3 32 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 2 1 0 2 103 0 4 4 3 95 0 3 3 32 77 0 1 1 31 1 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = iogonek;
lastChange = "2025-03-03 12:34:26 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = i;
},
{
pos = (168,0);
ref = ogonek;
}
);
width = 1229;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = itilde;
lastChange = "2025-03-01 20:47:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 5 32 77 0 7 7 3 97 0 3 3 32 77 9 8 2 6 6 4 97 0 4 4 30 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 8 7 6 7 8 114 0 5 5 32 77 0 7 7 3 97 0 3 3 32 77 0 6 6 4 97 0 4 4 30 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
9 1 8 7 6 7 8 6 128 0 5 5 32 77 0 7 7 3 97 0 3 3 32 77 0 6 6 4 97 0 4 4 30 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 3 4 3 5 4 128 9 1 8 7 6 7 8 6 128 0 7 7 3 97 0 3 3 32 77 0 6 6 4 97 0 4 4 30 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 3 4 3 5 4 128 9 1 8 7 6 7 8 6 128 0 0 0 2 1 0 2 103 0 7 7 3 97 0 3 3 32 77 0 6 6 4 97 0 4 4 30 77 0 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 5 3 4 3 5 4 128 9 1 8 7 6 7 8 6 128 0 4 0 6 0 4 6 106 0 0 0 2 1 0 2 103 0 7 7 3 97 0 3 3 32 77 0 1 1 31 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
6 6 6 33 6 33 35 35 19 35 36 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = ij;
lastChange = "2025-03-16 15:19:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(501,0,l),
(316,0,l),
(316,921,l),
(148,921,l),
(148,1082,l),
(501,1082,l)
);
},
{
closed = 1;
nodes = (
(281,1288,l),
(531,1288,l),
(531,1538,l),
(281,1538,l)
);
},
{
closed = 1;
nodes = (
(1056,-7,ls),
(1056,-111,o),
(999,-271,o),
(945,-325,qs),
(890,-380,o),
(733,-437,o),
(633,-437,qs),
(602,-437,o),
(544,-435,o),
(516,-433,qs),
(493,-431,o),
(447,-424,o),
(422,-420,q),
(435,-268,l),
(452,-271,o),
(504,-276,o),
(531,-277,qs),
(557,-279,o),
(606,-280,o),
(620,-280,qs),
(672,-280,o),
(764,-253,o),
(798,-221,qs),
(832,-189,o),
(871,-84,o),
(871,-7,qs),
(871,921,l),
(710,921,l),
(710,1082,l),
(1056,1082,l)
);
},
{
closed = 1;
nodes = (
(831,1288,l),
(1081,1288,l),
(1081,1538,l),
(831,1538,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 10 11 3 8 8 7 95 9 1 7 7 32 77 6 1 2 2 0 95 3 1 0 0 33 77 0 1 1 31 77 0 5 5 4 95 0 4 4 35 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 10 11 3 8 8 7 95 9 1 7 7 32 77 0 6 6 0 95 3 1 0 0 33 77 0 2 2 0 95 3 1 0 0 33 77 0 1 1 31 77 0 5 5 4 95 0 4 4 35 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
12 10 11 3 8 8 7 95 9 1 7 7 32 77 0 6 6 3 95 0 3 3 33 77 0 2 2 0 95 0 0 0 33 77 0 1 1 31 77 0 5 5 4 95 0 4 4 35 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 6 2 3 6 103 0 0 0 2 1 0 2 103 12 10 11 3 8 8 7 95 9 1 7 7 32 77 0 1 1 31 77 0 5 5 4 95 0 4 4 35 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
22 22 18 18 22 25 22 25 24 23 18 21 18 21 18 18 33 34 17 17 17 16 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ij;
unicode = 307;
},
{
glyphname = uni0237;
lastChange = "2025-03-01 20:49:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(931,-7,ls),
(931,-111,o),
(874,-271,o),
(820,-325,qs),
(765,-380,o),
(608,-437,o),
(508,-437,qs),
(477,-437,o),
(419,-435,o),
(391,-433,qs),
(368,-431,o),
(322,-424,o),
(297,-420,q),
(310,-268,l),
(327,-271,o),
(379,-276,o),
(406,-277,qs),
(432,-279,o),
(481,-280,o),
(495,-280,qs),
(547,-280,o),
(639,-253,o),
(673,-221,qs),
(707,-189,o),
(746,-84,o),
(746,-7,qs),
(746,921,l),
(385,921,l),
(385,1082,l),
(931,1082,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 3 0 95 0 0 0 33 77 0 2 2 1 95 0 1 1 35 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 0 0 3 2 0 3 103 0 2 2 1 95 0 1 1 35 1 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 33 34 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0237;
unicode = 567;
},
{
glyphname = j_acutecomb;
lastChange = "2025-03-01 20:49:55 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
ref = acute;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
0 4 5 4 133 6 1 5 0 5 133 0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 12 12 12 15 12 15 18 18 33 34 16 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = j_acutecomb;
},
{
glyphname = jacute;
lastChange = "2025-03-01 22:01:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
ref = acute;
}
);
width = 1229;
}
);
},
{
glyphname = jcircumflex;
lastChange = "2025-03-01 20:50:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
ref = circumflex;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
6 1 5 4 0 4 5 0 128 0 4 4 32 77 0 3 3 0 95 0 0 0 33 77 0 2 2 1 95 0 1 1 35 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 5 4 133 6 1 5 0 5 133 0 3 3 0 95 0 0 0 33 77 0 2 2 1 95 0 1 1 35 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 4 5 4 133 6 1 5 0 5 133 0 0 0 3 2 0 3 104 0 2 2 1 95 0 1 1 35 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
18 17 17 18 33 34 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = jcircumflex;
unicode = 309;
},
{
glyphname = kgreenlandic;
lastChange = "2025-03-01 21:40:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352,0,l),
(167,0,l),
(167,1082,l),
(352,1082,l),
(352,561,l),
(860,1082,l),
(1083,1082,l),
(597,573,l),
(1089,0,l),
(855,0,l),
(472,447,l),
(352,344,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
8 5 2 3 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
1 1 0 0 33 77 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
1 1 0 0 2 95 3 1 2 2 31 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = kgreenlandic;
unicode = 312;
},
{
glyphname = lacute;
lastChange = "2025-03-01 20:53:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (-200,300);
ref = acute;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHW[ ]	/* 1 value pushed */
270
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = lcaron;
lastChange = "2025-03-01 22:23:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (-90,0);
ref = caroncomb.alt;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
5 1 1 0 3 0 1 3 128 2 1 0 0 32 77 0 3 3 4 96 0 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
5 1 1 2 3 2 1 3 128 0 0 0 32 77 0 2 2 32 77 0 3 3 4 96 0 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 0 133 5 1 1 2 3 2 1 3 128 0 2 2 32 77 0 3 3 4 96 0 4 4 31 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 14 12 11 9 5 4 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = ldot;
lastChange = "2025-03-01 20:57:36 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (200,0);
ref = periodcentered;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
117
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ldot;
unicode = 320;
},
{
glyphname = lslash;
lastChange = "2025-03-01 21:06:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (160,0);
ref = l;
},
{
ref = uniE02F;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
21 8 7 6 5 2 1 7 1 0 1 76 0 0 0 32 77 0 1 1 2 95 0 2 2 31 2 78 33 40 19 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = nacute;
lastChange = "2025-03-01 21:01:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
ref = acute;
}
);
width = 1229;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = napostrophe;
lastChange = "2025-03-01 21:09:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (100,0);
ref = n;
},
{
pos = (-430,0);
ref = quotesingle;
}
);
width = 1229;
}
);
note = napostrophe;
unicode = 329;
},
{
glyphname = ncaron;
lastChange = "2025-03-01 21:03:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
ref = caron;
}
);
width = 1229;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = ntilde;
lastChange = "2025-03-01 21:03:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
ref = tilde;
}
);
width = 1229;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = eng;
lastChange = "2025-03-01 21:39:55 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(362,1082,l),
(362,928,l),
(382,957,o),
(427,1008,o),
(453,1028,qs),
(499,1063,o),
(613,1102,o),
(681,1102,qs),
(767,1102,o),
(903,1052,o),
(950,1001,qs),
(997,949,o),
(1047,790,o),
(1047,682,qs),
(1047,-89,ls),
(1047,-177,o),
(999,-312,o),
(953,-356,qs),
(913,-395,o),
(797,-437,o),
(724,-437,qs),
(694,-437,o),
(640,-429,o),
(610,-419,q),
(624,-262,l),
(645,-268,o),
(705,-275,o),
(724,-275,qs),
(751,-275,o),
(796,-259,o),
(812,-243,qs),
(837,-220,o),
(862,-142,o),
(862,-89,qs),
(862,678,ls),
(862,746,o),
(835,846,o),
(808,878,qs),
(779,913,o),
(688,945,o),
(626,945,qs),
(572,945,o),
(484,921,o),
(451,898,qs),
(426,881,o),
(385,836,o),
(369,810,q),
(369,0,l),
(184,0,l),
(184,1082,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 1 3 0 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
0 1 3 5 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 3 0 97 5 1 0 0 33 77 0 4 4 31 77 0 2 2 1 97 0 1 1 41 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 2 1 101 0 3 3 0 97 5 1 0 0 33 77 0 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 4 0 3 89 0 2 0 1 2 1 101 5 1 0 0 4 95 0 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 3 4 0 3 105 0 2 0 1 2 1 101 0 5 5 4 95 0 4 4 31 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 20 37 33 38 35 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = eng;
unicode = 331;
},
{
glyphname = oacute;
lastChange = "2025-03-01 21:10:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
ref = acute;
}
);
width = 1229;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = obreve;
lastChange = "2025-03-01 21:11:02 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
ref = breve;
}
);
width = 1229;
}
);
note = obreve;
unicode = 335;
},
{
glyphname = ocircumflex;
lastChange = "2025-03-01 21:11:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
ref = circumflex;
}
);
width = 1229;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = odieresis;
lastChange = "2025-03-01 21:11:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
ref = dieresis;
}
);
width = 1229;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = ograve;
lastChange = "2025-03-01 21:13:19 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
ref = grave;
}
);
width = 1229;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = ohungarumlaut;
lastChange = "2025-03-01 21:13:31 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
ref = hungarumlaut;
}
);
width = 1229;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = omacron;
lastChange = "2025-03-01 21:13:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
ref = macron;
}
);
width = 1229;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = oslash;
lastChange = "2025-03-16 15:14:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(705,944,l),
(676,950,o),
(644,950,o),
(614,950,c),
(562,950,o),
(508,949,o),
(469,926,c),
(432,904,o),
(401,876,o),
(375,839,c),
(349,804,o),
(329,760,o),
(317,712,c),
(305,665,o),
(308,603,o),
(308,550,c),
(308,529,l),
(308,475,o),
(305,415,o),
(317,365,c),
(329,318,o),
(349,275,o),
(375,239,c),
(379,233,o),
(383,228,o),
(387,223,c)
);
},
{
closed = 1;
nodes = (
(289,82,o),
(266,104,o),
(245,128,c),
(202,176,o),
(169,235,o),
(146,301,c),
(124,368,o),
(123,450,o),
(123,529,c),
(123,550,l),
(123,628,o),
(124,711,o),
(146,778,c),
(169,844,o),
(202,902,o),
(245,953,c),
(287,1002,o),
(338,1040,o),
(399,1067,c),
(459,1098,o),
(537,1102,o),
(614,1102,c),
(666,1102,o),
(720,1100,o),
(768,1088,c),
(825,1214,l),
(999,1214,l),
(912,1020,l),
(940,1001,o),
(964,978,o),
(986,953,c),
(1027,902,o),
(1060,844,o),
(1083,778,c),
(1105,711,o),
(1106,628,o),
(1106,550,c),
(1106,529,l),
(1106,450,o),
(1105,368,o),
(1083,301,c),
(1060,235,o),
(1027,176,o),
(986,128,c),
(944,80,o),
(892,38,o),
(830,11,c),
(769,-16,o),
(691,-20,o),
(616,-20,c),
(562,-20,o),
(507,-18,o),
(459,-8,c),
(403,-134,l),
(229,-134,l),
(315,62,l)
);
},
{
closed = 1;
nodes = (
(552,130,o),
(584,130,o),
(616,130,c),
(667,130,o),
(721,131,o),
(759,152,c),
(798,172,o),
(829,202,o),
(855,239,c),
(881,275,o),
(900,318,o),
(913,365,c),
(926,415,o),
(922,475,o),
(922,529,c),
(922,550,l),
(922,603,o),
(925,665,o),
(913,712,c),
(899,760,o),
(880,804,o),
(854,839,c),
(850,845,o),
(845,851,o),
(841,857,c),
(522,135,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
10 7 2 5 0 43 30 29 3 4 5 23 20 2 2 4 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 133 0 3 2 3 134 0 5 5 0 97 0 0 0 39 77 0 4 4 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 1 133 0 3 2 3 134 0 0 0 5 4 0 5 105 0 4 4 2 97 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 41 18 40 18 36 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = otilde;
lastChange = "2025-03-01 21:14:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
ref = tilde;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHB[ ]	/* 1 value pushed */
15
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = oe;
lastChange = "2025-03-16 15:00:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,529,l),
(154,475,o),
(152,415,o),
(160,365,c),
(167,318,o),
(180,275,o),
(197,239,c),
(213,202,o),
(234,172,o),
(257,152,c),
(283,131,o),
(318,130,o),
(351,130,c),
(383,130,o),
(418,131,o),
(442,152,c),
(467,172,o),
(487,202,o),
(504,239,c),
(520,275,o),
(532,318,o),
(540,365,c),
(549,415,o),
(546,475,o),
(546,529,cs),
(546,550,l),
(546,603,o),
(548,665,o),
(540,712,c),
(532,760,o),
(519,804,o),
(503,839,c),
(486,876,o),
(466,904,o),
(442,926,c),
(417,949,o),
(382,950,o),
(349,950,c),
(316,950,o),
(282,949,o),
(257,926,c),
(234,904,o),
(213,876,o),
(197,839,c),
(180,804,o),
(167,760,o),
(160,712,c),
(152,665,o),
(154,603,o),
(154,550,c)
);
},
{
closed = 1;
nodes = (
(857,950,o),
(795,936,o),
(749,870,c),
(685,778,o),
(678,670,o),
(674,620,c),
(1075,620,l),
(1075,620,o),
(1072,774,o),
(1023,856,c),
(978,931,o),
(913,950,o),
(882,950,c)
);
},
{
closed = 1;
nodes = (
(612,159,o),
(605,143,o),
(597,128,c),
(569,80,o),
(535,38,o),
(495,11,c),
(455,-16,o),
(404,-20,o),
(355,-20,c),
(304,-20,o),
(253,-16,o),
(214,11,c),
(173,38,o),
(140,80,o),
(113,128,c),
(85,176,o),
(63,235,o),
(48,301,c),
(34,368,o),
(33,450,o),
(33,529,c),
(33,550,l),
(33,628,o),
(34,711,o),
(48,778,c),
(63,844,o),
(85,902,o),
(113,953,c),
(140,1002,o),
(173,1040,o),
(214,1067,c),
(253,1098,o),
(303,1102,o),
(354,1102,c),
(404,1102,o),
(454,1098,o),
(494,1067,c),
(535,1040,o),
(569,1002,o),
(597,953,c),
(606,936,o),
(614,918,o),
(622,899,c),
(632,919,o),
(643,938,o),
(655,955,c),
(686,1002,o),
(721,1039,o),
(761,1064,c),
(800,1089,o),
(842,1102,o),
(883,1102,c),
(936,1102,o),
(982,1089,o),
(1022,1062,c),
(1061,1035,o),
(1093,997,o),
(1120,950,c),
(1146,902,o),
(1168,847,o),
(1179,781,c),
(1203,633,o),
(1194,459,o),
(1194,459,c),
(675,461,l),
(675,342,o),
(722,267,o),
(742,236,c),
(788,163,o),
(838,131,o),
(906,131,c),
(976,131,o),
(1026,178,o),
(1059,258,c),
(1170,257,l),
(1148,162,o),
(1119,113,o),
(1081,66,c),
(1036,10,o),
(978,-19,o),
(910,-20,c),
(847,-21,o),
(795,-9,o),
(754,18,c),
(714,45,o),
(678,81,o),
(647,128,c),
(638,143,o),
(628,160,o),
(620,176,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
17 1 7 2 56 1 8 7 74 1 6 4 6 1 0 5 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
17 1 7 2 56 1 8 9 74 1 6 4 6 1 0 5 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 6 4 5 4 6 5 128 12 1 8 0 4 6 8 4 103 9 1 7 7 2 97 3 1 2 2 39 77 10 1 5 5 0 97 1 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
11 1 6 4 5 4 6 5 128 12 1 8 0 4 6 8 4 103 0 7 7 2 97 3 1 2 2 39 77 0 9 9 2 97 3 1 2 2 39 77 10 1 5 5 0 97 1 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 6 4 5 4 6 5 128 12 1 8 0 4 6 8 4 103 0 7 7 3 97 0 3 3 39 77 0 9 9 2 97 0 2 2 39 77 10 1 5 5 0 97 1 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
11 1 6 4 5 4 6 5 128 0 3 0 7 9 3 7 105 0 2 0 9 8 2 9 105 12 1 8 0 4 6 8 4 103 10 1 5 5 0 97 1 1 0 0 31 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
39 39 0 0 71 68 62 60 39 52 39 52 44 42 0 38 0 38 40 20 34 37 34 35 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = oe;
unicode = 339;
},
{
glyphname = thorn;
lastChange = "2025-03-01 21:39:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1033,212,o),
(980,138,qs),
(926,64,o),
(770,-20,o),
(668,-20,qs),
(609,-20,o),
(507,3,o),
(464,25,qs),
(434,40,o),
(381,81,o),
(358,107,q),
(358,-416,l),
(173,-416,l),
(173,1558,l),
(358,1558,l),
(358,970,l),
(381,997,o),
(434,1040,o),
(464,1056,qs),
(506,1079,o),
(607,1102,o),
(665,1102,qs),
(769,1102,o),
(927,1020,o),
(980,947,qs),
(1033,874,o),
(1087,671,o),
(1087,550,qs),
(1087,529,ls),
(1087,413,o)
);
},
{
closed = 1;
nodes = (
(868,772,o),
(833,827,qs),
(797,881,o),
(687,945,o),
(610,945,qs),
(563,945,o),
(484,922,o),
(453,901,qs),
(423,882,o),
(376,828,o),
(358,796,q),
(358,278,l),
(376,248,o),
(420,197,o),
(448,178,qs),
(480,156,o),
(562,131,o),
(612,131,qs),
(688,131,o),
(798,196,o),
(833,251,qs),
(868,306,o),
(902,450,o),
(902,529,qs),
(902,550,ls),
(902,629,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 1 0 5 4 1 5 103 0 0 6 1 3 0 3 99 0 4 4 2 95 0 2 2 31 2 78 0 0 19 17 14 12 0 11 0 11 35 33 17 7 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = racute;
lastChange = "2025-03-01 21:16:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
ref = acute;
}
);
width = 1229;
}
);
note = racute;
unicode = 341;
},
{
glyphname = rcaron;
lastChange = "2025-03-01 21:17:56 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
ref = caron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
2 1 2 0 7 1 5 3 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
2 1 2 0 7 1 5 7 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 0 2 3 128 0 4 5 6 5 4 114 1 1 0 0 32 77 0 5 5 3 97 7 1 3 3 33 77 0 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 0 2 3 128 0 4 5 6 5 4 6 128 1 1 0 0 32 77 0 5 5 3 97 7 1 3 3 33 77 0 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
1 1 0 2 0 133 0 2 3 2 133 0 4 5 6 5 4 6 128 0 5 5 3 97 7 1 3 3 33 77 0 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
1 1 0 2 0 133 0 2 3 2 133 0 4 5 6 5 4 6 128 0 5 4 3 5 90 7 1 3 3 6 96 0 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
1 1 0 2 0 133 0 2 3 2 133 0 4 5 6 5 4 6 128 0 3 0 5 4 3 5 106 0 7 7 6 96 0 6 6 31 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 20 35 35 36 17 18 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = sacute;
lastChange = "2025-03-01 21:18:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
ref = acute;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 7 6 1 6 7 1 128 8 1 5 2 0 2 5 0 128 0 3 3 1 97 0 1 1 33 77 0 2 2 6 95 0 6 6 32 77 0 0 0 4 97 0 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 7 6 1 6 7 1 128 8 1 5 2 0 2 5 0 128 0 3 3 1 97 0 1 1 33 77 0 2 2 6 95 0 6 6 32 77 0 0 0 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
9 1 7 6 1 6 7 1 128 8 1 5 2 0 2 5 0 128 0 1 0 3 2 1 3 105 0 2 2 6 95 0 6 6 32 77 0 0 0 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
9 1 7 6 1 6 7 1 128 8 1 5 2 0 2 5 0 128 0 1 0 3 2 1 3 105 0 6 0 2 5 6 2 103 0 0 0 4 97 0 4 4 37 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
40 40 0 0 40 43 40 43 42 41 0 39 0 39 43 34 18 43 34 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = scaron;
lastChange = "2025-03-01 21:18:23 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
ref = caron;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 8 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 6 1 6 8 1 128 9 1 5 2 0 2 5 0 128 0 3 3 1 97 0 1 1 33 77 0 2 2 6 95 7 1 6 6 32 77 0 0 0 4 98 0 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 6 1 6 8 1 128 9 1 5 2 0 2 5 0 128 0 3 3 1 97 0 1 1 33 77 0 2 2 6 95 7 1 6 6 32 77 0 0 0 4 98 0 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 8 6 1 6 8 1 128 9 1 5 2 0 2 5 0 128 7 1 6 0 2 5 6 2 103 0 3 3 1 97 0 1 1 33 77 0 0 0 4 98 0 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 8 6 1 6 8 1 128 9 1 5 2 0 2 5 0 128 0 1 0 3 2 1 3 105 7 1 6 0 2 5 6 2 103 0 0 0 4 98 0 4 4 37 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 46 45 44 43 41 40 0 39 0 39 43 34 18 43 34 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = scedilla;
lastChange = "2025-03-01 21:18:41 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
ref = cedilla;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 5 3 2 5 128 6 1 5 0 3 5 0 126 0 0 0 4 0 4 99 0 3 3 1 97 0 1 1 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 3 5 3 2 5 128 6 1 5 0 3 5 0 126 0 1 0 3 2 1 3 105 0 0 4 4 0 89 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 44 0 44 30 34 18 43 34 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = scedilla;
unicode = 351;
},
{
glyphname = scircumflex;
lastChange = "2025-03-01 21:20:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
ref = circumflex;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 7 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 7 6 133 8 1 7 1 7 133 0 2 3 5 3 2 5 128 9 1 5 0 3 5 0 126 0 3 3 1 97 0 1 1 33 77 0 0 0 4 97 0 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 7 6 133 8 1 7 1 7 133 0 2 3 5 3 2 5 128 9 1 5 0 3 5 0 126 0 3 3 1 97 0 1 1 33 77 0 0 0 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 6 7 6 133 8 1 7 1 7 133 0 2 3 5 3 2 5 128 9 1 5 0 3 5 0 126 0 1 0 3 2 1 3 106 0 0 0 4 97 0 4 4 37 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 46 45 43 42 41 40 0 39 0 39 43 34 18 43 34 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = scircumflex;
unicode = 349;
},
{
glyphname = germandbls;
lastChange = "2025-02-27 18:51:05 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,1113,ls),
(321,1262,o),
(421,1359,qs),
(475,1413,o),
(624,1413,qs),
(718,1413,o),
(775,1359,qs),
(848,1292,o),
(852,1196,qs),
(852,1179,ls),
(852,1069,o),
(791,1021,qs),
(662,952,o),
(564,941,q),
(564,737,l),
(694,718,o),
(791,676,qs),
(897,598,o),
(901,453,qs),
(901,447,ls),
(901,322,o),
(835,250,qs),
(734,185,o),
(540,182,q),
(540,0,l),
(804,0,o),
(978,117,qs),
(1089,212,o),
(1089,440,qs),
(1089,648,o),
(978,753,qs),
(889,822,o),
(829,848,q),
(884,882,o),
(926,900,qs),
(1039,991,o),
(1041,1176,qs),
(1041,1181,ls),
(1041,1366,o),
(933,1477,qs),
(812,1600,o),
(633,1600,qs),
(624,1600,ls),
(426,1598,o),
(305,1511,qs),
(139,1391,o),
(139,1118,qs),
(139,0,l),
(318,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
34 33 15 3 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 0 97 0 0 0 32 77 0 2 2 1 97 5 4 2 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 3 2 0 3 105 0 2 2 1 97 5 4 2 1 1 31 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 48 0 48 44 42 17 31 52 6 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = longs;
lastChange = "2025-03-01 21:21:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(700,1097,ls),
(700,1166,o),
(736,1220,qs),
(788,1294,o),
(919,1297,qs),
(994,1297,l),
(994,1456,l),
(919,1456,ls),
(702,1456,o),
(602,1350,qs),
(515,1256,o),
(515,1106,qs),
(515,1004,l),
(236,1004,l),
(236,846,l),
(525,846,l),
(525,163,l),
(234,163,l),
(234,0,l),
(994,0,l),
(994,163,l),
(694,163,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 4 97 0 4 4 32 77 0 2 2 3 95 0 3 3 33 77 7 6 2 1 1 0 95 0 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 2 1 3 2 103 0 5 5 4 97 0 4 4 32 77 7 6 2 1 1 0 95 0 0 0 31 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 21 0 21 33 36 17 17 17 17 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = longs;
unicode = 383;
},
{
glyphname = tbar;
lastChange = "2025-03-01 21:23:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (-80,0);
ref = uniE337;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
15 1 4 3 16 1 5 4 2 76 33 0 2 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 2 6 1 3 4 2 3 103 8 1 1 1 0 95 9 1 0 0 33 77 0 4 4 5 97 0 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
9 1 0 8 1 1 2 0 1 103 7 1 2 6 1 3 4 2 3 103 0 4 4 5 97 0 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
32 31 17 17 20 37 36 17 17 17 17 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = tbar;
unicode = 359;
},
{
glyphname = tcaron;
lastChange = "2025-03-01 22:24:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
29 4 2 1 0 15 1 4 3 16 1 5 4 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
8 1 1 0 2 0 1 2 128 0 0 0 32 77 6 1 3 3 2 95 7 1 2 2 33 77 0 4 4 5 97 0 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 0 133 8 1 1 2 1 133 6 1 3 3 2 95 7 1 2 2 33 77 0 4 4 5 97 0 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 133 8 1 1 2 1 133 7 1 2 6 1 3 4 2 3 103 0 4 4 5 97 0 5 5 31 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
0 0 28 27 26 25 21 19 14 12 8 7 6 5 0 3 0 3 17 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = uacute;
lastChange = "2025-03-01 21:24:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = acute;
}
);
width = 1229;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ubreve;
lastChange = "2025-03-01 21:25:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = breve;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
12 1 2 4 1 76 11 7 5 1 4 0 74
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
12 1 6 4 1 76 11 7 5 1 4 0 74
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 1 0 97 0 0 0 36 77 5 1 3 3 33 77 0 4 4 2 97 6 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 1 0 97 0 0 0 36 77 5 1 3 3 33 77 0 4 4 2 97 6 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 1 0 97 0 0 0 36 77 5 1 3 3 33 77 0 4 4 2 97 6 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 1 0 97 0 0 0 36 77 5 1 3 3 33 77 0 4 4 2 97 6 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 97 0 0 0 36 77 5 1 3 3 2 97 6 1 2 2 37 77 0 4 4 2 97 6 1 2 2 37 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 3 0 1 105 5 1 3 3 6 95 0 6 6 31 77 0 4 4 2 97 0 2 2 37 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 20 36 20 37 36 34 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = ucircumflex;
lastChange = "2025-03-01 21:25:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = circumflex;
}
);
width = 1229;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
lastChange = "2025-03-01 21:25:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = dieresis;
}
);
width = 1229;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = ugrave;
lastChange = "2025-03-01 21:25:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = grave;
}
);
width = 1229;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uhungarumlaut;
lastChange = "2025-03-01 21:26:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = hungarumlaut;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 1 0 2 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
0 1 4 2 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
8 1 6 6 5 95 7 1 5 5 32 77 3 1 1 1 33 77 0 2 2 0 97 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
8 1 6 6 5 95 7 1 5 5 32 77 3 1 1 1 33 77 0 2 2 0 97 4 1 0 0 37 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
8 1 6 6 5 95 7 1 5 5 32 77 3 1 1 1 33 77 0 2 2 0 97 4 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
8 1 6 6 5 95 7 1 5 5 32 77 3 1 1 1 33 77 0 2 2 0 97 4 1 0 0 37 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
8 1 6 6 5 95 7 1 5 5 32 77 3 1 1 1 0 97 4 1 0 0 37 77 0 2 2 0 97 4 1 0 0 37 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 1 5 8 1 6 1 5 6 103 3 1 1 1 4 95 0 4 4 31 77 0 2 2 0 97 0 0 0 37 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 17 17 17 17 20 36 20 35 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = umacron;
lastChange = "2025-03-01 21:26:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = macron;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
4 1 2 4 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
4 1 6 4 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 1 1 0 95 0 0 0 32 77 5 1 3 3 33 77 0 4 4 2 97 6 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 1 1 0 95 0 0 0 32 77 5 1 3 3 33 77 0 4 4 2 97 6 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 1 1 0 95 0 0 0 32 77 5 1 3 3 33 77 0 4 4 2 97 6 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 1 1 0 95 0 0 0 32 77 5 1 3 3 33 77 0 4 4 2 97 6 1 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 1 1 0 95 0 0 0 32 77 5 1 3 3 2 97 6 1 2 2 37 77 0 4 4 2 97 6 1 2 2 37 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 1 1 0 95 0 0 0 32 77 5 1 3 3 6 95 0 6 6 31 77 0 4 4 2 97 0 2 2 37 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 27 26 25 24 20 18 14 13 9 7 0 3 0 3 17 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = uni0123;
lastChange = "2025-03-01 21:26:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
ref = acute;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
32 1 0 3 16 1 2 1 2 76 0 8 9 3 9 8 3 128 0 6 2 7 2 6 7 128 4 1 3 0 0 1 3 0 105 0 7 0 5 7 5 101 11 1 9 9 32 77 10 1 1 1 2 97 0 2 2 31 2 78 53 53 0 0 53 56 53 56 55 54 49 47 44 43 40 38 34 33 29 27 21 19 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0123;
unicode = 291;
},
{
glyphname = uni0137;
lastChange = "2025-03-01 21:46:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = k;
},
{
ref = cedilla;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHW[ ]	/* 1 value pushed */
-1078
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0137;
unicode = 311;
},
{
glyphname = uni013C;
lastChange = "2025-03-16 16:49:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (198,0);
ref = cedilla;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHW[ ]	/* 1 value pushed */
-1078
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni013C;
unicode = 316;
},
{
glyphname = uni0146;
lastChange = "2025-03-01 21:47:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
ref = cedilla;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHW[ ]	/* 1 value pushed */
-1078
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0146;
unicode = 326;
},
{
glyphname = uni0157;
lastChange = "2025-03-03 12:38:46 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (99,0);
ref = r;
},
{
pos = (-179,0);
ref = cedilla;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
4 1 4 2 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
4 1 4 6 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 5 4 3 114 0 0 5 1 5 0 1 128 7 1 1 1 132 0 4 4 2 97 6 1 2 2 33 77 0 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 4 5 4 3 5 128 0 0 5 1 5 0 1 128 7 1 1 1 132 0 4 4 2 97 6 1 2 2 33 77 0 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 5 4 3 5 128 0 0 5 1 5 0 1 128 7 1 1 1 132 0 4 3 2 4 89 6 1 2 2 5 95 0 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 4 5 4 3 5 128 0 0 5 1 5 0 1 128 7 1 1 1 132 0 2 0 4 3 2 4 105 0 6 6 5 95 0 5 5 31 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 26 25 24 23 19 17 14 12 9 7 0 3 0 3 17 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0157;
unicode = 343;
},
{
glyphname = uni0163;
lastChange = "2025-03-01 21:33:46 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (160,0);
ref = cedilla;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
23 1 4 0 24 1 2 5 4 2 76 12 11 2 1 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 5 0 4 5 128 3 1 0 0 1 95 2 1 1 1 33 77 6 1 5 5 35 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 5 0 4 5 128 2 1 1 3 1 0 4 1 0 103 6 1 5 5 35 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 29 0 29 36 17 19 17 23 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = uni0180;
lastChange = "2025-03-16 14:43:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(969,639,o),
(966,438,o),
(949,382,cs),
(920,289,o),
(895,233,o),
(802,169,cs),
(767,145,o),
(720,137,o),
(668,137,cs),
(616,137,o),
(542,163,o),
(523,176,cs),
(488,199,o),
(447,234,o),
(422,305,c),
(422,786,l),
(443,857,o),
(491,894,o),
(524,915,cs),
(545,929,o),
(619,951,o),
(670,951,cs),
(721,951,o),
(768,943,o),
(803,919,cs),
(885,860,o),
(916,809,o),
(949,704,cs)
);
},
{
closed = 1;
nodes = (
(79,1372,l),
(79,1221,l),
(237,1221,l),
(237,0,l),
(387,0,l),
(415,118,l),
(430,99,o),
(446,83,o),
(463,68,cs),
(480,53,o),
(499,40,o),
(519,29,cs),
(547,13,o),
(654,-20,o),
(723,-20,cs),
(792,-20,o),
(854,-6,o),
(907,21,cs),
(960,48,o),
(1005,86,o),
(1041,135,cs),
(1077,184,o),
(1104,242,o),
(1123,310,cs),
(1132,344,o),
(1149,445,o),
(1149,545,cs),
(1149,641,o),
(1132,737,o),
(1123,770,cs),
(1104,837,o),
(1077,895,o),
(1041,944,cs),
(1005,993,o),
(961,1032,o),
(908,1060,cs),
(855,1088,o),
(794,1102,o),
(726,1102,cs),
(644,1102,o),
(543,1068,o),
(514,1052,cs),
(497,1042,o),
(480,1031,o),
(465,1019,cs),
(450,1006,o),
(435,993,o),
(422,978,c),
(422,1221,l),
(716,1221,l),
(716,1372,l),
(422,1372,l),
(422,1498,l),
(237,1498,l),
(237,1372,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 0 3 35 1 4 1 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
19 1 0 3 35 1 5 1 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 2 32 77 0 6 6 7 95 10 1 7 7 30 77 0 0 0 3 97 0 3 3 33 77 8 1 1 1 4 97 9 5 2 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 2 32 77 0 6 6 7 95 10 1 7 7 30 77 0 0 0 3 97 0 3 3 33 77 8 1 1 1 4 97 9 5 2 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 2 32 77 0 6 6 7 95 10 1 7 7 30 77 0 0 0 3 97 0 3 3 33 77 9 1 5 5 31 77 8 1 1 1 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 0 1 3 0 105 0 2 2 32 77 0 6 6 7 95 10 1 7 7 30 77 9 1 5 5 31 77 8 1 1 1 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
10 1 7 0 6 3 7 6 104 0 3 0 0 1 3 0 105 0 2 2 32 77 9 1 5 5 31 77 8 1 1 1 4 97 0 4 4 37 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
37 37 16 16 0 0 37 40 37 40 39 38 16 36 16 36 32 30 24 22 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0180;
unicode = 384;
},
{
glyphname = uni0188;
lastChange = "2025-03-16 14:40:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(773,1386,l),
(1177,1386,l),
(1177,1249,l),
(936,1249,l),
(936,710,l),
(770,710,l),
(769,742,o),
(771,784,o),
(760,813,c),
(747,842,o),
(729,866,o),
(707,889,c),
(684,910,o),
(658,928,o),
(627,941,c),
(597,954,o),
(554,950,o),
(519,950,c),
(464,950,o),
(410,949,o),
(374,926,c),
(336,902,o),
(306,873,o),
(283,836,c),
(261,798,o),
(246,757,o),
(235,710,c),
(225,665,o),
(221,609,o),
(221,562,c),
(221,520,l),
(221,473,o),
(225,417,o),
(235,371,c),
(246,325,o),
(261,283,o),
(283,247,c),
(306,209,o),
(336,180,o),
(374,157,c),
(410,135,o),
(464,132,o),
(519,132,c),
(554,132,o),
(597,128,o),
(627,141,c),
(658,155,o),
(684,171,o),
(707,193,c),
(726,213,o),
(743,236,o),
(756,263,c),
(769,288,o),
(769,339,o),
(770,372,c),
(936,372,l),
(936,317,o),
(934,256,o),
(914,208,c),
(893,160,o),
(865,119,o),
(828,83,c),
(790,48,o),
(747,21,o),
(695,1,c),
(645,-20,o),
(580,-20,o),
(519,-20,c),
(443,-20,o),
(364,-15,o),
(306,15,c),
(249,43,o),
(200,83,o),
(162,132,c),
(122,183,o),
(94,240,o),
(73,305,c),
(53,371,o),
(53,449,o),
(53,520,c),
(53,562,l),
(53,633,o),
(53,712,o),
(73,777,c),
(94,842,o),
(122,900,o),
(162,950,c),
(200,998,o),
(249,1038,o),
(306,1068,c),
(364,1097,o),
(443,1102,o),
(519,1102,c),
(580,1102,o),
(645,1102,o),
(695,1082,c),
(723,1070,o),
(749,1057,o),
(773,1042,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
8 1 2 3 5 3 2 114 9 1 5 4 4 5 112 0 7 7 6 97 0 6 6 30 77 0 3 3 1 97 0 1 1 39 77 0 4 4 0 98 0 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 1 2 3 5 3 2 114 9 1 5 4 3 5 4 126 0 7 7 6 97 0 6 6 30 77 0 3 3 1 97 0 1 1 39 77 0 4 4 0 98 0 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
8 1 2 3 5 3 2 5 128 9 1 5 4 3 5 4 126 0 7 7 6 97 0 6 6 30 77 0 3 3 1 97 0 1 1 39 77 0 4 4 0 98 0 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
8 1 2 3 5 3 2 5 128 9 1 5 4 3 5 4 126 0 1 0 3 2 1 3 105 0 7 7 6 97 0 6 6 30 77 0 4 4 0 98 0 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
8 1 2 3 5 3 2 5 128 9 1 5 4 3 5 4 126 0 6 0 7 1 6 7 105 0 1 0 3 2 1 3 105 0 4 4 0 98 0 0 0 31 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 45 44 42 40 39 37 0 34 0 34 54 35 19 38 35 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0188;
unicode = 392;
},
{
glyphname = uni0219;
lastChange = "2025-03-01 21:57:18 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 3 5 3 2 5 128 0 6 4 7 4 6 7 128 8 1 5 9 1 7 5 7 99 0 3 3 1 97 0 1 1 33 77 0 0 0 4 97 0 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 3 5 3 2 5 128 0 6 4 7 4 6 7 128 0 1 0 3 2 1 3 105 8 1 5 9 1 7 5 7 99 0 0 0 4 97 0 4 4 31 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
40 40 0 0 40 43 40 43 42 41 0 39 0 39 43 34 18 43 34 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0219;
unicode = 537;
},
{
glyphname = uni021B;
lastChange = "2025-03-01 21:57:29 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
ref = commaaccent;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
15 1 4 3 16 1 5 4 2 76 29 4 2 2 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 5 1 5 0 1 128 8 1 1 1 132 6 1 3 3 2 95 7 1 2 2 33 77 0 4 4 5 97 0 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 5 1 5 0 1 128 8 1 1 1 132 7 1 2 6 1 3 4 2 3 103 0 4 4 5 97 0 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
0 0 28 27 26 25 21 19 14 12 8 7 6 5 0 3 0 3 17 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = uni0256;
lastChange = "2025-03-16 14:18:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-98,0);
ref = d;
},
{
pos = (247,0);
ref = uniE101;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
35 1 0 4 19 1 2 1 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
35 1 0 4 19 1 2 8 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 0 7 6 7 101 10 1 5 5 32 77 0 0 0 4 97 0 4 4 33 77 11 8 9 3 1 1 2 98 3 1 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 6 0 7 6 7 101 10 1 5 5 32 77 0 0 0 4 97 0 4 4 33 77 11 1 8 8 2 96 0 2 2 31 77 9 1 1 1 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 0 0 1 4 0 105 0 6 0 7 6 7 101 10 1 5 5 32 77 11 1 8 8 2 96 0 2 2 31 77 9 1 1 1 3 97 0 3 3 37 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
37 37 16 16 0 0 37 47 37 47 44 42 41 39 16 36 16 36 32 30 24 22 18 17 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0256;
unicode = 598;
},
{
glyphname = uni1E21;
lastChange = "2025-03-01 21:29:43 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
ref = macron;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1
PUSHW[ ]	/* 1 value pushed */
-82
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni1E21;
unicode = 7713;
},
{
glyphname = uni1EBD;
lastChange = "2025-03-01 21:29:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
14 1 6 4 5 4 6 5 128 13 1 1 0 4 6 1 4 103 0 9 9 32 77 0 11 11 7 97 0 7 7 32 77 15 12 2 10 10 8 97 0 8 8 30 77 0 0 0 3 97 0 3 3 39 77 0 5 5 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
15 1 12 11 10 11 12 114 14 1 6 4 5 4 6 5 128 13 1 1 0 4 6 1 4 103 0 9 9 32 77 0 11 11 7 97 0 7 7 32 77 0 10 10 8 97 0 8 8 30 77 0 0 0 3 97 0 3 3 39 77 0 5 5 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
15 1 12 11 10 11 12 10 128 14 1 6 4 5 4 6 5 128 13 1 1 0 4 6 1 4 103 0 9 9 32 77 0 11 11 7 97 0 7 7 32 77 0 10 10 8 97 0 8 8 30 77 0 0 0 3 97 0 3 3 39 77 0 5 5 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 9 7 8 7 9 8 128 15 1 12 11 10 11 12 10 128 14 1 6 4 5 4 6 5 128 13 1 1 0 4 6 1 4 103 0 11 11 7 97 0 7 7 32 77 0 10 10 8 97 0 8 8 30 77 0 0 0 3 97 0 3 3 39 77 0 5 5 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 9 7 8 7 9 8 128 15 1 12 11 10 11 12 10 128 14 1 6 4 5 4 6 5 128 0 3 0 0 1 3 0 105 13 1 1 0 4 6 1 4 103 0 11 11 7 97 0 7 7 32 77 0 10 10 8 97 0 8 8 30 77 0 5 5 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
0 9 7 8 7 9 8 128 15 1 12 11 10 11 12 10 128 14 1 6 4 5 4 6 5 128 0 8 0 10 3 8 10 106 0 3 0 0 1 3 0 105 13 1 1 0 4 6 1 4 103 0 11 11 7 97 0 7 7 32 77 0 5 5 2 97 0 2 2 31 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
36 36 9 9 0 0 36 63 36 63 60 58 55 53 50 49 46 44 41 39 9 35 9 35 32 30 27 26 22 20 14 12 0 8 0 8 35 16 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni1EBD;
unicode = 7869;
},
{
glyphname = uni1EF9;
lastChange = "2025-03-01 21:29:22 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
ref = tilde;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 6 32 77 0 8 8 4 97 0 4 4 32 77 10 9 2 7 7 5 97 0 5 5 30 77 1 1 0 0 33 77 0 3 3 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 1 9 8 7 8 9 114 0 6 6 32 77 0 8 8 4 97 0 4 4 32 77 0 7 7 5 97 0 5 5 30 77 1 1 0 0 33 77 0 3 3 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 9 8 7 8 9 7 128 0 6 6 32 77 0 8 8 4 97 0 4 4 32 77 0 7 7 5 97 0 5 5 30 77 1 1 0 0 33 77 0 3 3 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 4 5 4 6 5 128 10 1 9 8 7 8 9 7 128 0 8 8 4 97 0 4 4 32 77 0 7 7 5 97 0 5 5 30 77 1 1 0 0 33 77 0 3 3 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 4 5 4 6 5 128 10 1 9 8 7 8 9 7 128 1 1 0 7 3 7 0 3 128 0 8 8 4 97 0 4 4 32 77 0 7 7 5 97 0 5 5 30 77 0 3 3 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 4 5 4 6 5 128 10 1 9 8 7 8 9 7 128 1 1 0 7 3 7 0 3 128 0 5 0 7 0 5 7 106 0 8 8 4 97 0 4 4 32 77 0 3 3 2 98 0 2 2 41 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
14 14 14 41 14 41 35 35 19 35 37 33 34 18 17 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni1EF9;
unicode = 7929;
},
{
glyphname = uogonek;
lastChange = "2025-03-01 21:29:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = ogonek;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 5 4 5 100 3 1 1 1 33 77 0 2 2 0 97 0 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 5 4 5 100 3 1 1 1 33 77 0 2 2 0 97 0 0 0 37 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 5 4 5 100 3 1 1 1 33 77 0 2 2 0 97 0 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 5 4 5 100 3 1 1 1 33 77 0 2 2 0 97 0 0 0 37 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 2 1 133 0 4 0 5 4 5 100 0 2 2 0 97 0 0 0 37 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 18 20 36 20 35 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = uring;
lastChange = "2025-03-01 21:28:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = ring;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
16 1 4 6 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
16 1 8 6 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 0 1 2 0 105 9 1 1 10 1 3 5 1 3 105 7 1 5 5 33 77 0 6 6 4 97 8 1 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 0 1 2 0 105 9 1 1 10 1 3 5 1 3 105 7 1 5 5 33 77 0 6 6 4 97 8 1 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 0 1 2 0 105 9 1 1 10 1 3 5 1 3 105 7 1 5 5 33 77 0 6 6 4 97 8 1 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 0 1 2 0 105 9 1 1 10 1 3 5 1 3 105 7 1 5 5 33 77 0 6 6 4 97 8 1 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 0 1 2 0 105 9 1 1 10 1 3 5 1 3 105 7 1 5 5 4 97 8 1 4 4 37 77 0 6 6 4 97 8 1 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 0 1 2 0 105 9 1 1 10 1 3 5 1 3 105 7 1 5 5 8 95 0 8 8 31 77 0 6 6 4 97 0 4 4 37 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
8 8 0 0 39 38 37 36 32 30 26 25 21 19 8 15 8 14 12 10 0 7 0 6 34 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uring;
unicode = 367;
},
{
glyphname = utilde;
lastChange = "2025-03-01 21:28:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
ref = tilde;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
28 1 6 8 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
28 1 10 8 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 2 32 77 0 4 4 0 97 0 0 0 32 77 11 5 2 3 3 1 97 0 1 1 30 77 9 1 7 7 33 77 0 8 8 6 97 10 1 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 2 32 77 0 4 4 0 97 0 0 0 32 77 11 5 2 3 3 1 97 0 1 1 30 77 9 1 7 7 33 77 0 8 8 6 97 10 1 6 6 37 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 4 3 4 5 114 0 2 2 32 77 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 9 1 7 7 33 77 0 8 8 6 97 10 1 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 4 3 4 5 114 0 2 2 32 77 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 9 1 7 7 33 77 0 8 8 6 97 10 1 6 6 37 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
11 1 5 4 3 4 5 3 128 0 2 2 32 77 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 9 1 7 7 33 77 0 8 8 6 97 10 1 6 6 37 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 2 0 1 0 2 1 128 11 1 5 4 3 4 5 3 128 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 9 1 7 7 33 77 0 8 8 6 97 10 1 6 6 37 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 2 0 1 0 2 1 128 11 1 5 4 3 4 5 3 128 0 4 4 0 97 0 0 0 32 77 0 3 3 1 97 0 1 1 30 77 9 1 7 7 6 97 10 1 6 6 37 77 0 8 8 6 97 10 1 6 6 37 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 2 0 1 0 2 1 128 11 1 5 4 3 4 5 3 128 0 1 0 3 7 1 3 106 0 4 4 0 97 0 0 0 32 77 9 1 7 7 10 95 0 10 10 31 77 0 8 8 6 97 0 6 6 37 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 51 50 49 48 44 42 38 37 33 31 0 27 0 27 35 35 19 35 35 12 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = wacute;
lastChange = "2025-03-01 21:28:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
ref = acute;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 6 3 3 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
8 1 6 5 0 5 6 0 128 0 1 0 3 0 1 3 128 0 5 5 32 77 2 1 0 0 33 77 7 4 2 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 6 5 133 8 1 6 0 6 133 0 1 0 3 0 1 3 128 2 1 0 0 33 77 7 4 2 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 6 5 133 8 1 6 0 6 133 0 1 0 3 0 1 3 128 2 1 0 0 3 96 7 4 2 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
13 13 0 0 13 16 13 16 15 14 0 12 0 12 17 18 18 17 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = wacute;
unicode = 7811;
},
{
glyphname = wcircumflex;
lastChange = "2025-03-01 21:28:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
4 1 1 0 18 13 10 3 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 1 1 0 3 0 1 3 128 0 4 3 6 3 4 6 128 0 0 0 32 77 5 1 3 3 33 77 8 7 2 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 133 2 1 1 3 1 133 0 4 3 6 3 4 6 128 5 1 3 3 33 77 8 7 2 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 133 2 1 1 3 1 133 0 4 3 6 3 4 6 128 5 1 3 3 6 96 8 7 2 6 6 31 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
7 7 7 19 7 19 17 18 18 18 18 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = wdieresis;
lastChange = "2025-03-01 21:27:55 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
ref = dieresis;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 6 3 3 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 3 0 1 3 128 8 1 6 6 5 95 7 1 5 5 32 77 2 1 0 0 33 77 9 4 2 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 3 0 1 3 128 8 1 6 6 5 95 7 1 5 5 32 77 2 1 0 0 3 95 9 4 2 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 3 0 1 3 128 7 1 5 8 1 6 0 5 6 103 2 1 0 0 3 95 9 4 2 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
0 0 20 19 18 17 16 15 14 13 0 12 0 12 17 18 18 17 10 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = wdieresis;
unicode = 7813;
},
{
glyphname = wgrave;
lastChange = "2025-03-01 21:27:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
ref = grave;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 6 3 3 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 5 0 5 6 0 128 0 1 0 3 0 1 3 128 0 5 5 32 77 2 1 0 0 33 77 7 4 2 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 133 0 6 0 6 133 0 1 0 3 0 1 3 128 2 1 0 0 33 77 7 4 2 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 5 133 0 6 0 6 133 0 1 0 3 0 1 3 128 2 1 0 0 3 96 7 4 2 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 16 15 14 13 0 12 0 12 17 18 18 17 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = wgrave;
unicode = 7809;
},
{
glyphname = yacute;
lastChange = "2025-03-01 21:27:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
ref = acute;
}
);
width = 1229;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = ycircumflex;
lastChange = "2025-03-01 21:27:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
ref = circumflex;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
4 1 1 0 10 1 6 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
2 1 1 0 3 0 1 3 128 0 0 0 32 77 4 1 3 3 33 77 0 6 6 5 98 0 5 5 41 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 1 0 133 2 1 1 3 1 133 4 1 3 3 33 77 0 6 6 5 98 0 5 5 41 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 0 1 0 133 2 1 1 3 1 133 4 1 3 6 3 133 0 6 6 5 98 0 5 5 41 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
33 34 18 18 18 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = ydieresis;
lastChange = "2025-03-01 21:27:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
ref = dieresis;
}
);
width = 1229;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = ygrave;
lastChange = "2025-03-01 21:35:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
ref = grave;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 5 4 0 4 5 0 128 0 4 4 32 77 1 1 0 0 33 77 0 3 3 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 5 4 133 0 5 0 5 133 1 1 0 0 33 77 0 3 3 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 5 4 133 0 5 0 5 133 1 1 0 3 0 133 0 3 3 2 98 0 2 2 41 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 18 33 34 18 17 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = zacute;
lastChange = "2025-03-01 21:35:39 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
ref = acute;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
10 5 2 4 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 1 1 0 3 0 1 3 128 0 0 0 32 77 0 2 2 3 95 0 3 3 33 77 0 4 4 5 95 7 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 133 6 1 1 3 1 133 0 3 0 2 4 3 2 104 0 4 4 5 95 7 1 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
4 4 0 0 4 13 4 13 12 11 9 8 7 6 0 3 0 3 17 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = zcaron;
lastChange = "2025-03-01 21:35:50 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
ref = caron;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
2 1 2 0 13 8 2 5 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 4 0 2 4 128 1 1 0 0 32 77 0 3 3 4 95 0 4 4 33 77 0 5 5 6 95 7 1 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 4 0 2 4 128 0 4 0 3 5 4 3 104 1 1 0 0 32 77 0 5 5 6 95 7 1 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
1 1 0 2 0 133 0 2 4 2 133 0 4 0 3 5 4 3 104 0 5 5 6 95 7 1 6 6 31 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
7 7 7 16 7 16 18 17 19 17 18 16 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = zdotaccent;
lastChange = "2025-03-01 21:36:07 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
ref = dotaccent;
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
10 5 2 4 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 0 95 0 0 0 32 77 0 2 2 3 95 0 3 3 33 77 0 4 4 5 95 6 1 5 5 31 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 0 2 4 3 2 103 0 1 1 0 95 0 0 0 32 77 0 4 4 5 95 6 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 3 0 1 103 0 3 0 2 4 3 2 103 0 4 4 5 95 6 1 5 5 31 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
4 4 4 13 4 13 18 17 19 17 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = uniA78C;
lastChange = "2025-03-01 21:58:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(682,912,l),
(708,1459,l),
(521,1459,l),
(546,912,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uniA78C;
unicode = 42892;
},
{
glyphname = i.loclTRK;
lastChange = "2025-03-03 14:15:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = i;
}
);
width = 1229;
}
);
},
{
glyphname = lcommaaccent.loclMAH;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
ref = commaaccent;
}
);
width = 1229;
}
);
},
{
glyphname = ncommaaccent.loclMAH;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
ref = commaaccent;
}
);
width = 1229;
}
);
},
{
glyphname = fi;
lastChange = "2025-02-28 21:38:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,866,l),
(98,998,l),
(263,998,l),
(263,1068,ls),
(263,1164,o),
(319,1308,o),
(371,1357,qs),
(421,1406,o),
(565,1456,o),
(654,1456,q),
(719,1456,l),
(719,1311,l),
(675,1311,l),
(617,1311,o),
(527,1283,o),
(498,1254,qs),
(467,1225,o),
(434,1130,o),
(434,1068,qs),
(434,998,l),
(587,998,l),
(587,866,l),
(434,866,l),
(434,0,l),
(263,0,l),
(263,866,l)
);
},
{
closed = 1;
nodes = (
(1102,0,l),
(932,0,l),
(932,866,l),
(683,866,l),
(683,997,l),
(1102,997,l)
);
},
{
closed = 1;
nodes = (
(900,1226,l),
(1130,1226,l),
(1130,1456,l),
(900,1456,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 4 3 97 10 1 3 3 32 77 12 1 11 11 3 97 10 1 3 3 32 77 9 6 2 1 1 2 95 7 5 2 2 2 33 77 8 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
7 5 2 2 9 6 2 1 0 2 1 103 0 4 4 3 97 10 1 3 3 32 77 12 1 11 11 3 97 10 1 3 3 32 77 8 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
7 5 2 2 9 6 2 1 0 2 1 103 0 4 4 3 97 0 3 3 32 77 12 1 11 11 10 95 0 10 10 32 77 8 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 3 0 4 11 3 4 105 7 5 2 2 9 6 2 1 0 2 1 103 12 1 11 11 10 95 0 10 10 32 77 8 1 0 0 31 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
28 28 28 31 28 31 30 29 27 26 17 17 17 20 33 36 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
lastChange = "2025-03-01 16:43:54 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,866,l),
(40,998,l),
(205,998,l),
(205,1068,ls),
(205,1164,o),
(261,1308,o),
(313,1357,qs),
(363,1406,o),
(507,1456,o),
(596,1456,q),
(621,1456,l),
(621,1311,l),
(617,1311,l),
(559,1311,o),
(469,1283,o),
(440,1254,qs),
(409,1225,o),
(376,1130,o),
(376,1068,qs),
(376,998,l),
(529,998,l),
(529,866,l),
(376,866,l),
(376,0,l),
(205,0,l),
(205,866,l)
);
},
{
closed = 1;
nodes = (
(743,153,o),
(847,79,qs),
(951,0,o),
(1189,0,qs),
(1189,162,ls),
(1013,162,o),
(1005,206,qs),
(926,265,o),
(926,409,qs),
(926,1456,l),
(743,1456,l),
(743,375,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
5 1 2 6 1 1 8 2 1 103 0 4 4 3 97 7 1 3 3 36 77 0 8 8 0 97 9 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 3 0 4 2 3 4 105 5 1 2 6 1 1 8 2 1 103 0 8 8 0 97 9 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 7 3 7 133 0 3 0 4 2 3 4 105 5 1 2 6 1 1 8 2 1 103 0 8 8 0 97 9 1 0 0 31 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
32 30 36 17 17 20 33 36 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = ordfeminine;
lastChange = "2025-03-01 21:44:43 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (203,720);
ref = a;
scale = (0.6696,0.6696);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
13 1 2 1 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
13 1 7 1 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 105 0 3 8 1 0 1 3 0 105 0 1 2 2 1 89 0 1 1 2 97 7 1 2 1 2 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 5 4 3 4 5 3 128 0 7 1 2 1 7 2 128 0 6 0 4 5 6 4 105 0 3 8 1 0 1 3 0 105 0 1 7 2 1 89 0 1 1 2 97 0 2 1 2 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
4 0 41 40 37 35 33 32 30 28 24 21 17 15 10 8 0 12 4 12 9 9 22
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = ordmasculine;
lastChange = "2025-03-01 21:44:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (202,719);
ref = o;
scale = (0.6713,0.6713);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 2 97 0 2 2 46 77 4 1 1 1 3 97 5 1 3 3 47 3 78 25 25 0 0 25 40 25 39 33 31 0 24 0 23 42 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = uni01C0;
lastChange = "2025-02-28 21:02:41 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,1456,l),
(714,1456,l),
(714,-398,l),
(514,-398,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 0 133 2 1 1 1 118 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni01C0;
unicode = 448;
},
{
glyphname = uni03A9;
lastChange = "2025-02-28 08:54:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(868,329,o),
(901,427,qs),
(922,493,o),
(944,660,o),
(944,759,qs),
(944,840,ls),
(944,957,o),
(899,1098,o),
(857,1160,qs),
(814,1221,o),
(690,1285,o),
(612,1285,q),
(535,1285,o),
(413,1221,o),
(371,1160,qs),
(328,1098,o),
(282,957,o),
(282,840,qs),
(282,759,ls),
(282,660,o),
(305,494,o),
(327,429,qs),
(360,330,o),
(475,241,o),
(553,223,q),
(553,0,l),
(101,0,l),
(101,151,l),
(363,151,l),
(301,198,o),
(202,333,o),
(168,414,qs),
(133,494,o),
(97,670,o),
(97,759,qs),
(97,838,ls),
(97,977,o),
(170,1212,o),
(238,1297,qs),
(305,1381,o),
(495,1476,o),
(612,1476,qs),
(729,1476,o),
(920,1381,o),
(988,1297,qs),
(1055,1212,o),
(1129,977,o),
(1129,838,qs),
(1129,759,ls),
(1129,670,o),
(1093,493,o),
(1060,413,qs),
(1026,333,o),
(928,198,o),
(866,151,q),
(1132,151,l),
(1132,0,l),
(680,0,l),
(680,223,l),
(757,240,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
40 16 2 2 0 39 17 2 3 2 2 76 0 0 0 1 97 0 1 1 20 77 4 1 2 2 3 95 7 5 6 3 3 3 22 3 78 50 50 46 46 50 53 50 53 52 51 46 49 46 49 48 47 29 27 36 8 7 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni03A9;
unicode = 937;
},
{
glyphname = pi;
lastChange = "2025-02-28 08:54:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494,889,l),
(732,889,l),
(732,0,l),
(923,0,l),
(923,889,l),
(1133,889,l),
(1133,1082,l),
(95,1082,l),
(95,889,l),
(304,889,l),
(304,0,l),
(494,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
4 2 2 0 0 1 95 0 1 1 21 77 6 5 2 3 3 22 3 78 0 0 0 11 0 11 17 17 17 17 17 7 7 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = pi;
unicode = 960;
},
{
glyphname = fraction;
lastChange = "2025-02-28 20:46:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,0,l),
(403,0,l),
(999,1456,l),
(825,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 32 77 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = onehalf;
lastChange = "2025-03-02 12:46:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (4,855);
ref = one;
scale = (0.4123,0.4123);
},
{
pos = (702,0);
ref = two;
scale = (0.405,0.405);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
7 6 5 3 3 0 33 1 4 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
2 1 0 9 1 3 5 0 3 103 0 5 0 4 6 5 4 106 0 6 1 1 6 87 0 6 6 1 95 10 7 8 3 1 6 1 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
8 1 1 7 1 134 2 1 0 9 1 3 5 0 3 103 0 5 0 4 6 5 4 106 0 6 7 7 6 87 0 6 6 7 95 10 1 7 6 7 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
11 11 4 4 0 0 11 49 11 49 48 47 36 34 26 24 4 10 4 10 9 8 0 3 0 3 17 11 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = onequarter;
lastChange = "2025-03-02 12:47:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (4,855);
ref = one;
scale = (0.4127,0.4127);
},
{
pos = (663,0);
ref = four;
scale = (0.4121,0.4121);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
7 6 5 3 3 0 23 1 4 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 3 5 3 10 5 128 2 1 0 12 1 3 10 0 3 103 0 5 4 1 5 87 6 1 4 9 1 7 1 4 7 104 0 5 5 1 95 8 11 2 1 5 1 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 10 3 5 3 10 5 128 11 1 1 8 1 134 2 1 0 12 1 3 10 0 3 103 0 5 4 8 5 87 6 1 4 9 1 7 8 4 7 104 0 5 5 8 95 0 8 5 8 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
4 4 0 0 25 24 22 21 20 19 18 17 16 15 14 13 12 11 4 10 4 10 9 8 0 3 0 3 17 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = threequarters;
lastChange = "2025-03-02 12:48:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (663,0);
ref = four;
scale = (0.4121,0.4121);
},
{
pos = (38,865);
ref = three;
scale = (0.4062,0.4062);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
40 35 2 4 5 19 1 3 4 18 1 2 3 53 1 7 8 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 4 5 3 5 4 3 128 0 13 2 8 2 13 8 128 6 1 0 0 5 4 0 5 103 0 3 0 2 13 3 2 105 0 8 7 1 8 87 9 1 7 12 1 10 1 7 10 104 0 8 8 1 95 11 14 2 1 8 1 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 3 5 4 3 128 0 13 2 8 2 13 8 128 14 1 1 11 1 134 6 1 0 0 5 4 0 5 103 0 3 0 2 13 3 2 105 0 8 7 11 8 87 9 1 7 12 1 10 11 7 10 104 0 8 8 11 95 0 11 8 11 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
0 0 55 54 52 51 50 49 48 47 46 45 44 43 42 41 39 38 37 36 34 32 23 21 17 15 0 3 0 3 17 15 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = uni00B9;
lastChange = "2025-03-02 12:42:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (362,981);
ref = one;
scale = (0.4116,0.4116);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
3 2 1 3 1 0 1 76 0 0 0 46 77 2 1 1 1 47 1 78 0 0 0 6 0 6 20 3 9 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni00B9;
unicode = 185;
},
{
glyphname = uni00B2;
lastChange = "2025-03-02 12:43:29 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (365,981);
ref = two;
scale = (0.4052,0.4052);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
22 1 0 1 1 76 0 0 0 1 97 0 1 1 46 77 0 2 2 3 95 4 1 3 3 47 3 78 0 0 0 38 0 38 27 40 45 5 9 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni00B2;
unicode = 178;
},
{
glyphname = uni00B3;
lastChange = "2025-03-02 12:44:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (365,989);
ref = three;
scale = (0.4058,0.4058);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
36 31 2 2 3 15 1 1 2 14 1 0 1 3 76 0 2 3 1 3 2 1 128 0 3 3 4 95 0 4 4 46 77 0 1 1 0 97 0 0 0 47 0 78 17 18 41 36 43 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni00B3;
unicode = 179;
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 1229;
}
);
note = CR;
unicode = 13;
},
{
glyphname = .null;
lastChange = "2025-02-26 22:57:35 +0000";
layers = (
{
layerId = m01;
width = 1229;
}
);
note = .null;
},
{
glyphname = period;
lastChange = "2025-02-27 19:35:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,0,l),
(714,0,l),
(714,200,l),
(514,200,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
lastChange = "2025-02-27 18:54:02 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,-217,l),
(638,-216,l),
(749,183,l),
(572,183,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 0 1 76 0 0 1 0 133 0 1 1 35 1 78 18 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
lastChange = "2025-02-27 19:34:31 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
ref = period;
},
{
alignment = -1;
pos = (0,876);
ref = period;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 1 1 0 95 0 0 0 33 77 0 2 2 3 95 5 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 4 1 1 2 0 1 103 0 2 2 3 95 5 1 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
lastChange = "2025-02-27 19:37:26 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (41,876);
ref = period;
},
{
alignment = -1;
ref = comma;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 1 3 1 2 3 128 4 1 1 1 0 95 0 0 0 33 77 0 3 3 35 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 1 3 1 2 3 128 0 0 4 1 1 2 0 1 103 0 3 3 35 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 3 1 2 3 128 0 3 3 132 0 0 1 1 0 87 0 0 0 1 95 4 1 1 0 1 79
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 7 6 5 4 0 3 0 3 17 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = ellipsis;
lastChange = "2025-02-28 07:58:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,0,l),
(314,0,l),
(314,200,l),
(114,200,l)
);
},
{
closed = 1;
nodes = (
(514,0,l),
(714,0,l),
(714,200,l),
(514,200,l)
);
},
{
closed = 1;
nodes = (
(914,0,l),
(1114,0,l),
(1114,200,l),
(914,200,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 95 8 5 7 3 6 5 1 1 31 1 78 8 8 4 4 0 0 8 11 8 11 10 9 4 7 4 7 6 5 0 3 0 3 17 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = exclam;
lastChange = "2025-02-27 11:15:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(719,1456,l),
(509,1456,l),
(526,559,l),
(701,559,l)
);
},
{
closed = 1;
nodes = (
(514,0,l),
(714,0,l),
(714,200,l),
(514,200,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 95 0 0 0 32 77 0 2 2 3 95 5 1 3 3 31 3 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = exclamdown;
lastChange = "2025-02-27 20:04:07 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(509,-374,l),
(719,-374,l),
(702,523,l),
(527,523,l)
);
},
{
closed = 1;
nodes = (
(714,1082,l),
(514,1082,l),
(514,882,l),
(714,882,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 1 3 0 2 1 3 2 103 4 1 1 0 0 1 87 4 1 1 1 0 95 0 0 1 0 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = question;
lastChange = "2025-02-27 18:57:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,575,o),
(538,612,qs),
(554,648,o),
(614,715,o),
(664,761,qs),
(698,796,o),
(769,870,o),
(799,911,qs),
(828,951,o),
(866,1041,o),
(866,1091,qs),
(866,1143,o),
(837,1224,o),
(809,1252,qs),
(778,1283,o),
(684,1315,o),
(623,1315,qs),
(576,1315,o),
(487,1292,o),
(453,1268,qs),
(418,1243,o),
(376,1168,o),
(376,1116,q),
(191,1116,l),
(192,1200,o),
(260,1334,o),
(318,1381,qs),
(375,1427,o),
(532,1476,o),
(623,1476,qs),
(724,1476,o),
(883,1425,o),
(938,1376,qs),
(993,1327,o),
(1051,1187,o),
(1051,1097,qs),
(1051,1025,o),
(1001,898,o),
(962,842,qs),
(923,785,o),
(826,687,o),
(779,645,qs),
(749,616,o),
(716,564,o),
(708,537,qs),
(700,510,o),
(696,449,o),
(696,410,q),
(511,410,l),
(512,482,o)
);
},
{
closed = 1;
nodes = (
(514,0,l),
(714,0,l),
(714,200,l),
(514,200,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 3 0 1 3 128 6 1 3 4 0 3 4 126 0 0 0 2 97 0 2 2 36 77 0 4 4 5 95 7 1 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 3 0 1 3 128 6 1 3 4 0 3 4 126 0 2 0 0 1 2 0 105 0 4 4 5 95 7 1 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
35 35 0 0 35 38 35 38 37 36 0 34 0 34 36 20 59 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = question;
unicode = 63;
},
{
glyphname = questiondown;
lastChange = "2025-02-27 19:02:50 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(714,510,o),
(699,474,qs),
(684,438,o),
(625,371,o),
(576,326,q),
(545,291,o),
(479,216,o),
(452,175,qs),
(424,134,o),
(389,44,o),
(389,-7,qs),
(389,-60,o),
(416,-142,o),
(443,-170,qs),
(471,-200,o),
(558,-231,o),
(614,-231,qs),
(657,-231,o),
(738,-208,o),
(770,-183,qs),
(801,-159,o),
(839,-84,o),
(839,-32,q),
(1024,-32,l),
(1023,-116,o),
(960,-250,o),
(905,-296,qs),
(850,-343,o),
(701,-392,o),
(614,-392,qs),
(517,-392,o),
(364,-341,o),
(312,-292,qs),
(259,-243,o),
(204,-103,o),
(204,-13,qs),
(204,59,o),
(251,187,o),
(288,244,qs),
(324,300,o),
(415,399,o),
(460,442,qs),
(489,471,o),
(521,521,o),
(529,548,qs),
(536,574,o),
(539,634,o),
(539,673,q),
(724,673,l),
(723,602,o)
);
},
{
closed = 1;
nodes = (
(531,882,l),
(731,882,l),
(731,1082,l),
(531,1082,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 1 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
6 1 3 4 1 4 3 1 128 0 1 0 4 1 0 126 0 4 4 5 95 7 1 5 5 33 77 0 0 0 2 98 0 2 2 41 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
6 1 3 4 1 4 3 1 128 0 1 0 4 1 0 126 0 0 0 2 0 2 102 0 4 4 5 95 7 1 5 5 33 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
6 1 3 4 1 4 3 1 128 0 1 0 4 1 0 126 7 1 5 0 4 3 5 4 103 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
35 35 0 0 35 38 35 38 37 36 0 34 0 34 36 20 59 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = periodcentered;
lastChange = "2025-02-28 07:33:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,630,l),
(714,630,l),
(714,830,l),
(514,830,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 7 0 6 34 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = bullet;
lastChange = "2025-02-28 09:54:29 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,815,ls),
(366,760,o),
(366,700,o),
(421,645,cs),
(529,537,ls),
(584,482,o),
(644,482,o),
(699,537,cs),
(807,645,ls),
(862,700,o),
(862,760,o),
(807,815,cs),
(699,923,ls),
(644,978,o),
(584,978,o),
(529,923,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 7 0 6 34 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = asterisk;
lastChange = "2025-03-03 14:56:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,426,l),
(524,606,l),
(504,281,l),
(724,281,l),
(704,606,l),
(975,426,l),
(1085,616,l),
(793,761,l),
(1085,906,l),
(975,1096,l),
(704,916,l),
(724,1241,l),
(504,1241,l),
(524,916,l),
(253,1096,l),
(143,906,l),
(435,761,l),
(143,616,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
14 13 12 11 10 9 8 7 4 3 2 1 12 0 73 0 0 0 118 21 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = exclamdbl;
lastChange = "2025-02-28 09:03:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,1456,l),
(224,1456,l),
(241,559,l),
(416,559,l)
);
},
{
closed = 1;
nodes = (
(229,0,l),
(429,0,l),
(429,200,l),
(229,200,l)
);
},
{
closed = 1;
nodes = (
(1004,1456,l),
(794,1456,l),
(811,559,l),
(986,559,l)
);
},
{
closed = 1;
nodes = (
(799,0,l),
(999,0,l),
(999,200,l),
(799,200,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
10 5 8 3 1 1 0 95 4 1 0 0 32 77 6 1 2 2 3 95 11 7 9 3 3 3 31 3 78 12 12 8 8 4 4 0 0 12 15 12 15 14 13 8 11 8 11 10 9 4 7 4 7 6 5 0 3 0 3 17 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = exclamdbl;
unicode = 8252;
},
{
glyphname = numbersign;
lastChange = "2025-02-27 14:35:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,1036,l),
(171,1036,l),
(145,891,l),
(349,891,l),
(294,572,l),
(90,572,l),
(64,426,l),
(268,426,l),
(194,1,l),
(339,1,l),
(413,426,l),
(707,426,l),
(633,1,l),
(779,1,l),
(853,426,l),
(1057,426,l),
(1083,572,l),
(879,572,l),
(934,891,l),
(1138,891,l),
(1164,1036,l),
(960,1036,l),
(1033,1456,l),
(887,1456,l),
(814,1036,l),
(520,1036,l),
(593,1456,l),
(448,1456,l)
);
},
{
closed = 1;
nodes = (
(494,891,l),
(788,891,l),
(733,572,l),
(439,572,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
16 15 5 3 3 14 6 2 1 0 3 1 104 13 7 2 0 12 10 2 8 9 0 8 103 4 1 2 2 32 77 11 1 9 9 31 9 78 4 4 4 31 4 31 30 29 28 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 18 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = onedotenleader;
lastChange = "2025-02-28 07:56:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,0,l),
(714,0,l),
(714,200,l),
(514,200,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = onedotenleader;
unicode = 8228;
},
{
glyphname = uni2047;
lastChange = "2025-02-28 09:33:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,575,o),
(295,612,qs),
(307,648,o),
(353,715,o),
(391,761,qs),
(417,796,o),
(471,870,o),
(493,911,qs),
(515,951,o),
(544,1041,o),
(544,1091,qs),
(544,1143,o),
(522,1224,o),
(501,1252,qs),
(477,1283,o),
(406,1315,o),
(360,1315,qs),
(324,1315,o),
(257,1292,o),
(231,1268,qs),
(204,1243,o),
(172,1168,o),
(172,1116,q),
(32,1116,l),
(33,1200,o),
(84,1334,o),
(128,1381,qs),
(172,1427,o),
(291,1476,o),
(360,1476,qs),
(436,1476,o),
(557,1425,o),
(599,1376,qs),
(641,1327,o),
(685,1187,o),
(685,1097,qs),
(685,1025,o),
(647,898,o),
(617,842,qs),
(588,785,o),
(514,687,o),
(478,645,qs),
(455,616,o),
(430,564,o),
(424,537,qs),
(418,510,o),
(415,449,o),
(415,410,q),
(275,410,l),
(276,482,o)
);
},
{
closed = 1;
nodes = (
(795,575,o),
(808,612,qs),
(820,648,o),
(865,715,o),
(903,761,qs),
(929,796,o),
(983,870,o),
(1006,911,qs),
(1028,951,o),
(1056,1041,o),
(1056,1091,qs),
(1056,1143,o),
(1034,1224,o),
(1013,1252,qs),
(990,1283,o),
(918,1315,o),
(872,1315,qs),
(836,1315,o),
(769,1292,o),
(743,1268,qs),
(717,1243,o),
(685,1168,o),
(685,1116,q),
(544,1116,l),
(545,1200,o),
(597,1334,o),
(641,1381,qs),
(684,1427,o),
(803,1476,o),
(872,1476,qs),
(949,1476,o),
(1069,1425,o),
(1111,1376,qs),
(1153,1327,o),
(1197,1187,o),
(1197,1097,qs),
(1197,1025,o),
(1159,898,o),
(1129,842,qs),
(1100,785,o),
(1026,687,o),
(990,645,qs),
(968,616,o),
(943,564,o),
(937,537,qs),
(931,510,o),
(927,449,o),
(927,410,q),
(787,410,l),
(788,482,o)
);
},
{
closed = 1;
nodes = (
(254,0,l),
(454,0,l),
(454,200,l),
(254,200,l)
);
},
{
closed = 1;
nodes = (
(764,0,l),
(964,0,l),
(964,200,l),
(764,200,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
65 1 2 6 26 22 2 5 2 2 76 27 1 5 1 75 0 5 2 3 2 5 3 128 12 8 2 3 0 2 3 0 126 7 1 6 4 1 2 5 6 2 105 9 1 0 0 1 95 13 10 11 3 1 1 31 1 78 81 81 4 4 0 0 81 84 81 84 83 82 4 80 4 80 70 68 62 60 56 55 51 47 36 35 19 15 0 3 0 3 17 14 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2047;
unicode = 8263;
},
{
glyphname = slash;
lastChange = "2025-03-01 21:06:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,-264,l),
(403,-264,l),
(999,1456,l),
(825,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 32 77 2 1 1 1 31 1 78 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
lastChange = "2025-02-27 17:20:46 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,1456,l),
(825,-264,l),
(999,-264,l),
(403,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 32 77 0 0 0 31 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = twodotenleader;
lastChange = "2025-02-28 07:57:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,0,l),
(514,0,l),
(514,200,l),
(314,200,l)
);
},
{
closed = 1;
nodes = (
(714,0,l),
(914,0,l),
(914,200,l),
(714,200,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
2 1 0 0 1 95 5 3 4 3 1 1 31 1 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = twodotenleader;
unicode = 8229;
},
{
glyphname = uni203D;
lastChange = "2025-02-28 09:41:02 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,0,l),
(714,0,l),
(714,200,l),
(514,200,l)
);
},
{
closed = 1;
nodes = (
(702,803,l),
(766,870,o),
(799,911,qs),
(828,951,o),
(866,1041,o),
(866,1091,qs),
(866,1143,o),
(837,1224,o),
(809,1252,qs),
(769,1292,o),
(709,1307,q)
);
},
{
closed = 1;
nodes = (
(485,1290,o),
(453,1268,qs),
(409,1237,o),
(376,1168,o),
(376,1116,q),
(191,1116,l),
(192,1200,o),
(260,1334,o),
(318,1381,qs),
(375,1427,o),
(532,1476,o),
(623,1476,qs),
(724,1476,o),
(883,1425,o),
(938,1376,qs),
(993,1327,o),
(1051,1187,o),
(1051,1097,qs),
(1051,1025,o),
(1001,898,o),
(962,842,qs),
(923,785,o),
(826,687,o),
(779,645,qs),
(749,616,o),
(716,564,o),
(708,537,qs),
(700,510,o),
(696,449,o),
(696,410,q),
(511,410,l),
(498,1291,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
41 22 19 8 4 2 3 33 31 7 3 4 2 2 76 0 2 3 4 3 2 4 128 6 1 4 4 3 95 0 3 3 32 77 0 0 0 1 95 5 1 1 1 31 1 78 4 4 0 0 4 32 4 32 21 20 14 13 0 3 0 3 17 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni203D;
unicode = 8253;
},
{
glyphname = uni2042;
lastChange = "2025-03-03 15:02:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (262,458);
ref = asterisk;
scale = (0.5741,0.5741);
},
{
pos = (-82,-162);
ref = asterisk;
scale = (0.5741,0.5741);
},
{
pos = (606,-162);
ref = asterisk;
scale = (0.5741,0.5741);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
44 43 42 41 40 39 38 37 34 33 32 31 12 0 2 1 76 29 28 27 26 25 24 23 22 19 18 17 16 14 13 12 11 10 9 8 7 4 3 2 1 24 0 73 0 2 0 2 133 1 1 0 0 118 30 30 21 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2042;
unicode = 8258;
},
{
glyphname = uni2048;
lastChange = "2025-02-28 08:59:40 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,575,o),
(390,612,qs),
(403,648,o),
(451,715,o),
(492,761,qs),
(519,796,o),
(577,870,o),
(601,911,qs),
(624,951,o),
(655,1041,o),
(655,1091,qs),
(655,1143,o),
(631,1224,o),
(609,1252,qs),
(584,1283,o),
(508,1315,o),
(459,1315,qs),
(421,1315,o),
(349,1292,o),
(321,1268,qs),
(293,1243,o),
(259,1168,o),
(259,1116,q),
(110,1116,l),
(111,1200,o),
(166,1334,o),
(213,1381,qs),
(259,1427,o),
(385,1476,o),
(459,1476,qs),
(540,1476,o),
(669,1425,o),
(713,1376,qs),
(757,1327,o),
(804,1187,o),
(804,1097,qs),
(804,1025,o),
(764,898,o),
(732,842,qs),
(701,785,o),
(623,687,o),
(585,645,qs),
(560,616,o),
(534,564,o),
(527,537,qs),
(521,510,o),
(518,449,o),
(518,410,q),
(368,410,l),
(369,482,o)
);
},
{
closed = 1;
nodes = (
(1068,1456,l),
(899,1456,l),
(913,559,l),
(1053,559,l)
);
},
{
closed = 1;
nodes = (
(351,0,l),
(551,0,l),
(551,200,l),
(351,200,l)
);
},
{
closed = 1;
nodes = (
(883,0,l),
(1083,0,l),
(1083,200,l),
(883,200,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 7 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 4 1 4 5 1 128 12 1 7 1 2 1 7 2 128 0 4 4 6 97 0 6 6 36 77 10 1 1 1 0 95 0 0 0 32 77 8 1 2 2 3 95 13 9 11 3 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 5 4 1 4 5 1 128 12 1 7 1 8 1 7 8 128 0 4 4 6 97 0 6 6 36 77 10 1 1 1 0 95 0 0 0 32 77 0 8 8 3 95 13 9 11 3 3 3 31 77 0 2 2 3 95 13 9 11 3 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 5 4 1 4 5 1 128 12 1 7 1 8 1 7 8 128 0 6 0 4 5 6 4 105 10 1 1 1 0 95 0 0 0 32 77 0 8 8 3 95 13 9 11 3 3 3 31 77 0 2 2 3 95 13 9 11 3 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
43 43 8 8 4 4 0 0 43 46 43 46 45 44 8 42 8 42 33 31 27 26 22 19 4 7 4 7 6 5 0 3 0 3 17 14 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2048;
unicode = 8264;
},
{
glyphname = uni2049;
lastChange = "2025-02-28 09:00:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,575,o),
(679,612,qs),
(692,648,o),
(740,715,o),
(781,761,qs),
(808,796,o),
(866,870,o),
(890,911,qs),
(913,951,o),
(944,1041,o),
(944,1091,qs),
(944,1143,o),
(920,1224,o),
(898,1252,qs),
(873,1283,o),
(797,1315,o),
(748,1315,qs),
(710,1315,o),
(638,1292,o),
(610,1268,qs),
(582,1243,o),
(548,1168,o),
(548,1116,q),
(399,1116,l),
(400,1200,o),
(455,1334,o),
(502,1381,qs),
(548,1427,o),
(674,1476,o),
(748,1476,qs),
(829,1476,o),
(958,1425,o),
(1002,1376,qs),
(1046,1327,o),
(1093,1187,o),
(1093,1097,qs),
(1093,1025,o),
(1053,898,o),
(1021,842,qs),
(990,785,o),
(912,687,o),
(874,645,qs),
(849,616,o),
(823,564,o),
(816,537,qs),
(810,510,o),
(807,449,o),
(807,410,q),
(657,410,l),
(658,482,o)
);
},
{
closed = 1;
nodes = (
(304,1456,l),
(135,1456,l),
(149,559,l),
(289,559,l)
);
},
{
closed = 1;
nodes = (
(119,0,l),
(319,0,l),
(319,200,l),
(119,200,l)
);
},
{
closed = 1;
nodes = (
(638,0,l),
(838,0,l),
(838,200,l),
(638,200,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 7 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 4 1 4 5 1 128 12 1 7 1 2 1 7 2 128 0 4 4 6 97 0 6 6 36 77 10 1 1 1 0 95 0 0 0 32 77 8 1 2 2 3 95 13 9 11 3 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 5 4 1 4 5 1 128 12 1 7 1 8 1 7 8 128 0 4 4 6 97 0 6 6 36 77 10 1 1 1 0 95 0 0 0 32 77 0 8 8 3 95 13 9 11 3 3 3 31 77 0 2 2 3 95 13 9 11 3 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 5 4 1 4 5 1 128 12 1 7 1 8 1 7 8 128 0 6 0 4 5 6 4 105 10 1 1 1 0 95 0 0 0 32 77 0 8 8 3 95 13 9 11 3 3 3 31 77 0 2 2 3 95 13 9 11 3 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
43 43 8 8 4 4 0 0 43 46 43 46 45 44 8 42 8 42 33 31 27 26 22 19 4 7 4 7 6 5 0 3 0 3 17 14 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2049;
unicode = 8265;
},
{
glyphname = uni204E;
lastChange = "2025-03-03 14:57:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-500);
ref = asterisk;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
14 13 12 11 10 9 8 7 4 3 2 1 12 0 73 0 0 0 118 21 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni204E;
unicode = 8270;
},
{
glyphname = uni2051;
lastChange = "2025-03-03 14:58:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (119,570);
ref = asterisk;
scale = (0.8067,0.8067);
},
{
pos = (119,-340);
ref = asterisk;
scale = (0.8067,0.8067);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
29 28 27 26 25 24 23 22 19 18 17 16 12 0 1 1 76 14 13 12 11 10 9 8 7 4 3 2 1 12 0 73 0 1 0 1 133 0 0 0 118 30 21 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2051;
unicode = 8273;
},
{
glyphname = uni2055;
lastChange = "2025-03-03 15:51:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(705,-46,l),
(705,300,l),
(966,38,l),
(1117,188,l),
(856,450,l),
(1214,450,l),
(1214,662,l),
(854,662,l),
(1119,927,l),
(967,1076,l),
(705,814,l),
(705,1154,l),
(492,1154,l),
(492,814,l),
(268,1037,l),
(119,886,l),
(342,662,l),
(14,662,l),
(14,450,l),
(341,450,l),
(120,229,l),
(270,78,l),
(492,300,l),
(492,-46,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
14 13 12 9 8 7 6 1 2 21 20 19 2 1 0 6 5 0 2 76 0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79 20 17 20 20 17 19 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2055;
unicode = 8277;
},
{
glyphname = hyphen;
lastChange = "2025-02-27 20:33:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,450,l),
(1029,450,l),
(1029,610,l),
(200,610,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = endash;
lastChange = "2025-02-28 09:52:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,450,l),
(1075,450,l),
(1075,610,l),
(155,610,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
lastChange = "2025-02-28 09:52:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,450,l),
(1164,450,l),
(1164,610,l),
(64,610,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = underscore;
lastChange = "2025-02-27 20:33:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,0,l),
(1074,0,l),
(1074,-160,l),
(154,-160,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
lastChange = "2025-02-27 19:26:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,986,o),
(433,1094,qs),
(471,1201,o),
(570,1379,o),
(625,1448,qs),
(679,1517,o),
(759,1585,o),
(809,1613,q),
(878,1613,l),
(878,1521,l),
(846,1497,o),
(781,1429,o),
(750,1387,qs),
(704,1322,o),
(620,1147,o),
(592,1043,qs),
(565,949,o),
(535,723,o),
(535,593,qs),
(535,579,ls),
(535,454,o),
(563,236,o),
(587,144,qs),
(613,51,o),
(681,-108,o),
(718,-171,qs),
(756,-231,o),
(837,-324,o),
(878,-357,q),
(878,-440,l),
(809,-440,l),
(759,-412,o),
(678,-345,o),
(624,-275,qs),
(569,-206,o),
(470,-29,o),
(433,79,qs),
(395,186,o),
(350,438,o),
(350,581,qs),
(350,591,ls),
(350,734,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 10 2 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 32 77 2 1 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 95 0 0 0 32 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 20 0 20 24 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
lastChange = "2025-02-27 19:27:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(878,591,qs),
(878,581,ls),
(878,438,o),
(833,186,o),
(795,79,qs),
(758,-29,o),
(659,-206,o),
(604,-275,qs),
(550,-345,o),
(469,-412,o),
(419,-440,q),
(350,-440,l),
(350,-357,l),
(391,-324,o),
(472,-231,o),
(510,-171,qs),
(547,-108,o),
(615,51,o),
(641,144,qs),
(665,236,o),
(693,454,o),
(693,579,qs),
(693,593,ls),
(693,723,o),
(663,949,o),
(636,1043,qs),
(608,1147,o),
(524,1322,o),
(478,1387,qs),
(447,1429,o),
(382,1497,o),
(350,1521,q),
(350,1613,l),
(419,1613,l),
(469,1585,o),
(549,1517,o),
(603,1448,qs),
(658,1379,o),
(757,1201,o),
(795,1094,qs),
(833,986,o),
(878,734,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
10 1 2 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 32 77 2 1 1 1 31 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 95 0 0 0 32 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 20 0 20 27 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
lastChange = "2025-02-27 19:22:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(685,1692,o),
(603,1619,qs),
(498,1525,o),
(485,1309,qs),
(469,1026,l),
(456,931,o),
(433,902,qs),
(379,837,o),
(312,835,qs),
(204,835,l),
(204,601,l),
(312,601,ls),
(381,601,o),
(424,551,qs),
(471,497,o),
(472,415,qs),
(485,88,ls),
(489,-1,o),
(547,-96,qs),
(651,-269,o),
(895,-269,qs),
(1024,-269,l),
(1024,-91,l),
(900,-91,ls),
(762,-91,o),
(700,34,qs),
(658,78,o),
(655,141,qs),
(641,454,ls),
(632,644,o),
(569,681,qs),
(505,720,l),
(570,760,l),
(634,814,o),
(641,968,qs),
(655,1274,ls),
(658,1336,o),
(687,1385,qs),
(732,1520,o),
(900,1520,qs),
(1024,1520,l),
(1024,1692,l),
(884,1692,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 3 1 4 3 103 0 0 0 5 95 6 1 5 5 32 77 0 1 1 2 95 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 5 0 0 4 5 0 103 0 4 0 3 1 4 3 103 0 1 1 2 95 0 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 42 0 41 33 39 33 46 33 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
lastChange = "2025-02-27 19:22:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,1692,l),
(204,1520,l),
(328,1520,ls),
(496,1520,o),
(541,1385,qs),
(570,1336,o),
(573,1274,qs),
(587,968,ls),
(594,814,o),
(658,760,q),
(723,720,l),
(659,681,ls),
(596,644,o),
(587,454,qs),
(573,141,ls),
(570,78,o),
(528,34,qs),
(466,-91,o),
(328,-91,qs),
(204,-91,l),
(204,-269,l),
(333,-269,ls),
(577,-269,o),
(681,-96,qs),
(739,-1,o),
(743,88,qs),
(756,415,ls),
(757,497,o),
(804,551,qs),
(847,601,o),
(916,601,qs),
(1024,601,l),
(1024,835,l),
(916,835,ls),
(849,837,o),
(795,902,qs),
(772,931,o),
(759,1026,q),
(743,1309,ls),
(730,1525,o),
(625,1619,qs),
(543,1692,o),
(344,1692,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 2 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 2 4 1 2 103 0 5 5 0 95 0 0 0 32 77 0 4 4 3 95 0 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 1 0 5 103 0 1 0 2 4 1 2 103 0 4 4 3 95 0 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
46 33 39 33 39 32 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
lastChange = "2025-02-27 19:18:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(569,-160,l),
(834,-160,l),
(834,-312,l),
(394,-312,l),
(394,1664,l),
(834,1664,l),
(834,1512,l),
(569,1512,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 1 0 95 0 0 0 32 77 0 2 2 3 95 4 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 2 4 1 3 2 3 99 0 1 1 0 95 0 0 0 32 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 7 0 7 17 17 17 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
lastChange = "2025-02-27 19:19:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(834,-312,l),
(394,-312,l),
(394,-160,l),
(659,-160,l),
(659,1512,l),
(394,1512,l),
(394,1664,l),
(834,1664,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 1 2 95 0 2 2 32 77 0 0 0 3 95 4 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 0 4 1 3 0 3 99 0 1 1 2 95 0 2 2 32 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 7 0 7 17 17 17 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = quotesinglbase;
lastChange = "2025-02-28 09:42:39 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,-305,l),
(723,103,l),
(723,225,l),
(538,225,l),
(355,-305,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 0 1 76 0 0 1 0 133 0 1 1 35 1 78 18 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
lastChange = "2025-02-28 09:43:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(363,-305,l),
(583,103,l),
(583,225,l),
(398,225,l),
(215,-305,l)
);
},
{
closed = 1;
nodes = (
(653,-305,l),
(873,103,l),
(873,225,l),
(688,225,l),
(505,-305,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 1 0 1 76 2 1 0 0 1 95 3 1 1 1 35 1 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = quotedblleft;
lastChange = "2025-02-28 09:49:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-163,0);
ref = quoteleft;
},
{
alignment = -1;
pos = (162,0);
ref = quoteleft;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 3 4 3 1 1 0 95 2 1 0 0 32 1 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
lastChange = "2025-02-28 09:48:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-160,0);
ref = quoteright;
},
{
alignment = -1;
pos = (172,0);
ref = quoteright;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 3 4 3 1 1 0 95 2 1 0 0 32 1 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
lastChange = "2025-02-28 09:50:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(712,1569,l),
(492,1161,l),
(492,1039,l),
(677,1039,l),
(860,1569,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 32 1 78 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
lastChange = "2025-02-28 09:49:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(516,1028,l),
(736,1436,l),
(736,1558,l),
(551,1558,l),
(368,1028,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 32 1 78 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = guillemotleft;
lastChange = "2025-02-27 20:20:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-167,-35);
ref = guilsinglleft;
},
{
alignment = -1;
pos = (168,-35);
ref = guilsinglleft;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 9 5 2 2 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
lastChange = "2025-02-27 20:21:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-172,0);
ref = guilsinglright;
},
{
alignment = -1;
pos = (173,0);
ref = guilsinglright;
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 8 4 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = guilsinglleft;
lastChange = "2025-02-27 20:20:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(691,153,l),
(396,541,l),
(396,560,l),
(691,949,l),
(832,949,l),
(574,550,l),
(832,153,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 2 1 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
lastChange = "2025-02-27 20:21:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(832,541,l),
(538,152,l),
(396,152,l),
(654,550,l),
(396,949,l),
(538,949,l),
(832,560,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
4 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = quotedbl;
lastChange = "2025-02-28 09:44:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(354,1057,l),
(355,1411,l),
(355,1536,l),
(505,1536,l),
(505,1427,l),
(484,1057,l)
);
},
{
closed = 1;
nodes = (
(712,1057,l),
(713,1411,l),
(713,1536,l),
(863,1536,l),
(862,1427,l),
(841,1057,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 3 4 3 1 1 0 95 2 1 0 0 32 1 78 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
lastChange = "2025-02-28 09:45:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494,1057,l),
(495,1409,l),
(495,1536,l),
(653,1536,l),
(653,1425,l),
(632,1057,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 32 1 78 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = florin;
lastChange = "2025-02-27 20:15:50 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(684,1198,ls),
(684,1265,o),
(722,1358,o),
(800,1406,o),
(861,1406,qs),
(891,1406,o),
(941,1401,o),
(962,1395,q),
(985,1543,l),
(947,1553,o),
(876,1564,o),
(839,1564,qs),
(733,1564,o),
(578,1480,o),
(497,1317,o),
(497,1198,qs),
(497,1083,l),
(322,1083,l),
(322,938,l),
(497,938,l),
(497,-105,ls),
(497,-164,o),
(464,-255,o),
(402,-302,o),
(358,-302,qs),
(344,-302,o),
(273,-297,o),
(259,-289,q),
(244,-440,l),
(273,-450,o),
(327,-457,o),
(358,-457,qs),
(460,-457,o),
(606,-376,o),
(684,-217,o),
(684,-105,qs),
(684,938,l),
(890,938,l),
(890,1083,l),
(684,1083,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
30 1 6 5 31 1 4 6 11 1 2 0 10 1 1 2 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 6 4 5 6 105 0 2 0 1 2 1 101 3 1 0 0 4 95 8 7 2 4 4 30 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 0 6 4 5 6 105 8 7 2 4 3 1 0 2 4 0 103 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 39 0 39 37 36 17 20 37 36 17 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = florin;
unicode = 402;
},
{
glyphname = uni0E3F;
lastChange = "2025-02-28 11:08:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(671,-131,l),
(671,0,l),
(717,6,o),
(875,57,o),
(942,110,qs),
(1009,162,o),
(1089,318,o),
(1088,420,qs),
(1088,485,o),
(1049,597,o),
(1014,642,qs),
(981,683,o),
(879,751,o),
(824,764,q),
(824,767,l),
(877,790,o),
(952,842,o),
(983,880,qs),
(1013,917,o),
(1048,1011,o),
(1049,1068,qs),
(1050,1170,o),
(970,1316,o),
(903,1363,q),
(809,1436,o),
(671,1456,q),
(671,1669,l),
(471,1669,l),
(471,1456,l),
(141,1456,l),
(141,0,l),
(471,0,l),
(471,-131,l)
);
},
{
closed = 1;
nodes = (
(327,681,l),
(471,681,l),
(471,157,l),
(327,157,l)
);
},
{
closed = 1;
nodes = (
(671,676,l),
(708,670,o),
(787,639,o),
(821,610,qs),
(859,576,o),
(902,480,o),
(901,418,qs),
(901,357,o),
(854,261,o),
(814,228,qs),
(753,179,o),
(671,163,q)
);
},
{
closed = 1;
nodes = (
(327,1299,l),
(471,1299,l),
(471,835,l),
(327,835,l)
);
},
{
closed = 1;
nodes = (
(671,1290,l),
(730,1276,o),
(777,1244,qs),
(816,1216,o),
(863,1130,o),
(863,1069,qs),
(863,1012,o),
(815,926,o),
(776,897,qs),
(730,863,o),
(671,847,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
40 31 2 6 5 14 1 7 6 55 45 2 8 7 23 1 4 8 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 1 133 0 3 4 3 134 2 1 0 0 5 6 0 5 103 0 6 0 7 8 6 7 103 0 8 4 4 8 87 0 8 8 4 95 9 1 4 8 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 133 0 2 0 5 0 2 5 128 0 3 4 3 134 0 0 0 5 6 0 5 103 0 6 0 7 8 6 7 103 0 8 4 4 8 87 0 8 8 4 95 9 1 4 8 4 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
0 0 44 43 42 41 30 29 28 27 0 26 0 26 25 24 17 17 17 10 6 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0E3F;
unicode = 3647;
},
{
glyphname = at;
lastChange = "2025-02-28 08:31:21 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,161,o),
(309,267,qs),
(286,326,o),
(286,403,qs),
(286,430,ls),
(291,556,o),
(323,614,qs),
(364,694,o),
(429,696,qs),
(439,696,ls),
(514,696,o),
(554,626,qs),
(587,567,o),
(587,438,qs),
(587,427,ls),
(584,303,o),
(559,236,qs),
(528,158,o),
(433,158,qs),
(421,158,ls)
);
},
{
closed = 1;
nodes = (
(613,771,l),
(559,849,o),
(444,849,qs),
(320,849,o),
(248,790,qs),
(132,693,o),
(132,430,qs),
(132,168,o),
(234,67,qs),
(293,10,o),
(420,0,qs),
(426,0,ls),
(472,0,o),
(559,46,qs),
(594,65,o),
(635,115,q),
(656,85,o),
(694,51,qs),
(755,0,o),
(847,0,qs),
(1054,0,o),
(1084,236,qs),
(1107,408,o),
(1107,595,qs),
(1107,698,o),
(1100,805,qs),
(1080,1119,o),
(982,1281,qs),
(875,1456,o),
(602,1456,qs),
(393,1456,o),
(282,1381,qs),
(168,1302,o),
(138,1179,qs),
(122,1042,o),
(122,979,q),
(294,979,l),
(301,1117,ls),
(305,1204,o),
(381,1257,qs),
(445,1305,o),
(602,1305,qs),
(787,1305,o),
(867,1190,qs),
(919,1117,o),
(954,797,qs),
(960,726,o),
(960,633,qs),
(960,473,o),
(939,245,qs),
(933,163,o),
(847,163,qs),
(752,163,o),
(752,242,qs),
(752,441,l),
(752,849,l),
(613,849,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
74 1 1 8 59 1 6 0 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
74 1 1 9 59 1 6 0 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 4 3 8 3 4 8 128 11 9 2 8 0 1 0 8 1 105 0 3 3 5 97 0 5 5 36 77 2 10 2 0 0 6 97 7 1 6 6 31 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 8 3 4 8 128 11 1 9 8 1 8 9 1 128 0 8 0 1 0 8 1 105 0 3 3 5 97 0 5 5 36 77 2 10 2 0 0 6 97 7 1 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 3 8 3 4 8 128 11 1 9 8 1 8 9 1 128 0 5 0 3 4 5 3 105 0 8 0 1 0 8 1 105 2 10 2 0 0 6 97 7 1 6 6 31 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
20 20 1 0 20 75 20 75 73 71 63 62 56 54 46 44 39 38 34 32 24 22 11 8 0 19 1 18 12 8 22
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
lastChange = "2025-02-28 08:26:41 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(572,950,o),
(494,890,q),
(494,894,o),
(431,990,qs),
(382,1067,o),
(382,1139,qs),
(382,1221,o),
(440,1278,qs),
(479,1320,o),
(581,1320,qs),
(588,1320,ls),
(667,1317,o),
(697,1288,qs),
(749,1239,o),
(749,1188,qs),
(749,1181,ls),
(744,1086,o),
(644,1008,qs)
);
},
{
closed = 1;
nodes = (
(700,159,o),
(581,157,qs),
(467,157,o),
(377,253,qs),
(325,310,o),
(323,412,qs),
(323,487,o),
(376,557,qs),
(410,596,o),
(457,634,q),
(604,424,o),
(749,207,q)
);
},
{
closed = 1;
nodes = (
(722,552,o),
(593,745,q),
(761,881,ls),
(931,1025,o),
(934,1185,qs),
(934,1194,ls),
(934,1299,o),
(860,1387,qs),
(778,1505,o),
(583,1505,qs),
(390,1505,o),
(305,1406,qs),
(191,1306,o),
(191,1139,qs),
(191,1055,o),
(253,939,q),
(358,791,l),
(277,721,l),
(232,688,o),
(177,605,qs),
(133,535,o),
(133,392,qs),
(133,231,o),
(267,90,qs),
(370,-18,o),
(581,-18,qs),
(731,-18,o),
(810,48,qs),
(839,72,l),
(884,0,l),
(1092,0,l),
(1024,104,o),
(964,193,q),
(1017,260,o),
(1060,397,qs),
(1089,467,o),
(1089,634,q),
(932,634,l),
(926,544,o),
(909,475,qs),
(892,408,o),
(861,342,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
69 54 2 2 0 71 38 29 19 4 1 2 42 1 3 1 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 5 97 0 5 5 32 77 0 2 2 3 97 4 1 3 3 31 77 0 1 1 3 97 4 1 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 5 97 0 5 5 32 77 0 2 2 3 95 0 3 3 31 77 0 1 1 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 0 2 5 0 105 0 2 2 3 95 0 3 3 31 77 0 1 1 4 97 0 4 4 37 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 5 0 0 2 5 0 105 0 1 0 4 1 4 101 0 2 2 3 95 0 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
62 60 46 44 41 40 34 33 28 26 53 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = paragraph;
lastChange = "2025-02-27 19:53:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,1048,o),
(305,1146,qs),
(305,1248,o),
(400,1248,qs),
(506,1248,l),
(506,0,l),
(713,0,l),
(713,1248,l),
(923,1248,l),
(923,0,l),
(1130,0,l),
(1130,1456,l),
(400,1456,ls),
(98,1456,o),
(98,1146,qs),
(98,839,o),
(400,839,q),
(400,1048,l),
(398,1048,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 6 0 0 2 6 0 105 5 1 3 3 1 95 0 1 1 30 77 4 1 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 5 1 3 6 1 3 105 0 6 0 0 2 6 0 105 4 1 2 2 31 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
18 33 17 17 17 34 17 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = section;
lastChange = "2025-03-16 14:11:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1044,262,o),
(1008,222,qs),
(989,203,o),
(943,169,o),
(918,156,q),
(943,136,o),
(985,89,o),
(1001,61,qs),
(1022,24,o),
(1044,-70,o),
(1044,-128,qs),
(1044,-216,o),
(981,-352,o),
(924,-399,qs),
(866,-446,o),
(706,-495,o),
(609,-495,qs),
(521,-495,o),
(355,-450,o),
(289,-399,qs),
(224,-349,o),
(144,-184,o),
(144,-64,q),
(309,-62,l),
(309,-140,o),
(363,-247,o),
(405,-280,qs),
(448,-314,o),
(555,-343,o),
(609,-343,qs),
(671,-343,o),
(771,-311,o),
(807,-283,qs),
(842,-255,o),
(879,-177,o),
(879,-130,qs),
(879,-82,o),
(845,-12,o),
(808,17,qs),
(779,39,o),
(695,79,o),
(639,100,qs),
(586,120,o),
(461,159,o),
(408,183,qs),
(366,202,o),
(292,246,o),
(263,273,qs),
(208,322,o),
(149,456,o),
(149,551,qs),
(149,612,o),
(186,713,o),
(220,753,qs),
(238,774,o),
(285,810,o),
(312,825,q),
(291,842,o),
(256,881,o),
(242,902,qs),
(216,943,o),
(190,1045,o),
(190,1110,qs),
(190,1194,o),
(253,1329,o),
(310,1377,qs),
(367,1425,o),
(528,1476,o),
(625,1476,qs),
(727,1476,o),
(889,1419,o),
(946,1365,qs),
(1002,1310,o),
(1064,1149,o),
(1064,1045,q),
(899,1045,l),
(899,1103,o),
(862,1206,o),
(827,1244,qs),
(793,1281,o),
(690,1325,o),
(625,1325,qs),
(558,1325,o),
(457,1292,o),
(423,1264,qs),
(388,1235,o),
(355,1157,o),
(355,1112,qs),
(355,1060,o),
(385,988,o),
(421,960,qs),
(440,945,o),
(492,917,o),
(524,903,qs),
(554,891,o),
(624,867,o),
(666,854,qs),
(714,839,o),
(801,807,o),
(839,789,qs),
(877,771,o),
(943,730,o),
(971,706,qs),
(1026,658,o),
(1084,525,o),
(1084,431,qs),
(1084,366,o)
);
},
{
closed = 1;
nodes = (
(488,728,o),
(454,742,q),
(425,734,o),
(378,707,o),
(361,688,qs),
(338,662,o),
(314,594,o),
(314,553,qs),
(314,480,o),
(376,392,o),
(452,355,qs),
(486,338,o),
(575,306,o),
(630,289,qs),
(670,276,o),
(741,252,o),
(774,238,q),
(803,247,o),
(852,276,o),
(870,296,qs),
(893,321,o),
(918,388,o),
(919,428,q),
(919,476,o),
(884,549,o),
(845,579,qs),
(827,593,o),
(783,619,o),
(756,631,qs),
(724,646,o),
(646,675,o),
(600,691,qs),
(560,703,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
66 1 4 5 38 1 1 4 77 1 7 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 5 1 5 4 1 128 0 1 0 5 1 0 126 0 0 7 5 0 7 126 8 1 7 2 5 7 2 126 0 5 5 3 97 0 3 3 32 77 0 2 2 6 98 0 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 5 1 5 4 1 128 0 1 0 5 1 0 126 0 0 7 5 0 7 126 8 1 7 2 5 7 2 126 0 3 0 5 4 3 5 105 0 2 2 6 98 0 6 6 31 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 19 90 19 90 87 84 61 59 53 52 49 46 43 54 17 9 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = section;
unicode = 167;
},
{
glyphname = copyright;
lastChange = "2025-03-03 20:56:25 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,271,o),
(305,207,qs),
(365,142,o),
(528,68,o),
(623,68,qs),
(717,68,o),
(880,143,o),
(940,208,qs),
(1000,272,o),
(1068,444,o),
(1068,542,qs),
(1068,639,o),
(1000,810,o),
(940,874,qs),
(880,938,o),
(717,1011,o),
(623,1011,qs),
(528,1011,o),
(365,938,o),
(305,874,qs),
(245,810,o),
(177,639,o),
(177,542,qs),
(177,444,o)
);
},
{
closed = 1;
nodes = (
(177,871,o),
(250,945,qs),
(322,1019,o),
(516,1102,o),
(623,1102,qs),
(736,1102,o),
(930,1014,o),
(1002,939,qs),
(1073,863,o),
(1155,659,o),
(1155,542,qs),
(1155,425,o),
(1073,220,o),
(1002,144,qs),
(930,67,o),
(736,-21,o),
(623,-21,qs),
(510,-21,o),
(315,67,o),
(244,144,qs),
(172,220,o),
(90,425,o),
(90,542,qs),
(91,664,o)
);
},
{
pos = (332,243);
ref = C;
scale = (0.469,0.4123);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 88 values pushed */
0 7 8 4 8 7 4 128 0 4 9 8 4 9 126 0 2 0 0 6 2 0 105 0 6 0 8 7 6 8 105 0 9 0 5 1 9 5 105 10 1 1 3 3 1 89 10 1 1 1 3 98 11 1 3 1 3 82 8 8 0 0 54 52 45 43 39 38 35 33 23 20 17 16 8 15 8 14 12 10 0 7 0 6 34 12 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = registered;
lastChange = "2025-03-03 20:56:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,862,o),
(241,938,qs),
(312,1014,o),
(507,1101,o),
(620,1101,qs),
(733,1101,o),
(927,1014,o),
(999,938,qs),
(1070,862,o),
(1152,657,o),
(1152,540,qs),
(1152,423,o),
(1070,218,o),
(999,143,qs),
(927,67,o),
(733,-21,o),
(620,-21,qs),
(507,-21,o),
(312,67,o),
(241,143,qs),
(169,218,o),
(87,423,o),
(87,540,qs),
(87,657,o)
);
},
{
closed = 1;
nodes = (
(242,271,o),
(302,207,qs),
(362,143,o),
(525,69,o),
(620,69,qs),
(714,69,o),
(877,143,o),
(937,207,qs),
(997,271,o),
(1065,442,o),
(1065,540,qs),
(1065,638,o),
(997,810,o),
(937,874,qs),
(877,937,o),
(714,1010,o),
(620,1010,qs),
(525,1010,o),
(362,937,o),
(302,874,qs),
(242,810,o),
(174,638,o),
(174,540,qs),
(174,442,o)
);
},
{
pos = (371,274);
ref = R;
scale = (0.4238,0.3778);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
37 1 8 4 1 76 12 9 2 7 8 1 8 7 1 128 0 2 0 0 6 2 0 105 0 6 0 5 4 6 5 105 0 4 0 8 7 4 8 103 10 1 1 3 3 1 89 10 1 1 1 3 97 11 1 3 1 3 81 27 27 8 8 0 0 27 44 27 44 43 42 40 39 30 28 26 24 18 16 8 15 8 14 12 10 0 7 0 6 34 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = registered;
unicode = 174;
},
{
glyphname = trademark;
lastChange = "2025-03-03 12:57:23 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (149,919);
ref = T;
scale = (0.3686,0.3686);
},
{
pos = (649,919);
ref = M;
scale = (0.3688,0.3688);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
19 16 11 3 7 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 7 0 3 0 7 3 128 10 8 6 9 4 3 3 132 5 4 2 1 0 0 1 87 5 4 2 1 1 0 95 2 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 0 3 0 7 3 128 9 1 3 6 0 3 6 126 10 8 2 6 6 132 5 4 2 1 0 0 1 87 5 4 2 1 1 0 95 2 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
8 8 0 0 8 20 8 20 18 17 15 14 13 12 10 9 0 7 0 7 17 17 17 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = degree;
lastChange = "2025-02-27 20:22:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,1364,o),
(438,1400,qs),
(472,1435,o),
(565,1476,o),
(617,1476,qs),
(668,1476,o),
(759,1435,o),
(793,1400,qs),
(827,1364,o),
(867,1269,o),
(867,1216,qs),
(867,1163,o),
(827,1069,o),
(793,1035,qs),
(759,1000,o),
(668,960,o),
(617,960,qs),
(565,960,o),
(472,1000,o),
(438,1035,qs),
(403,1069,o),
(362,1162,o),
(362,1216,qs),
(362,1269,o)
);
},
{
closed = 1;
nodes = (
(507,1142,o),
(525,1125,qs),
(542,1107,o),
(590,1088,o),
(617,1088,qs),
(644,1088,o),
(690,1107,o),
(708,1125,qs),
(725,1142,o),
(744,1189,o),
(744,1216,qs),
(744,1244,o),
(725,1293,o),
(708,1311,qs),
(690,1329,o),
(644,1349,o),
(617,1349,qs),
(590,1349,o),
(542,1329,o),
(525,1311,qs),
(507,1293,o),
(486,1244,o),
(486,1216,qs),
(486,1189,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 21 20 2 0 30 27 20 37 21 36 12 9 0 19 2 19 6 8 22
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = degree;
unicode = 176;
},
{
glyphname = bar;
lastChange = "2025-02-27 19:23:36 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,1456,l),
(714,1456,l),
(714,-398,l),
(514,-398,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 0 133 2 1 1 1 118 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = bar;
unicode = 124;
},
{
glyphname = brokenbar;
lastChange = "2025-02-27 19:24:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(714,521,l),
(714,-270,l),
(514,-270,l),
(514,521,l)
);
},
{
closed = 1;
nodes = (
(514,1456,l),
(714,1456,l),
(714,698,l),
(514,698,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 2 5 1 3 0 2 3 103 0 0 1 1 0 87 0 0 0 1 95 4 1 1 0 1 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = dagger;
lastChange = "2025-02-28 10:14:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(704,0,l),
(519,0,l),
(519,929,l),
(119,929,l),
(119,1082,l),
(519,1082,l),
(519,1456,l),
(704,1456,l),
(704,1082,l),
(1109,1082,l),
(1109,929,l),
(704,929,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 5 0 5 133 0 2 1 2 134 4 1 0 1 1 0 87 4 1 0 0 1 95 3 1 1 0 1 79 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = uni2113;
lastChange = "2025-02-28 10:45:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(574,45,o),
(522,105,qs),
(469,164,o),
(418,330,o),
(418,431,qs),
(418,445,l),
(369,433,o),
(285,420,o),
(229,420,q),
(229,596,l),
(287,596,o),
(371,610,o),
(418,623,q),
(418,1102,ls),
(418,1152,o),
(432,1241,o),
(445,1279,qs),
(459,1317,o),
(498,1381,o),
(524,1406,qs),
(562,1442,o),
(665,1481,o),
(728,1481,qs),
(788,1481,o),
(888,1436,o),
(924,1395,qs),
(960,1353,o),
(999,1237,o),
(999,1165,qs),
(999,1124,ls),
(999,1047,o),
(947,878,o),
(897,797,qs),
(846,715,o),
(699,570,o),
(603,518,q),
(603,431,ls),
(603,363,o),
(626,254,o),
(654,216,qs),
(682,177,o),
(832,136,o),
(900,136,q),
(900,-21,l),
(792,-21,o)
);
},
{
closed = 1;
nodes = (
(736,846,o),
(762,900,qs),
(788,953,o),
(814,1066,o),
(814,1122,qs),
(814,1165,ls),
(814,1202,o),
(803,1260,o),
(793,1280,qs),
(783,1301,o),
(749,1323,o),
(728,1323,qs),
(701,1323,o),
(659,1303,o),
(644,1284,qs),
(623,1256,o),
(603,1164,o),
(603,1102,qs),
(603,711,l),
(657,750,o)
);
}
);
width = 1229;
}
);
unicode = 8467;
},
{
glyphname = daggerdbl;
lastChange = "2025-02-28 10:16:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(702,-416,l),
(517,-416,l),
(517,0,l),
(120,0,l),
(120,151,l),
(517,151,l),
(517,929,l),
(120,929,l),
(120,1082,l),
(517,1082,l),
(517,1456,l),
(702,1456,l),
(702,1082,l),
(1109,1082,l),
(1109,929,l),
(702,929,l),
(702,151,l),
(1109,151,l),
(1109,0,l),
(702,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 9 0 9 133 0 4 3 4 134 8 1 0 7 1 1 2 0 1 103 6 1 2 3 3 2 87 6 1 2 2 3 95 5 1 3 2 3 79 19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = estimated;
lastChange = "2025-02-28 10:19:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(837,-20,o),
(677,-20,qs),
(567,-20,o),
(376,69,o),
(306,146,qs),
(235,222,o),
(153,426,o),
(153,541,qs),
(153,617,o),
(194,760,o),
(230,822,qs),
(266,884,o),
(365,987,o),
(424,1024,qs),
(482,1061,o),
(611,1102,o),
(677,1102,qs),
(780,1102,o),
(961,1020,o),
(1028,947,qs),
(1094,874,o),
(1172,676,o),
(1172,561,qs),
(1172,514,l),
(404,514,l),
(404,186,l),
(459,135,o),
(599,76,o),
(677,76,qs),
(771,75,o),
(898,117,o),
(944,189,q),
(1172,189,l),
(1116,129,l),
(1053,51,o)
);
},
{
closed = 1;
nodes = (
(461,942,o),
(404,886,q),
(404,609,l),
(944,609,l),
(944,895,l),
(890,946,o),
(754,1008,o),
(677,1008,qs),
(601,1008,o)
);
}
);
width = 1229;
}
);
unicode = 8494;
},
{
glyphname = uni2116;
lastChange = "2025-02-27 20:17:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,915,l),
(280,0,l),
(104,0,l),
(104,1456,l),
(279,1456,l),
(547,545,l),
(546,1456,l),
(722,1456,l),
(722,0,l),
(546,0,l)
);
},
{
closed = 1;
nodes = (
(826,1387,o),
(846,1414,qs),
(866,1441,o),
(926,1472,o),
(964,1472,qs),
(1003,1472,o),
(1064,1441,o),
(1084,1414,qs),
(1104,1387,o),
(1125,1315,o),
(1125,1275,qs),
(1125,1069,ls),
(1125,1029,o),
(1104,958,o),
(1084,932,qs),
(1064,905,o),
(1004,874,o),
(965,874,qs),
(926,874,o),
(867,905,o),
(847,932,qs),
(826,958,o),
(805,1029,o),
(805,1069,qs),
(805,1275,ls),
(805,1315,o)
);
},
{
closed = 1;
nodes = (
(910,1016,o),
(917,1002,qs),
(923,987,o),
(946,970,o),
(965,970,qs),
(984,970,o),
(1007,987,o),
(1014,1002,qs),
(1020,1016,o),
(1024,1055,o),
(1024,1078,qs),
(1024,1266,ls),
(1024,1288,o),
(1019,1328,o),
(1013,1343,qs),
(1006,1357,o),
(983,1374,o),
(964,1374,qs),
(946,1374,o),
(923,1357,o),
(917,1343,qs),
(911,1328,o),
(906,1288,o),
(906,1266,qs),
(906,1078,ls),
(906,1055,o)
);
},
{
closed = 1;
nodes = (
(816,806,l),
(1123,806,l),
(1123,711,l),
(816,711,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
8 1 6 0 3 1 7 5 2 76 1 1 0 6 0 133 0 6 0 4 5 6 4 105 11 1 5 12 1 7 8 5 7 105 0 8 2 2 8 87 0 8 8 2 95 13 9 10 3 4 2 8 2 79 42 42 26 26 10 10 0 0 42 45 42 45 44 43 26 41 26 40 34 32 10 25 10 24 18 16 0 9 0 9 17 18 17 14 6 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2116;
unicode = 8470;
},
{
glyphname = uni2103;
lastChange = "2025-03-16 13:48:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-186,457);
ref = degree;
scale = (0.6906,0.6906);
},
{
pos = (363,0);
ref = C;
scale = (0.714,1);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
0 7 8 1 8 7 1 128 0 4 3 9 3 4 9 128 0 0 8 2 0 89 6 1 2 0 8 7 2 8 105 10 1 1 11 1 3 4 1 3 105 0 9 5 5 9 89 0 9 9 5 97 0 5 9 5 81 16 16 0 0 70 68 61 59 55 54 51 49 39 36 33 32 16 31 16 30 24 22 0 15 0 14 38 12 6 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2103;
unicode = 8451;
},
{
glyphname = uni2109;
lastChange = "2025-03-01 21:51:37 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-168,463);
ref = degree;
scale = (0.6862,0.6862);
},
{
pos = (417,0);
ref = F;
scale = (0.6893,1);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
9 1 4 3 4 134 0 5 1 0 5 89 7 1 0 0 1 6 0 1 103 10 1 6 11 1 8 2 6 8 105 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 26 26 10 10 0 0 26 41 26 40 34 32 10 25 10 24 18 16 0 9 0 9 17 17 17 17 12 6 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2109;
unicode = 8457;
},
{
glyphname = uni2388;
lastChange = "2025-03-03 21:47:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 0;
nodes = (
(559,73,l)
);
},
{
closed = 1;
nodes = (
(857,795,l),
(815,839,o),
(722,889,o),
(673,896,q),
(673,640,l),
(885,762,l)
);
},
{
closed = 1;
nodes = (
(1154,918,l),
(1211,818,l),
(1038,719,l),
(1075,630,o),
(1069,542,qs),
(1071,449,o),
(1037,364,q),
(1211,264,l),
(1154,164,l),
(983,263,l),
(938,203,l),
(881,142,o),
(744,74,o),
(673,66,q),
(673,-114,l),
(559,-114,l),
(559,66,l),
(502,73,o),
(354,137,o),
(294,203,q),
(246,262,l),
(78,164,l),
(21,264,l),
(195,365,l),
(161,444,o),
(162,542,qs),
(163,636,o),
(194,718,q),
(21,818,l),
(78,918,l),
(246,821,l),
(299,885,ls),
(351,947,o),
(490,1008,o),
(559,1016,q),
(559,1196,l),
(673,1196,l),
(673,1016,l),
(733,1010,o),
(877,944,o),
(938,879,q),
(985,820,l),
(988,822,l)
);
},
{
closed = 1;
nodes = (
(959,481,o),
(954,543,qs),
(956,605,o),
(936,660,q),
(731,541,l),
(935,423,l)
);
},
{
closed = 1;
nodes = (
(673,442,l),
(673,186,l),
(707,191,o),
(811,239,o),
(857,287,q),
(883,320,l)
);
},
{
closed = 1;
nodes = (
(266,592,o),
(276,481,o),
(295,423,q),
(501,541,l),
(294,660,l)
);
},
{
closed = 1;
nodes = (
(374,287,l),
(416,243,o),
(511,194,o),
(559,186,q),
(559,442,l),
(347,320,l)
);
},
{
closed = 1;
nodes = (
(559,640,l),
(559,896,l),
(525,891,o),
(420,844,o),
(374,795,q),
(347,763,l)
);
}
);
width = 1229;
}
);
unicode = 9096;
},
{
glyphname = uni2406;
lastChange = "2025-03-16 17:50:28 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1214,180,l),
(14,180,l),
(14,0,l),
(1214,0,l)
);
},
{
pos = (405,346);
ref = C;
scale = (0.3241,0.3241);
},
{
pos = (-10,340);
ref = A;
scale = (0.3329,0.3329);
},
{
pos = (833,340);
ref = K;
scale = (0.3324,0.3324);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 115 values pushed */
6 1 9 10 65 62 59 3 2 9 16 1 11 5 3 76 0 9 10 2 10 9 2 128 13 12 8 3 3 0 10 9 3 10 105 0 2 0 5 11 2 5 104 0 11 15 14 7 17 6 5 4 0 11 4 103 0 0 1 1 0 87 0 0 0 1 95 16 1 1 0 1 79 7 7 0 0 67 66 64 63 61 60 58 57 53 51 44 42 38 37 34 32 22 19 7 14 7 14 13 12 11 10 9 8 5 4 0 3 0 3 17 18 6 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2406;
unicode = 9222;
},
{
glyphname = uni2415;
lastChange = "2025-03-16 17:47:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1214,180,l),
(14,180,l),
(14,0,l),
(1214,0,l)
);
},
{
pos = (-34,339);
ref = N;
scale = (0.3335,0.3335);
},
{
pos = (404,339);
ref = A;
scale = (0.3334,0.3334);
},
{
pos = (832,339);
ref = K;
scale = (0.3329,0.3329);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
34 23 20 17 6 5 2 3 29 1 4 5 2 76 12 11 8 7 4 3 2 3 133 17 14 13 10 9 16 6 7 4 5 0 5 4 0 128 0 2 0 5 4 2 5 104 0 0 1 1 0 87 0 0 0 1 95 15 1 1 0 1 79 26 26 7 7 0 0 26 35 26 35 33 32 31 30 28 27 25 24 22 21 19 18 16 15 7 14 7 14 13 12 11 10 9 8 5 4 0 3 0 3 17 18 6 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2415;
unicode = 9237;
},
{
glyphname = uniFFFC;
lastChange = "2025-03-16 17:45:42 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,996,l),
(244,1060,l),
(70,1060,l),
(70,900,l),
(134,900,l),
(134,996,l)
);
},
{
closed = 1;
nodes = (
(1159,900,l),
(1159,1060,l),
(985,1060,l),
(985,996,l),
(1098,996,l),
(1098,900,l)
);
},
{
closed = 1;
nodes = (
(134,83,l),
(134,196,l),
(70,196,l),
(70,19,l),
(244,19,l),
(244,83,l)
);
},
{
closed = 1;
nodes = (
(1098,196,l),
(1098,83,l),
(985,83,l),
(985,19,l),
(1159,19,l),
(1159,196,l)
);
},
{
closed = 1;
nodes = (
(761,83,l),
(761,19,l),
(916,19,l),
(916,83,l)
);
},
{
closed = 1;
nodes = (
(313,83,l),
(313,19,l),
(468,19,l),
(468,83,l)
);
},
{
closed = 1;
nodes = (
(313,1060,l),
(313,996,l),
(468,996,l),
(468,1060,l)
);
},
{
closed = 1;
nodes = (
(1098,266,l),
(1159,266,l),
(1159,407,l),
(1098,407,l)
);
},
{
closed = 1;
nodes = (
(1098,689,l),
(1159,689,l),
(1159,829,l),
(1098,829,l)
);
},
{
closed = 1;
nodes = (
(537,83,l),
(537,19,l),
(693,19,l),
(693,83,l)
);
},
{
closed = 1;
nodes = (
(70,266,l),
(134,266,l),
(134,407,l),
(70,407,l)
);
},
{
closed = 1;
nodes = (
(537,1060,l),
(537,996,l),
(693,996,l),
(693,1060,l)
);
},
{
closed = 1;
nodes = (
(761,1060,l),
(761,996,l),
(916,996,l),
(916,1060,l)
);
},
{
closed = 1;
nodes = (
(70,477,l),
(134,477,l),
(134,618,l),
(70,618,l)
);
},
{
closed = 1;
nodes = (
(70,689,l),
(134,689,l),
(134,829,l),
(70,829,l)
);
},
{
closed = 1;
nodes = (
(1098,477,l),
(1159,477,l),
(1159,618,l),
(1098,618,l)
);
},
{
pos = (231,382);
ref = O;
scale = (0.2003,0.2003);
},
{
pos = (503,378);
ref = B;
scale = (0.2058,0.2058);
},
{
pos = (762,382);
ref = J;
scale = (0.2033,0.2033);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
138 1 43 40 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 138 values pushed */
5 1 0 2 21 2 0 114 0 47 30 37 37 47 114 11 1 7 18 8 8 7 114 29 27 17 4 4 1 28 26 16 3 4 2 0 1 2 103 54 33 51 3 21 32 1 20 38 21 20 103 59 49 44 3 38 41 1 36 31 38 36 105 0 40 0 43 30 40 43 105 55 35 53 3 31 34 1 30 47 31 30 103 48 42 56 3 37 46 58 45 57 4 39 18 37 39 106 52 25 50 3 19 24 1 18 7 19 18 103 23 15 13 10 4 8 6 6 8 87 23 15 13 10 4 8 8 6 96 22 14 12 9 4 6 8 6 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 139 values pushed */
5 1 0 2 21 2 0 114 0 47 30 37 37 47 114 11 1 7 18 8 18 7 8 128 29 27 17 4 4 1 28 26 16 3 4 2 0 1 2 103 54 33 51 3 21 32 1 20 38 21 20 103 59 49 44 3 38 41 1 36 31 38 36 105 0 40 0 43 30 40 43 105 55 35 53 3 31 34 1 30 47 31 30 103 48 42 56 3 37 46 58 45 57 4 39 18 37 39 106 52 25 50 3 19 24 1 18 7 19 18 103 23 15 13 10 4 8 6 6 8 87 23 15 13 10 4 8 8 6 96 22 14 12 9 4 6 8 6 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 140 values pushed */
5 1 0 2 21 2 0 21 128 0 47 30 37 37 47 114 11 1 7 18 8 18 7 8 128 29 27 17 4 4 1 28 26 16 3 4 2 0 1 2 103 54 33 51 3 21 32 1 20 38 21 20 103 59 49 44 3 38 41 1 36 31 38 36 105 0 40 0 43 30 40 43 105 55 35 53 3 31 34 1 30 47 31 30 103 48 42 56 3 37 46 58 45 57 4 39 18 37 39 106 52 25 50 3 19 24 1 18 7 19 18 103 23 15 13 10 4 8 6 6 8 87 23 15 13 10 4 8 8 6 96 22 14 12 9 4 6 8 6 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 141 values pushed */
5 1 0 2 21 2 0 21 128 0 47 30 37 30 47 37 128 11 1 7 18 8 18 7 8 128 29 27 17 4 4 1 28 26 16 3 4 2 0 1 2 103 54 33 51 3 21 32 1 20 38 21 20 103 59 49 44 3 38 41 1 36 31 38 36 105 0 40 0 43 30 40 43 105 55 35 53 3 31 34 1 30 47 31 30 103 48 42 56 3 37 46 58 45 57 4 39 18 37 39 106 52 25 50 3 19 24 1 18 7 19 18 103 23 15 13 10 4 8 6 6 8 87 23 15 13 10 4 8 8 6 96 22 14 12 9 4 6 8 6 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 134 values pushed */
148 148 127 127 88 88 72 72 68 68 64 64 60 60 48 48 40 40 36 36 148 166 148 166 164 161 159 158 154 151 127 147 127 146 130 128 126 124 118 116 115 113 106 104 88 103 88 102 96 94 72 87 72 86 80 78 68 71 68 71 70 69 64 67 64 67 66 65 60 63 60 63 62 61 59 58 57 56 55 54 53 52 48 51 48 51 50 49 47 46 45 44 40 43 40 43 42 41 36 39 36 39 38 37 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 60 6 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uniFFFC;
unicode = 65532;
},
{
glyphname = uniFFFD;
lastChange = "2025-02-28 10:24:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1187,485,o),
(1187,546,qs),
(1187,605,o),
(1133,659,qs),
(729,1071,ls),
(674,1126,o),
(614,1127,qs),
(558,1127,o),
(499,1071,q),
(97,659,ls),
(42,602,o),
(42,546,qs),
(42,488,o),
(97,431,qs),
(499,20,ls),
(552,-34,o),
(614,-35,qs),
(674,-35,o),
(729,20,qs),
(1133,431,ls)
);
},
{
closed = 1;
nodes = (
(560,374,o),
(565,427,o),
(574,447,qs),
(583,468,o),
(617,505,o),
(645,531,qs),
(664,551,o),
(704,592,o),
(721,615,qs),
(737,637,o),
(758,688,o),
(758,716,qs),
(758,745,o),
(742,791,o),
(726,806,qs),
(709,824,o),
(656,842,o),
(622,842,qs),
(596,842,o),
(546,829,o),
(527,815,qs),
(507,801,o),
(484,759,o),
(484,730,q),
(380,730,l),
(380,777,o),
(419,852,o),
(451,879,qs),
(483,904,o),
(571,932,o),
(622,932,qs),
(679,932,o),
(768,903,o),
(799,876,qs),
(830,848,o),
(862,770,o),
(862,719,qs),
(862,679,o),
(834,608,o),
(812,576,qs),
(790,544,o),
(736,489,o),
(710,466,qs),
(693,450,o),
(674,420,o),
(670,405,qs),
(665,390,o),
(663,356,o),
(663,334,q),
(559,334,l)
);
},
{
closed = 1;
nodes = (
(673,216,l),
(673,104,l),
(561,104,l),
(561,216,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 4 2 3 2 4 3 128 0 3 5 2 3 5 126 0 1 0 2 4 1 2 105 8 1 5 0 6 7 5 6 104 9 1 7 0 0 7 87 9 1 7 7 0 97 0 0 7 0 81 47 47 20 20 47 50 47 50 49 48 20 46 20 46 34 18 47 40 33 10 6 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uniFFFD;
unicode = 65533;
},
{
glyphname = Euro;
lastChange = "2025-02-28 13:15:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(464,438,o),
(473,402,qs),
(500,301,o),
(527,248,o),
(559,211,qs),
(591,173,o),
(677,130,o),
(735,130,qs),
(798,130,o),
(890,176,o),
(922,218,qs),
(954,259,o),
(977,302,o),
(1000,368,q),
(1159,368,l),
(1134,273,o),
(1081,168,o),
(1027,108,qs),
(973,47,o),
(825,-20,o),
(735,-20,qs),
(657,-20,o),
(531,31,o),
(481,76,qs),
(431,121,o),
(360,243,o),
(337,315,qs),
(312,387,o),
(300,466,q),
(54,466,l),
(94,626,l),
(288,626,l),
(288,831,l),
(54,831,l),
(94,991,l),
(300,991,l),
(315,1075,o),
(337,1140,qs),
(374,1251,o),
(431,1335,o),
(481,1380,qs),
(531,1425,o),
(656,1476,o),
(735,1476,qs),
(829,1476,o),
(977,1409,o),
(1031,1348,qs),
(1084,1286,o),
(1134,1184,o),
(1159,1080,q),
(1000,1080,l),
(981,1146,o),
(954,1190,o),
(922,1233,qs),
(890,1276,o),
(798,1325,o),
(735,1325,qs),
(678,1325,o),
(591,1282,o),
(560,1245,qs),
(528,1208,o),
(486,1110,o),
(473,1055,qs),
(465,1023,o),
(460,991,q),
(934,991,l),
(894,831,l),
(449,831,l),
(449,626,l),
(934,626,l),
(894,466,l),
(461,466,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 9 10 7 10 9 7 128 0 2 0 1 0 2 1 128 14 13 2 5 4 1 0 2 5 0 103 0 10 10 8 97 0 8 8 32 77 12 1 6 6 7 95 11 1 7 7 33 77 0 1 1 3 97 0 3 3 31 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 9 10 7 10 9 7 128 0 2 0 1 0 2 1 128 0 8 0 10 9 8 10 105 14 13 2 5 4 1 0 2 5 0 103 12 1 6 6 7 95 11 1 7 7 33 77 0 1 1 3 97 0 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 9 10 7 10 9 7 128 0 2 0 1 0 2 1 128 0 8 0 10 9 8 10 105 11 1 7 12 1 6 5 7 6 103 14 13 2 5 4 1 0 2 5 0 103 0 1 1 3 97 0 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 51 0 51 45 44 43 42 40 38 36 35 34 17 21 17 21 34 18 34 17 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = cent;
lastChange = "2025-03-16 14:22:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,-245,l),
(719,-245,l),
(719,-19,l),
(719,-19,l),
(757,-17,o),
(795,-11,o),
(826,1,cs),
(880,21,o),
(926,48,o),
(966,83,cs),
(1005,119,o),
(1034,160,o),
(1057,208,cs),
(1078,256,o),
(1080,317,o),
(1080,372,c),
(905,372,l),
(904,339,o),
(904,288,o),
(890,263,cs),
(876,236,o),
(857,212,o),
(838,193,cs),
(814,171,o),
(786,155,o),
(754,141,cs),
(722,128,o),
(677,132,o),
(640,132,cs),
(582,132,o),
(525,135,o),
(487,157,cs),
(447,180,o),
(415,209,o),
(391,247,cs),
(367,283,o),
(351,325,o),
(340,371,cs),
(329,417,o),
(325,473,o),
(325,520,cs),
(325,562,ls),
(325,609,o),
(329,665,o),
(340,710,cs),
(351,757,o),
(367,798,o),
(391,836,cs),
(415,873,o),
(447,902,o),
(487,926,cs),
(525,949,o),
(582,950,o),
(640,950,cs),
(677,950,o),
(722,954,o),
(754,941,cs),
(786,928,o),
(814,910,o),
(838,889,cs),
(861,866,o),
(880,842,o),
(894,813,cs),
(906,784,o),
(904,742,o),
(905,710,c),
(1080,710,l),
(1080,765,o),
(1078,826,o),
(1057,874,cs),
(1034,922,o),
(1005,964,o),
(966,998,cs),
(926,1034,o),
(880,1061,o),
(826,1082,cs),
(794,1094,o),
(758,1099,o),
(719,1101,c),
(719,1319,l),
(532,1319,l),
(532,1097,l),
(490,1093,o),
(449,1084,o),
(415,1068,cs),
(355,1038,o),
(303,998,o),
(263,950,cs),
(221,900,o),
(191,842,o),
(169,777,cs),
(148,712,o),
(148,633,o),
(148,562,cs),
(148,520,ls),
(148,449,o),
(148,371,o),
(169,305,cs),
(191,240,o),
(221,183,o),
(263,132,cs),
(303,83,o),
(355,43,o),
(415,15,c),
(448,-1,o),
(475,-8,o),
(519,-13,c),
(532,-15,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
17 14 2 3 1 7 4 2 0 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 5 3 2 5 128 6 1 5 4 3 5 4 126 0 3 3 1 95 0 1 1 30 77 0 4 4 0 95 0 0 0 35 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 5 3 2 5 128 6 1 5 4 3 5 4 126 0 4 0 0 4 0 99 0 3 3 1 95 0 1 1 30 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 3 5 3 2 5 128 6 1 5 4 3 5 4 126 0 1 0 3 2 1 3 105 0 4 0 0 4 89 0 4 4 0 95 0 0 4 0 79
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 39 0 39 54 35 21 25 21 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = cent;
unicode = 162;
},
{
glyphname = colonmonetary;
lastChange = "2025-03-16 15:47:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (61,2);
ref = C;
scale = (0.9006,1);
},
{
pos = (-60,76);
ref = slash;
scale = (1.0981,1.0981);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
52 49 2 0 5 15 1 2 7 33 17 2 1 2 30 1 3 1 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 7 1 7 2 1 128 0 4 3 4 134 0 6 8 1 7 2 6 7 103 0 0 0 5 97 0 5 5 32 77 0 1 1 3 97 0 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 7 1 7 2 1 128 0 4 3 4 134 0 5 0 0 7 5 0 105 0 6 8 1 7 2 6 7 103 0 1 1 3 97 0 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
16 16 16 54 16 54 18 46 20 34 18 47 33 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = colonmonetary;
unicode = 8353;
},
{
glyphname = currency;
lastChange = "2025-02-27 19:51:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(719,-20,o),
(634,-20,qs),
(549,-20,o),
(400,34,o),
(338,82,q),
(234,-26,l),
(103,109,l),
(215,224,l),
(177,287,o),
(137,434,o),
(137,515,qs),
(137,601,o),
(181,755,o),
(223,820,q),
(103,944,l),
(234,1079,l),
(351,957,l),
(411,1001,o),
(554,1049,o),
(634,1049,qs),
(714,1049,o),
(858,1000,o),
(918,955,q),
(1038,1080,l),
(1170,944,l),
(1046,816,l),
(1086,752,o),
(1130,600,o),
(1130,515,qs),
(1130,435,o),
(1090,290,o),
(1054,228,q),
(1170,109,l),
(1038,-27,l),
(931,84,l),
(869,34,o)
);
},
{
closed = 1;
nodes = (
(359,309,o),
(403,260,qs),
(446,210,o),
(565,151,o),
(634,151,qs),
(703,151,o),
(821,210,o),
(865,260,qs),
(908,309,o),
(957,441,o),
(957,515,qs),
(957,589,o),
(908,721,o),
(865,771,qs),
(821,820,o),
(703,878,o),
(634,878,qs),
(565,878,o),
(446,820,o),
(403,771,qs),
(359,721,o),
(309,589,o),
(309,515,qs),
(309,441,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
13 11 7 5 4 2 0 18 14 4 3 3 2 28 26 21 19 4 1 3 3 76 12 6 2 0 74 27 20 2 1 73 0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81 29 29 29 44 29 43 42 60 40 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = currency;
unicode = 164;
},
{
glyphname = dollar;
lastChange = "2025-03-16 15:41:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (62,0);
ref = S;
scale = (0.9001,1);
},
{
pos = (1,200);
ref = uni01C0;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
55 1 1 8 45 22 9 8 4 6 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
12 1 11 1 6 1 11 114 0 6 0 1 6 0 126 10 1 8 2 1 1 11 8 1 105 7 1 0 0 3 97 5 1 3 3 31 77 0 4 4 9 95 0 9 9 30 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
12 1 11 1 6 1 11 6 128 0 6 0 1 6 0 126 10 1 8 2 1 1 11 8 1 105 7 1 0 0 3 97 5 1 3 3 31 77 0 4 4 9 95 0 9 9 30 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
12 1 11 1 6 1 11 6 128 0 6 0 1 6 0 126 10 1 8 2 1 1 11 8 1 105 0 9 0 4 9 4 99 7 1 0 0 3 97 5 1 3 3 31 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
17 17 17 62 17 62 59 58 57 56 40 19 19 17 17 26 25 25 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = dong;
lastChange = "2025-03-16 16:25:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = dcroat;
scale = (0.9004,1);
},
{
pos = (0,-200);
ref = underscore;
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 1 8 6 11 1 4 9 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 1 32 77 12 7 2 3 3 0 95 2 1 0 0 30 77 0 8 8 6 97 0 6 6 33 77 0 9 9 4 97 5 1 4 4 31 77 0 10 10 11 95 13 1 11 11 35 11 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 1 32 77 12 7 2 3 3 0 95 2 1 0 0 30 77 0 8 8 6 97 0 6 6 33 77 0 4 4 31 77 0 9 9 5 97 0 5 5 37 77 0 10 10 11 95 13 1 11 11 35 11 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 0 8 9 6 8 105 0 1 1 32 77 12 7 2 3 3 0 95 2 1 0 0 30 77 0 4 4 31 77 0 9 9 5 97 0 5 5 37 77 0 10 10 11 95 13 1 11 11 35 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 12 7 2 3 6 0 3 103 0 6 0 8 9 6 8 105 0 1 1 32 77 0 4 4 31 77 0 9 9 5 97 0 5 5 37 77 0 10 10 11 95 13 1 11 11 35 11 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
43 43 0 0 43 46 43 46 45 44 41 40 34 33 0 28 0 28 38 36 17 17 17 17 17 14 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = dong;
unicode = 8363;
},
{
glyphname = franc;
lastChange = "2025-03-16 15:44:57 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (91,0);
ref = F;
},
{
pos = (36,-50);
ref = uniECB0;
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 0 5 1 4 5 103 6 1 1 7 1 0 8 1 0 103 0 3 3 2 95 0 2 2 32 77 0 8 8 31 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 4 0 5 1 4 5 103 6 1 1 7 1 0 8 1 0 103 0 8 8 31 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 17 17 17 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = franc;
unicode = 8355;
},
{
glyphname = lira;
lastChange = "2025-02-28 11:01:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,400,ls),
(455,363,o),
(447,288,o),
(438,254,qs),
(431,225,o),
(409,173,o),
(395,151,q),
(1133,151,l),
(1132,0,l),
(102,0,l),
(102,151,l),
(177,151,l),
(204,158,o),
(240,214,o),
(251,251,qs),
(262,287,o),
(271,368,o),
(271,400,qs),
(268,471,l),
(96,471,l),
(96,593,l),
(264,593,l),
(259,731,l),
(96,731,l),
(96,854,l),
(255,854,l),
(249,1039,ls),
(249,1141,o),
(315,1303,o),
(375,1360,qs),
(434,1416,o),
(597,1476,o),
(693,1476,qs),
(789,1476,o),
(941,1420,o),
(994,1369,qs),
(1046,1318,o),
(1102,1176,o),
(1102,1089,q),
(917,1089,l),
(917,1152,o),
(877,1241,o),
(844,1270,qs),
(810,1298,o),
(723,1325,o),
(675,1325,qs),
(624,1325,o),
(535,1286,o),
(503,1250,qs),
(471,1213,o),
(434,1106,o),
(434,1039,qs),
(440,854,l),
(793,854,l),
(793,731,l),
(444,731,l),
(448,593,l),
(793,593,l),
(793,471,l),
(452,471,l)
);
},
{
closed = 0;
nodes = (
(1409,585,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 2 1 12 1 8 2 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 6 0 5 0 6 5 103 0 2 2 1 97 0 1 1 32 77 0 7 7 8 95 11 1 8 8 33 77 3 1 0 0 4 95 9 1 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
11 1 8 0 7 6 8 7 103 10 1 6 0 5 0 6 5 103 0 2 2 1 97 0 1 1 32 77 3 1 0 0 4 95 9 1 4 4 31 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
29 29 25 25 0 0 29 32 29 32 31 30 25 28 25 28 27 26 0 24 0 24 21 37 53 17 12 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = lira;
unicode = 8356;
},
{
glyphname = sterling;
lastChange = "2025-02-28 11:00:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,358,o),
(444,275,o),
(433,238,qs),
(426,214,o),
(407,170,o),
(394,151,q),
(1132,151,l),
(1131,0,l),
(101,0,l),
(101,151,l),
(176,151,l),
(203,158,o),
(240,214,o),
(251,251,qs),
(262,287,o),
(270,368,o),
(270,400,qs),
(262,626,l),
(97,626,l),
(97,778,l),
(257,778,l),
(248,1039,l),
(248,1141,o),
(315,1303,o),
(374,1360,qs),
(433,1416,o),
(597,1476,o),
(693,1476,qs),
(789,1476,o),
(941,1420,o),
(994,1369,qs),
(1046,1318,o),
(1102,1169,o),
(1102,1082,q),
(916,1082,l),
(916,1145,o),
(877,1241,o),
(844,1270,qs),
(810,1298,o),
(723,1325,o),
(675,1325,qs),
(624,1325,o),
(535,1286,o),
(503,1250,qs),
(471,1213,o),
(434,1106,o),
(434,1039,qs),
(442,778,l),
(762,778,l),
(762,626,l),
(447,626,l),
(455,400,ls)
);
},
{
closed = 0;
nodes = (
(1357,506,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
14 1 4 3 15 1 2 4 2 76 5 1 2 6 1 1 0 2 1 103 0 4 4 3 97 0 3 3 32 77 7 1 0 0 8 95 9 1 8 8 31 8 78 0 0 0 31 0 31 17 17 21 37 52 17 17 17 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = uni20A2;
lastChange = "2025-03-16 15:40:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(808,145,o),
(898,246,o),
(907,374,c),
(1071,374,l),
(1071,270,o),
(1034,170,o),
(967,96,c),
(900,22,o),
(810,-20,o),
(716,-20,c),
(513,-20,l),
(418,-20,o),
(328,22,o),
(261,96,c),
(195,170,o),
(157,270,o),
(157,375,c),
(157,1081,l),
(157,1186,o),
(195,1286,o),
(261,1360,c),
(328,1434,o),
(418,1476,o),
(513,1476,c),
(716,1476,l),
(784,1476,o),
(810,1476,o),
(907,1456,c),
(1071,1383,l),
(1071,1082,l),
(907,1082,l),
(898,1210,o),
(801,1311,o),
(683,1311,c),
(545,1311,l),
(421,1311,o),
(320,1199,o),
(320,1061,c),
(320,395,l),
(320,257,o),
(421,145,o),
(545,145,c),
(548,145,l),
(548,795,l),
(658,795,l),
(680,668,l),
(724,734,o),
(838,811,o),
(916,809,qs),
(969,808,o),
(1055,684,o),
(1067,576,q),
(948,576,l),
(920,657,o),
(872,674,qs),
(827,675,o),
(772,649,o),
(744,627,qs),
(721,606,o),
(702,546,o),
(690,510,q),
(690,145,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
18 1 6 4 40 37 2 7 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 5 6 5 4 6 128 0 1 7 0 7 1 0 128 0 8 0 2 2 8 114 9 1 6 0 7 1 6 7 103 0 5 5 3 97 0 3 3 32 77 0 0 0 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 4 5 6 5 4 6 128 0 1 7 0 7 1 0 128 0 8 0 2 0 8 2 128 9 1 6 0 7 1 6 7 103 0 5 5 3 97 0 3 3 32 77 0 0 0 2 97 0 2 2 31 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 5 6 5 4 6 128 0 1 7 0 7 1 0 128 0 8 0 2 0 8 2 128 0 3 0 5 4 3 5 105 9 1 6 0 7 1 6 7 103 0 0 0 2 97 0 2 2 31 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
62 61 25 35 44 34 18 44 34 18 33 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20A2;
unicode = 8354;
},
{
glyphname = uni20A5;
lastChange = "2025-02-28 11:46:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,1290,l),
(1137,1290,l),
(1031,1067,l),
(1067,1037,l),
(1117,995,o),
(1137,886,o),
(1137,808,qs),
(1137,0,l),
(961,0,l),
(961,810,ls),
(961,858,o),
(947,889,q),
(702,374,l),
(702,0,l),
(526,0,l),
(428,-207,l),
(268,-207,l),
(526,340,l),
(526,811,ls),
(526,845,o),
(511,897,o),
(495,914,qs),
(480,930,o),
(435,945,o),
(405,945,qs),
(372,945,o),
(323,930,o),
(306,916,qs),
(293,905,o),
(274,877,o),
(268,861,q),
(268,0,l),
(92,0,l),
(92,1082,l),
(263,1082,l),
(263,980,l),
(296,1037,o),
(403,1101,o),
(479,1102,qs),
(522,1102,o),
(591,1083,o),
(617,1065,qs),
(636,1051,o),
(667,1011,o),
(678,986,q),
(692,1009,o),
(730,1049,o),
(752,1064,qs),
(780,1081,o),
(849,1100,o),
(888,1102,q)
);
},
{
closed = 1;
nodes = (
(800,944,o),
(755,927,o),
(739,912,qs),
(723,896,o),
(705,855,o),
(702,830,qs),
(702,825,o),
(702,816,o),
(702,810,qs),
(702,711,l),
(814,945,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
19 16 10 2 4 7 0 50 31 25 24 4 4 7 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 4 4 6 113 0 3 3 4 95 8 5 2 4 4 31 77 9 1 7 7 0 97 2 1 2 0 0 33 77 8 5 2 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 6 134 0 3 3 4 95 8 5 2 4 4 31 77 9 1 7 7 0 97 2 1 2 0 0 33 77 8 5 2 4 4 31 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 4 6 134 9 1 7 4 0 7 89 0 3 3 4 95 8 5 2 4 4 31 77 2 1 2 0 0 4 95 8 5 2 4 4 31 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 4 6 134 0 2 0 7 2 89 9 1 7 4 0 7 89 0 3 3 4 95 8 5 2 4 4 31 77 1 1 0 0 4 95 8 5 2 4 4 31 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
46 44 20 37 18 19 20 18 38 36 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20A5;
unicode = 8357;
},
{
glyphname = uni20A6;
lastChange = "2025-02-28 15:05:08 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(839,370,l),
(723,648,l),
(840,648,l)
);
},
{
closed = 1;
nodes = (
(1164,648,l),
(1164,808,l),
(991,808,l),
(991,1456,l),
(842,1456,l),
(840,808,l),
(656,808,l),
(387,1456,l),
(237,1456,l),
(237,808,l),
(64,808,l),
(64,648,l),
(237,648,l),
(237,0,l),
(387,0,l),
(388,648,l),
(571,648,l),
(841,0,l),
(991,0,l),
(991,648,l)
);
},
{
closed = 1;
nodes = (
(388,808,l),
(389,1088,l),
(505,808,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 1 2 23 1 7 0 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
13 10 5 3 4 1 11 8 6 3 0 7 1 0 104 4 1 2 2 30 77 12 9 2 7 7 31 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
4 1 2 1 2 133 13 10 5 3 4 1 11 8 6 3 0 7 1 0 104 12 9 2 7 7 31 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
20 20 0 0 25 24 20 22 20 22 0 19 0 19 17 17 17 17 17 17 17 17 17 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20A6;
unicode = 8358;
},
{
glyphname = uni20A9;
lastChange = "2025-02-28 17:13:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,0,l),
(547,648,l),
(683,648,l),
(785,0,l),
(956,0,l),
(1027,648,l),
(1164,648,l),
(1164,808,l),
(1045,808,l),
(1116,1456,l),
(957,1456,l),
(895,808,l),
(793,808,l),
(687,1456,l),
(541,1456,l),
(436,808,l),
(334,808,l),
(271,1456,l),
(112,1456,l),
(183,808,l),
(64,808,l),
(64,648,l),
(201,648,l),
(272,0,l)
);
},
{
closed = 1;
nodes = (
(350,648,l),
(410,648,l),
(372,414,l)
);
},
{
closed = 1;
nodes = (
(819,648,l),
(879,648,l),
(857,414,l)
);
},
{
closed = 1;
nodes = (
(615,1077,l),
(657,808,l),
(572,808,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
32 26 6 3 1 0 1 76 11 8 6 3 4 10 12 9 3 4 0 1 4 0 104 7 1 5 5 32 77 2 1 1 1 31 1 78 25 25 0 0 30 29 25 28 25 28 0 24 0 24 18 18 18 17 18 18 18 17 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20A9;
unicode = 8361;
},
{
glyphname = uni20AA;
lastChange = "2025-02-28 11:47:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,0,l),
(205,1251,l),
(485,1251,ls),
(533,1251,o),
(604,1216,o),
(652,1137,o),
(676,1007,o),
(676,914,qs),
(676,470,l),
(841,470,l),
(841,912,ls),
(841,1064,o),
(798,1270,o),
(719,1399,o),
(606,1456,o),
(535,1456,qs),
(41,1456,l),
(41,0,l)
);
},
{
closed = 1;
nodes = (
(951,0,o),
(1064,57,o),
(1145,184,o),
(1188,392,o),
(1188,544,qs),
(1188,1456,l),
(1024,1456,l),
(1024,541,ls),
(1024,418,o),
(980,268,o),
(895,205,o),
(833,205,qs),
(553,205,l),
(553,988,l),
(389,988,l),
(389,0,l),
(881,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 4 2 1 2 4 1 128 0 1 5 2 1 5 126 6 1 0 0 2 4 0 2 103 0 5 5 3 96 8 7 2 3 3 31 3 78 18 18 18 34 18 33 20 33 18 17 37 21 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20AA;
unicode = 8362;
},
{
glyphname = uni20AD;
lastChange = "2025-02-28 17:50:38 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1102,0,l),
(905,0,l),
(483,588,l),
(400,588,l),
(400,0,l),
(241,0,l),
(241,588,l),
(56,588,l),
(56,748,l),
(241,748,l),
(241,1456,l),
(400,1456,l),
(400,748,l),
(876,1456,l),
(1065,1456,l),
(573,748,l),
(1156,748,l),
(1156,588,l),
(686,588,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
6 1 1 2 15 1 6 0 2 76 4 1 1 5 1 0 6 1 0 104 3 1 2 2 32 77 7 1 6 6 31 6 78 18 17 17 17 18 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20AD;
unicode = 8365;
},
{
glyphname = uni20AE;
lastChange = "2025-02-28 17:51:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(699,373,l),
(945,500,l),
(945,672,l),
(699,545,l),
(699,717,l),
(945,844,l),
(945,1017,l),
(699,889,l),
(699,1259,l),
(1051,1259,l),
(1051,1456,l),
(178,1456,l),
(178,1259,l),
(516,1259,l),
(516,795,l),
(285,675,l),
(285,503,l),
(516,623,l),
(516,451,l),
(285,331,l),
(285,159,l),
(516,279,l),
(516,0,l),
(699,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
22 21 20 19 18 17 16 15 8 7 6 5 4 3 2 1 16 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 1 95 0 1 1 32 77 4 1 3 3 31 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 2 1 0 3 1 0 103 4 1 3 3 31 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 23 0 23 17 17 25 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20AE;
unicode = 8366;
},
{
glyphname = uni20B1;
lastChange = "2025-02-28 19:16:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,0,l),
(378,584,l),
(630,584,ls),
(716,585,o),
(870,643,o),
(928,698,q),
(961,735,l),
(1168,735,l),
(1168,886,l),
(1037,886,l),
(1051,925,o),
(1054,1019,qs),
(1052,1105,o),
(1037,1153,q),
(1168,1153,l),
(1168,1304,l),
(961,1304,l),
(928,1341,l),
(870,1396,o),
(716,1454,o),
(630,1456,qs),
(215,1456,l),
(215,1304,l),
(61,1304,l),
(61,1153,l),
(215,1153,l),
(215,886,l),
(61,886,l),
(61,735,l),
(215,735,l),
(215,0,l)
);
},
{
closed = 1;
nodes = (
(378,1304,l),
(630,1304,ls),
(686,1303,o),
(782,1263,o),
(818,1226,qs),
(852,1189,o),
(891,1083,o),
(891,1017,qs),
(891,951,o),
(852,848,o),
(817,812,qs),
(781,776,o),
(686,737,o),
(630,736,qs),
(378,736,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
10 1 5 9 1 6 7 5 6 103 0 0 0 7 8 0 7 103 13 1 1 1 2 95 0 2 2 32 77 11 1 4 4 3 95 14 12 2 3 3 30 77 0 8 8 31 8 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
14 12 2 3 11 1 4 5 3 4 103 10 1 5 9 1 6 7 5 6 103 0 0 0 7 8 0 7 103 13 1 1 1 2 95 0 2 2 32 77 0 8 8 31 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 13 1 1 4 2 1 103 14 12 2 3 11 1 4 5 3 4 103 10 1 5 9 1 6 7 5 6 103 0 0 0 7 8 0 7 103 0 8 8 31 8 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
12 12 0 0 12 42 12 42 41 40 39 38 37 36 35 34 33 31 28 27 26 25 21 20 19 18 15 13 0 11 0 10 35 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20B1;
unicode = 8369;
},
{
glyphname = uni20B2;
lastChange = "2025-03-16 16:36:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(712,-174,l),
(712,0,l),
(713,0,l),
(805,0,o),
(837,19,o),
(919,76,c),
(935,0,l),
(1060,0,l),
(1060,728,l),
(712,728,l),
(712,1294,l),
(819,1277,o),
(900,1176,o),
(900,1054,c),
(900,1022,l),
(1060,1022,l),
(1060,1072,l),
(1060,1175,o),
(1022,1272,o),
(959,1344,c),
(893,1417,o),
(805,1458,o),
(713,1458,c),
(712,1458,l),
(712,1632,l),
(516,1632,l),
(516,1458,l),
(515,1458,l),
(423,1458,o),
(335,1417,o),
(272,1344,c),
(207,1272,o),
(169,1175,o),
(169,1072,c),
(169,385,l),
(169,282,o),
(207,185,o),
(272,112,c),
(335,41,o),
(423,0,o),
(515,0,c),
(516,0,l),
(516,-174,l)
);
},
{
closed = 1;
nodes = (
(417,183,o),
(331,288,o),
(331,414,c),
(331,1079,l),
(331,1205,o),
(417,1308,o),
(525,1326,c),
(525,167,l)
);
},
{
closed = 1;
nodes = (
(725,566,l),
(918,566,l),
(918,414,l),
(918,288,o),
(835,183,o),
(725,167,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 1 6 0 4 1 2 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 3 3 7 112 0 4 5 1 5 4 1 128 9 1 8 2 2 8 113 0 1 0 0 6 1 0 103 0 5 5 3 97 0 3 3 32 77 0 6 6 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 3 7 133 0 4 5 1 5 4 1 128 9 1 8 2 2 8 113 0 1 0 0 6 1 0 103 0 5 5 3 97 0 3 3 32 77 0 6 6 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 3 7 133 0 4 5 1 5 4 1 128 9 1 8 2 8 134 0 1 0 0 6 1 0 103 0 5 5 3 97 0 3 3 32 77 0 6 6 2 97 0 2 2 37 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 3 7 133 0 4 5 1 5 4 1 128 9 1 8 2 8 134 0 3 0 5 4 3 5 106 0 1 0 0 6 1 0 103 0 6 6 2 97 0 2 2 37 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
37 37 37 40 37 40 19 38 34 19 42 34 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20B2;
unicode = 8370;
},
{
glyphname = uni20B4;
lastChange = "2025-03-16 15:42:37 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,770,l),
(525,770,l),
(579,793,o),
(634,817,o),
(684,849,cs),
(743,883,o),
(806,914,o),
(848,968,cs),
(870,996,o),
(888,1032,o),
(889,1069,c),
(895,1133,o),
(882,1207,o),
(842,1254,cs),
(791,1313,o),
(707,1332,o),
(633,1336,cs),
(545,1338,o),
(437,1323,o),
(376,1251,cs),
(328,1194,o),
(333,1100,o),
(333,1026,c),
(178,1026,l),
(179,1059,o),
(178,1142,o),
(190,1198,cs),
(206,1260,o),
(224,1329,o),
(269,1370,cs),
(366,1457,o),
(507,1477,o),
(633,1478,cs),
(743,1478,o),
(870,1468,o),
(951,1386,cs),
(1026,1309,o),
(1049,1179,o),
(1051,1066,cs),
(1053,1012,o),
(1039,956,o),
(1014,910,cs),
(991,865,o),
(953,831,o),
(917,803,cs),
(903,792,o),
(886,780,o),
(870,770,c),
(1051,770,l),
(1051,610,l),
(543,610,l),
(485,574,o),
(423,547,o),
(380,491,cs),
(359,464,o),
(343,427,o),
(339,391,cs),
(336,326,o),
(347,252,o),
(387,205,cs),
(437,147,o),
(522,125,o),
(595,124,cs),
(684,120,o),
(793,134,o),
(855,209,cs),
(901,264,o),
(897,360,o),
(897,434,c),
(1051,434,l),
(1050,402,o),
(1053,316,o),
(1039,263,cs),
(1023,200,o),
(1006,131,o),
(960,90,cs),
(862,0,o),
(722,-18,o),
(595,-18,cs),
(485,-18,o),
(359,-10,o),
(279,72,cs),
(205,148,o),
(182,280,o),
(178,393,cs),
(176,448,o),
(190,502,o),
(214,550,cs),
(226,572,o),
(243,592,o),
(260,610,c),
(179,610,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
10 1 0 9 2 9 0 2 128 0 5 3 4 3 5 4 128 8 1 2 7 1 3 5 2 3 103 0 9 9 1 97 0 1 1 32 77 0 4 4 6 97 0 6 6 37 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
10 1 0 9 2 9 0 2 128 0 5 3 4 3 5 4 128 8 1 2 7 1 3 5 2 3 103 0 9 9 1 97 0 1 1 32 77 0 4 4 6 97 0 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
10 1 0 9 2 9 0 2 128 0 5 3 4 3 5 4 128 8 1 2 7 1 3 5 2 3 103 0 9 9 1 97 0 1 1 32 77 0 4 4 6 97 0 6 6 37 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 55 54 47 46 43 41 35 33 31 28 26 24 15 13 11 9 5 3 0 57 1 57 11 8 22
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20B4;
unicode = 8372;
},
{
glyphname = uni20B5;
lastChange = "2025-03-16 15:40:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(704,-198,l),
(704,-20,l),
(715,-20,l),
(810,-20,o),
(900,22,o),
(967,96,c),
(1033,170,o),
(1071,270,o),
(1071,374,c),
(907,374,l),
(898,252,o),
(814,154,o),
(704,146,c),
(704,1310,l),
(814,1302,o),
(897,1204,o),
(907,1082,c),
(1071,1082,l),
(1071,1383,l),
(907,1456,l),
(810,1476,o),
(784,1476,o),
(715,1476,c),
(704,1476,l),
(704,1656,l),
(524,1656,l),
(524,1476,l),
(513,1476,l),
(418,1476,o),
(328,1434,o),
(261,1360,c),
(195,1286,o),
(157,1186,o),
(157,1081,c),
(157,375,l),
(157,270,o),
(195,170,o),
(261,96,c),
(328,22,o),
(418,-20,o),
(513,-20,c),
(524,-20,l),
(524,-198,l)
);
},
{
closed = 1;
nodes = (
(407,155,o),
(320,263,o),
(320,395,c),
(320,1061,l),
(320,1192,o),
(408,1300,o),
(524,1310,c),
(524,146,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
35 31 22 19 4 3 2 46 32 8 5 4 1 0 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 1 2 95 0 2 2 32 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 2 3 1 2 87 0 2 2 1 95 0 1 2 1 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
21 29 21 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20B5;
unicode = 8373;
},
{
glyphname = uni20B8;
lastChange = "2025-02-28 17:53:50 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(701,987,l),
(1056,987,l),
(1056,1142,l),
(174,1142,l),
(174,987,l),
(516,987,l),
(516,0,l),
(701,0,l)
);
},
{
closed = 1;
nodes = (
(173,1298,l),
(1056,1298,l),
(1056,1456,l),
(173,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 1 2 1 0 3 1 0 103 0 4 4 5 95 7 1 5 5 32 77 6 1 3 3 31 3 78 8 8 0 0 8 11 8 11 10 9 0 7 0 7 17 17 17 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20B8;
unicode = 8376;
},
{
glyphname = uni20B9;
lastChange = "2025-02-28 17:56:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,931,l),
(632,934,o),
(632,934,q),
(615,890,o),
(578,856,qs),
(525,806,o),
(288,806,q),
(695,0,l),
(901,0,o),
(901,0,q),
(736,312,o),
(574,632,q),
(660,654,o),
(719,708,qs),
(821,802,o),
(845,934,q),
(1016,934,l),
(1056,1098,l),
(851,1098,o),
(851,1098,q),
(835,1205,o),
(773,1291,q),
(1016,1291,l),
(1056,1456,l),
(212,1456,l),
(172,1291,l),
(173,1291,l),
(173,1290,l),
(440,1290,o),
(440,1290,q),
(508,1283,o),
(596,1245,qs),
(640,1225,o),
(650,1098,q),
(212,1098,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
22 1 5 6 1 76 0 6 4 5 4 6 5 128 0 5 5 132 0 1 2 1 0 3 1 0 103 9 8 2 3 4 4 3 87 9 8 2 3 3 4 95 7 1 4 3 4 79 0 0 0 34 0 34 35 17 38 17 34 17 19 36 10 6 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20B9;
unicode = 8377;
},
{
glyphname = uni20BA;
lastChange = "2025-02-28 18:03:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(542,1455,l),
(351,1455,l),
(351,1113,l),
(107,1002,l),
(107,823,l),
(351,934,l),
(351,751,l),
(107,640,l),
(107,464,l),
(351,575,l),
(351,0,l),
(542,0,l),
(778,0,o),
(968,173,o),
(1042,261,o),
(1125,520,o),
(1125,683,qs),
(1125,760,l),
(935,760,l),
(935,683,ls),
(935,551,o),
(881,350,o),
(783,213,o),
(640,149,o),
(542,149,q),
(542,662,l),
(795,777,l),
(795,955,l),
(542,838,l),
(542,1022,l),
(795,1137,l),
(795,1315,l),
(542,1200,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
26 25 24 23 22 21 6 2 1 28 27 2 4 2 2 76 14 1 0 73
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
26 25 24 23 22 21 6 2 1 28 27 2 4 2 2 76 14 1 0 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 1 4 1 2 4 128 5 1 1 1 32 77 0 4 4 0 97 3 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 4 1 2 4 128 5 1 1 1 32 77 0 0 0 31 77 0 4 4 3 97 0 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 1 4 1 2 4 128 0 4 0 3 4 3 101 5 1 1 1 32 77 0 0 0 31 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 16 15 12 10 5 4 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20BA;
unicode = 8378;
},
{
glyphname = uni20BD;
lastChange = "2025-02-28 18:24:55 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(748,737,o),
(848,776,o),
(885,812,qs),
(921,848,o),
(963,951,o),
(963,1017,qs),
(963,1083,o),
(921,1189,o),
(885,1226,qs),
(848,1263,o),
(748,1303,o),
(689,1304,qs),
(423,1304,l),
(423,736,l),
(689,736,ls)
);
},
{
closed = 1;
nodes = (
(95,585,l),
(95,736,l),
(252,736,l),
(252,1456,l),
(689,1456,ls),
(779,1454,o),
(941,1396,o),
(1002,1341,qs),
(1063,1286,o),
(1134,1124,o),
(1134,1019,qs),
(1134,914,o),
(1063,753,o),
(1002,698,qs),
(941,643,o),
(779,585,o),
(689,584,qs),
(423,584,l),
(423,433,l),
(908,433,l),
(908,282,l),
(423,282,l),
(423,0,l),
(252,0,l),
(252,282,l),
(95,282,l),
(95,433,l),
(252,433,l),
(252,585,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 0 9 1 6 5 0 6 103 11 10 2 5 4 1 2 3 5 2 103 0 1 1 8 95 0 8 8 32 77 0 3 3 31 3 78 10 10 10 34 10 34 33 30 33 17 17 17 17 17 18 37 32 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20BD;
unicode = 8381;
},
{
glyphname = uni20BE;
lastChange = "2025-03-01 13:47:12 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,1026,o),
(998,897,o),
(998,760,q),
(1149,760,l),
(1149,910,o),
(1049,1196,o),
(860,1264,q),
(860,1456,l),
(708,1456,l),
(708,1298,l),
(636,1307,o),
(633,1307,o),
(556,1292,c),
(556,1456,l),
(403,1456,l),
(403,1246,l),
(269,1181,o),
(191,1078,o),
(124,871,o),
(124,758,qs),
(124,540,ls),
(124,447,o),
(171,288,o),
(240,180,o),
(285,137,q),
(123,137,l),
(123,0,l),
(1149,0,l),
(1149,137,l),
(646,137,l),
(584,137,o),
(475,177,o),
(392,250,o),
(335,352,o),
(305,472,o),
(305,540,qs),
(305,760,ls),
(305,848,o),
(352,998,o),
(403,1054,q),
(403,763,l),
(556,763,l),
(556,1153,l),
(592,1167,o),
(638,1167,q),
(663,1167,o),
(676,1167,o),
(708,1158,c),
(708,763,l),
(860,763,l),
(860,1096,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
9 7 2 2 3 4 3 2 4 128 12 10 11 3 8 8 32 77 0 3 3 1 97 0 1 1 30 77 5 1 4 4 0 97 6 1 0 0 31 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
12 10 11 3 8 1 8 133 9 7 2 2 3 4 3 2 4 128 0 3 3 1 97 0 1 1 30 77 5 1 4 4 0 97 6 1 0 0 31 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
12 10 11 3 8 1 8 133 9 7 2 2 3 4 3 2 4 128 0 1 0 3 2 1 3 106 5 1 4 4 0 97 6 1 0 0 31 0 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
42 42 38 38 42 45 42 45 44 43 38 41 38 41 18 17 17 26 35 19 42 16 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20BE;
unicode = 8382;
},
{
glyphname = uni20BF;
lastChange = "2025-02-28 18:33:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(517,-193,l),
(517,0,l),
(600,0,l),
(686,9,l),
(686,-193,l),
(855,-193,l),
(855,75,l),
(902,110,l),
(962,162,o),
(1034,318,o),
(1033,420,qs),
(1033,485,o),
(998,597,o),
(966,642,qs),
(937,683,o),
(845,751,o),
(795,764,q),
(795,767,l),
(843,790,o),
(911,842,o),
(938,880,qs),
(965,917,o),
(997,1011,o),
(998,1068,qs),
(999,1170,o),
(927,1316,o),
(866,1363,q),
(855,1371,l),
(855,1648,l),
(686,1648,l),
(686,1441,l),
(631,1453,o),
(570,1456,qs),
(517,1456,l),
(517,1648,l),
(348,1648,l),
(348,1456,l),
(181,1456,l),
(181,0,l),
(348,0,l),
(348,-193,l)
);
},
{
closed = 1;
nodes = (
(348,681,l),
(614,681,ls),
(667,679,o),
(758,643,o),
(793,610,qs),
(827,576,o),
(866,480,o),
(865,418,qs),
(865,357,o),
(822,261,o),
(786,228,qs),
(750,195,o),
(657,158,o),
(605,157,qs),
(348,157,l)
);
},
{
closed = 1;
nodes = (
(348,1298,l),
(576,1298,ls),
(624,1297,o),
(717,1271,o),
(753,1244,qs),
(788,1216,o),
(830,1130,o),
(830,1069,qs),
(830,1012,o),
(787,926,o),
(752,897,qs),
(717,867,o),
(627,836,o),
(580,835,qs),
(348,835,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
11 8 2 9 0 20 1 11 8 32 29 2 5 10 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 2 1 0 0 9 8 0 9 104 0 8 0 11 10 8 11 103 0 10 10 5 97 12 7 2 5 5 31 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 2 1 0 0 9 8 0 9 104 0 8 0 11 10 8 11 103 0 10 10 5 97 12 7 2 5 5 31 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
0 0 62 60 55 52 51 48 41 39 0 38 0 38 37 36 35 33 31 30 18 33 17 17 13 8 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni20BF;
unicode = 8383;
},
{
glyphname = yen;
lastChange = "2025-02-27 19:50:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(525,497,l),
(525,0,l),
(703,0,l),
(703,497,l),
(1156,497,l),
(1156,675,l),
(703,675,l),
(1091,1456,l),
(886,1456,l),
(614,857,l),
(343,1456,l),
(137,1456,l),
(525,675,l),
(72,675,l),
(72,497,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 8 5 3 1 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 1 5 1 0 6 1 0 104 3 1 2 2 32 77 7 1 6 6 31 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
3 1 2 1 2 133 4 1 1 5 1 0 6 1 0 104 7 1 6 6 31 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 16 0 16 17 18 18 18 17 17 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = yen;
unicode = 165;
},
{
glyphname = plus;
lastChange = "2025-02-28 21:29:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,610,l),
(535,610,l),
(535,276,l),
(695,276,l),
(695,610,l),
(1029,610,l),
(1029,770,l),
(695,770,l),
(695,1105,l),
(535,1105,l),
(535,770,l),
(200,770,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 1 3 0 87 6 5 2 1 4 1 2 3 1 2 103 0 0 0 3 95 0 3 0 3 79 0 0 0 11 0 11 17 17 17 17 17 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = plus;
unicode = 43;
},
{
glyphname = minus;
lastChange = "2025-02-28 21:29:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,770,l),
(1029,770,l),
(1029,610,l),
(200,610,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 6 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = multiply;
lastChange = "2025-02-28 21:29:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,927,l),
(501,690,l),
(265,454,l),
(378,340,l),
(615,577,l),
(851,340,l),
(964,454,l),
(728,690,l),
(965,927,l),
(851,1040,l),
(615,803,l),
(378,1040,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 0 1 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = divide;
lastChange = "2025-02-28 21:29:07 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,183,l),
(714,183,l),
(714,383,l),
(514,383,l)
);
},
{
closed = 1;
nodes = (
(514,998,l),
(714,998,l),
(714,1198,l),
(514,1198,l)
);
},
{
closed = 1;
nodes = (
(200,770,l),
(1029,770,l),
(1029,610,l),
(200,610,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 2 7 1 3 5 2 3 105 0 5 0 4 0 5 4 103 0 0 1 1 0 89 0 0 0 1 97 6 1 1 0 1 81 8 8 0 0 28 25 20 17 8 15 8 14 12 10 0 7 0 6 34 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = divide;
unicode = 247;
},
{
glyphname = equal;
lastChange = "2025-02-28 21:30:39 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,941,l),
(1066,941,l),
(1066,781,l),
(173,781,l)
);
},
{
closed = 1;
nodes = (
(173,505,l),
(1066,505,l),
(1066,345,l),
(173,345,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 0 4 1 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = equal;
unicode = 61;
},
{
glyphname = notequal;
lastChange = "2025-02-28 15:02:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,102,l),
(430,102,l),
(551,345,l),
(1066,345,l),
(1066,505,l),
(630,505,l),
(767,781,l),
(1066,781,l),
(1066,941,l),
(846,941,l),
(967,1184,l),
(810,1184,l),
(689,941,l),
(173,941,l),
(173,781,l),
(610,781,l),
(473,505,l),
(173,505,l),
(173,345,l),
(394,345,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 7 6 7 133 0 2 1 2 134 8 1 6 10 9 2 5 0 6 5 103 4 1 0 1 1 0 87 4 1 0 0 1 95 3 1 1 0 1 79 0 0 0 19 0 19 17 17 17 17 17 17 17 17 17 11 6 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = greater;
lastChange = "2025-02-27 19:57:07 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,196,l),
(190,392,l),
(835,646,l),
(190,903,l),
(190,1099,l),
(1038,721,l),
(1038,575,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 2 1 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
lastChange = "2025-02-27 19:56:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,721,l),
(1038,1099,l),
(1038,903,l),
(393,646,l),
(1038,392,l),
(1038,196,l),
(190,575,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 2 1 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = less;
unicode = 60;
},
{
glyphname = greaterequal;
lastChange = "2025-02-28 21:25:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(881,792,l),
(194,1025,l),
(194,1197,l),
(1077,857,l),
(1077,725,l),
(194,384,l),
(194,557,l)
);
},
{
closed = 1;
nodes = (
(195,158,l),
(1030,158,l),
(1030,7,l),
(195,7,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
6 5 4 3 2 1 6 1 74 2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 7 7 7 10 7 10 24 3 6 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = lessequal;
lastChange = "2025-02-28 21:24:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,837,l),
(1037,1177,l),
(1037,1001,l),
(392,769,l),
(1037,541,l),
(1037,364,l),
(189,706,l)
);
},
{
closed = 1;
nodes = (
(187,160,l),
(1022,160,l),
(1022,9,l),
(187,9,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
6 5 4 3 2 1 6 1 74 2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 7 7 7 10 7 10 24 3 6 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = plusminus;
lastChange = "2025-02-28 21:23:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,160,l),
(1029,160,l),
(1029,0,l),
(200,0,l)
);
},
{
closed = 1;
nodes = (
(200,700,l),
(535,700,l),
(535,366,l),
(695,366,l),
(695,700,l),
(1029,700,l),
(1029,860,l),
(695,860,l),
(695,1195,l),
(535,1195,l),
(535,860,l),
(200,860,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
9 7 2 3 6 1 4 5 3 4 103 0 2 0 5 0 2 5 103 0 0 0 1 95 8 1 1 1 31 1 78 4 4 0 0 4 15 4 15 14 13 12 11 10 9 8 7 6 5 0 3 0 3 17 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = approxequal;
lastChange = "2025-02-28 21:19:07 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(325,1011,o),
(392,1011,qs),
(455,1011,o),
(567,977,o),
(635,938,qs),
(691,906,o),
(801,877,o),
(845,877,qs),
(912,877,o),
(1034,951,o),
(1081,1019,q),
(1081,842,l),
(1033,775,o),
(911,706,o),
(845,706,qs),
(789,706,o),
(663,752,o),
(594,789,qs),
(527,825,o),
(448,849,o),
(392,849,qs),
(325,849,o),
(193,774,o),
(146,706,q),
(146,883,l),
(194,951,o)
);
},
{
closed = 1;
nodes = (
(325,591,o),
(392,591,qs),
(449,591,o),
(535,568,o),
(608,526,qs),
(673,489,o),
(792,450,o),
(845,450,qs),
(912,450,o),
(1034,529,o),
(1081,597,q),
(1081,416,l),
(1033,348,o),
(911,280,o),
(845,280,qs),
(790,280,o),
(684,319,o),
(603,359,qs),
(522,399,o),
(449,422,o),
(392,422,qs),
(325,422,o),
(193,344,o),
(146,276,q),
(146,457,l),
(194,524,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
12 0 2 1 0 25 13 2 2 3 38 26 2 5 4 51 39 2 6 7 4 76 0 0 0 3 2 0 3 105 0 1 0 2 4 1 2 105 0 5 7 6 5 89 0 4 0 7 6 4 7 105 0 5 5 6 97 0 6 5 6 81 36 37 36 37 36 37 36 34 8 6 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = approxequal;
unicode = 8776;
},
{
glyphname = asciitilde;
lastChange = "2025-02-27 20:02:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1136,552,o),
(1096,505,qs),
(1056,458,o),
(946,402,o),
(879,402,qs),
(832,402,o),
(751,420,o),
(713,438,qs),
(674,456,o),
(599,508,o),
(559,542,qs),
(526,569,o),
(465,610,o),
(435,622,qs),
(414,631,o),
(371,639,o),
(348,639,qs),
(313,639,o),
(252,610,o),
(230,586,qs),
(208,561,o),
(182,494,o),
(182,456,q),
(48,458,l),
(48,524,o),
(92,659,o),
(132,704,qs),
(171,749,o),
(281,802,o),
(348,802,qs),
(394,802,o),
(477,783,o),
(516,765,qs),
(555,747,o),
(630,695,o),
(669,663,qs),
(695,641,o),
(743,606,o),
(766,594,qs),
(793,579,o),
(849,564,o),
(879,565,qs),
(914,565,o),
(975,597,o),
(998,624,qs),
(1020,650,o),
(1046,720,o),
(1046,758,q),
(1180,758,l),
(1180,692,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 1 2 114 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 98 6 5 2 3 1 3 82
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 1 1 2 114 6 1 5 4 3 4 5 114 0 1 4 3 1 89 0 0 0 4 5 0 4 105 0 1 1 3 98 0 3 1 3 82
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 1 1 2 114 6 1 5 4 3 4 5 3 128 0 1 4 3 1 89 0 0 0 4 5 0 4 105 0 1 1 3 98 0 3 1 3 82
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 0 1 0 2 1 128 6 1 5 4 3 4 5 3 128 0 1 4 3 1 89 0 0 0 4 5 0 4 105 0 1 1 3 98 0 3 1 3 82
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 27 35 35 19 35 35 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = logicalnot;
lastChange = "2025-02-27 20:22:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(834,639,l),
(189,639,l),
(189,800,l),
(1019,800,l),
(1019,375,l),
(834,375,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = asciicircum;
lastChange = "2025-02-27 19:57:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(678,1456,l),
(997,677,l),
(826,677,l),
(613,1211,l),
(403,677,l),
(231,677,l),
(551,1456,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 15 values pushed */
6 5 4 3 4 0 73 0 0 0 118 17 1 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = infinity;
lastChange = "2025-02-28 08:00:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1036,1002,o),
(753,1002,o),
(673,912,qs),
(636,873,o),
(613,827,q),
(591,873,o),
(556,912,qs),
(476,1002,o),
(192,1002,o),
(112,912,qs),
(13,801,o),
(13,480,o),
(112,368,qs),
(191,278,o),
(476,278,o),
(556,368,qs),
(591,406,o),
(613,454,q),
(637,406,o),
(673,368,qs),
(751,278,o),
(1036,278,o),
(1116,368,qs),
(1215,478,o),
(1215,801,o),
(1116,912,qs)
);
},
{
closed = 1;
nodes = (
(1134,547,o),
(1076,493,qs),
(1001,428,o),
(893,428,qs),
(788,428,o),
(714,493,qs),
(657,547,o),
(657,640,qs),
(657,737,o),
(714,787,qs),
(785,849,o),
(893,849,qs),
(1005,849,o),
(1076,787,qs),
(1134,737,o),
(1134,640,qs)
);
},
{
closed = 1;
nodes = (
(573,651,o),
(573,630,o),
(573,621,qs),
(567,539,o),
(516,493,qs),
(440,428,o),
(333,428,qs),
(228,428,o),
(154,493,qs),
(96,547,o),
(96,640,qs),
(96,737,o),
(154,787,qs),
(224,849,o),
(333,849,qs),
(445,849,o),
(516,787,qs),
(568,742,o),
(573,661,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
57 20 7 3 5 4 1 76 3 1 2 6 1 4 5 2 4 105 7 1 5 0 0 5 89 7 1 5 5 0 97 1 1 0 5 0 81 38 38 38 36 22 21 22 19 8 6 30
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = infinity;
unicode = 8734;
},
{
glyphname = integral;
lastChange = "2025-02-28 21:15:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,-312,o),
(590,-356,qs),
(549,-396,o),
(433,-437,o),
(360,-437,qs),
(330,-437,o),
(277,-429,o),
(248,-419,q),
(248,-267,l),
(264,-273,o),
(346,-285,o),
(360,-285,qs),
(386,-285,o),
(430,-267,o),
(446,-251,qs),
(471,-226,o),
(497,-143,o),
(497,-89,qs),
(497,1218,ls),
(497,1304,o),
(543,1438,o),
(587,1484,qs),
(630,1530,o),
(756,1579,o),
(835,1579,qs),
(872,1579,o),
(942,1567,o),
(979,1558,q),
(979,1408,l),
(962,1413,o),
(893,1427,o),
(864,1427,qs),
(821,1427,o),
(755,1401,o),
(733,1376,qs),
(708,1349,o),
(682,1269,o),
(682,1218,qs),
(682,-89,l),
(682,-177,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
23 1 3 2 24 8 2 1 3 7 1 0 1 3 76 0 2 0 3 1 2 3 105 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 37 39 37 35 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = integral;
unicode = 8747;
},
{
glyphname = uni2206;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,106,l),
(441,614,l),
(666,106,l)
);
},
{
closed = 1;
nodes = (
(458,819,l),
(424,819,l),
(107,106,l),
(110,106,l),
(110,2,l),
(780,2,l),
(780,106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 5 2 0 1 75 0 2 0 2 133 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 19 17 17 3 6 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2206;
unicode = 8710;
},
{
glyphname = product;
lastChange = "2025-02-28 21:09:22 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,1264,l),
(254,1264,l),
(254,-316,l),
(445,-316,l),
(445,1264,l),
(783,1264,l),
(783,-316,l),
(975,-316,l),
(975,1264,l),
(1166,1264,l),
(1166,1456,l),
(62,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 1 134 6 1 5 0 0 5 87 6 1 5 5 0 95 4 2 2 0 5 0 79 0 0 0 11 0 11 17 17 17 17 17 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = product;
unicode = 8719;
},
{
glyphname = summation;
lastChange = "2025-02-28 21:09:00 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1176,-117,l),
(1176,-269,l),
(51,-269,l),
(51,-126,l),
(659,590,l),
(51,1312,l),
(51,1456,l),
(1100,1456,l),
(1100,1304,l),
(275,1304,l),
(856,602,l),
(856,577,l),
(276,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
11 5 4 3 2 1 1 76 12 1 1 10 1 2 2 75 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 16 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = summation;
unicode = 8721;
},
{
glyphname = radical;
lastChange = "2025-02-28 21:10:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(982,1456,l),
(1171,1456,l),
(629,0,l),
(488,0,l),
(243,628,l),
(58,628,l),
(58,782,l),
(373,782,l),
(559,272,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
8 1 1 2 1 76 0 0 3 0 133 0 1 2 1 134 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 17 17 17 16 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = radical;
unicode = 8730;
},
{
glyphname = uni00B5;
lastChange = "2025-02-27 20:35:32 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1090,0,l),
(1090,1080,l),
(910,1080,l),
(910,591,ls),
(910,391,o),
(835,280,qs),
(745,149,o),
(580,149,qs),
(434,149,o),
(371,231,qs),
(319,293,o),
(319,498,qs),
(319,1080,l),
(139,1080,l),
(139,-347,l),
(319,-347,l),
(319,51,l),
(377,-17,o),
(568,-17,qs),
(686,-17,o),
(787,31,qs),
(845,61,o),
(910,134,q),
(910,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
6 0 2 0 3 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
6 0 2 5 3 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 2 2 33 77 0 3 3 0 97 5 1 0 0 37 77 0 1 1 35 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 0 97 5 1 0 0 37 77 4 1 2 2 1 95 0 1 1 35 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
4 1 2 2 5 95 0 5 5 31 77 0 3 3 0 97 0 0 0 37 77 4 1 2 2 1 95 0 1 1 35 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 20 36 17 18 35 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni00B5;
unicode = 181;
},
{
glyphname = partialdiff;
lastChange = "2025-02-28 18:41:19 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(902,901,o),
(950,822,q),
(957,928,o),
(922,1112,o),
(884,1183,qs),
(846,1254,o),
(730,1346,o),
(657,1359,qs),
(580,1373,o),
(453,1376,o),
(378,1361,q),
(378,1502,l),
(438,1517,o),
(586,1535,o),
(701,1515,qs),
(842,1490,o),
(1024,1332,o),
(1072,1212,qs),
(1119,1092,o),
(1130,782,o),
(1099,605,qs),
(1089,547,ls),
(1076,474,o),
(1032,339,o),
(1002,281,qs),
(961,196,o),
(841,67,o),
(770,29,qs),
(710,-2,o),
(573,-23,o),
(497,-10,qs),
(385,10,o),
(223,121,o),
(174,202,qs),
(125,281,o),
(95,483,o),
(114,594,qs),
(118,616,ls),
(136,720,o),
(230,886,o),
(300,941,qs),
(371,995,o),
(554,1039,o),
(663,1020,qs),
(752,1004,o)
);
},
{
closed = 1;
nodes = (
(458,846,o),
(414,806,qs),
(369,766,o),
(312,651,o),
(300,584,qs),
(296,562,ls),
(283,487,o),
(295,346,o),
(322,289,qs),
(349,232,o),
(449,152,o),
(523,139,qs),
(571,131,o),
(653,144,o),
(689,163,qs),
(735,188,o),
(811,280,o),
(840,341,qs),
(860,385,o),
(890,486,o),
(900,543,qs),
(912,608,l),
(911,636,o),
(884,715,o),
(854,754,qs),
(824,792,o),
(727,854,o),
(654,867,qs),
(578,881,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
13 1 0 1 12 1 3 0 2 1 5 3 58 1 4 5 4 76 0 1 0 0 3 1 0 105 6 1 3 7 1 5 4 3 5 105 0 4 2 2 4 89 0 4 4 2 97 0 2 4 2 81 42 42 0 0 42 63 42 62 53 51 0 41 0 40 43 39 39 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = partialdiff;
unicode = 8706;
},
{
glyphname = percent;
lastChange = "2025-02-27 17:23:05 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,1081,o),
(313,1107,qs),
(286,1138,o),
(286,1195,qs),
(286,1250,o),
(313,1282,qs),
(334,1306,o),
(380,1306,qs),
(427,1306,o),
(447,1282,qs),
(474,1250,o),
(474,1195,qs),
(474,1138,o),
(447,1107,qs),
(427,1081,o),
(380,1081,qs)
);
},
{
closed = 1;
nodes = (
(479,955,o),
(524,1007,qs),
(591,1083,o),
(591,1195,qs),
(591,1306,o),
(524,1383,qs),
(479,1434,o),
(380,1434,qs),
(282,1434,o),
(237,1383,qs),
(170,1306,o),
(170,1195,qs),
(170,1083,o),
(237,1007,qs),
(282,955,o),
(380,955,qs)
);
},
{
closed = 1;
nodes = (
(802,128,o),
(781,152,qs),
(754,184,o),
(754,239,qs),
(754,296,o),
(781,327,qs),
(802,353,o),
(848,353,qs),
(895,353,o),
(916,327,qs),
(942,296,o),
(942,239,qs),
(942,184,o),
(916,152,qs),
(895,128,o),
(848,128,qs)
);
},
{
closed = 1;
nodes = (
(947,0,o),
(992,51,qs),
(1059,128,o),
(1059,239,qs),
(1059,351,o),
(992,427,qs),
(947,479,o),
(848,479,qs),
(750,479,o),
(705,427,qs),
(638,351,o),
(638,239,qs),
(638,128,o),
(705,51,qs),
(750,0,o),
(848,0,qs)
);
},
{
closed = 1;
nodes = (
(234,0,l),
(408,0,l),
(1004,1456,l),
(830,1456,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
68 1 0 2 65 1 7 5 2 76 10 1 1 11 1 3 6 1 3 105 0 6 0 4 5 6 4 105 0 0 0 2 97 8 1 2 2 32 77 12 1 5 5 7 97 14 9 13 3 7 7 31 7 78 64 64 48 48 32 32 16 16 0 0 64 69 64 69 67 66 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = percent;
unicode = 37;
},
{
glyphname = perthousand;
lastChange = "2025-02-27 17:26:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,1081,o),
(161,1107,qs),
(134,1138,o),
(134,1195,qs),
(134,1250,o),
(161,1282,q),
(182,1306,o),
(228,1306,qs),
(275,1306,o),
(295,1282,qs),
(322,1250,o),
(322,1195,qs),
(322,1138,o),
(295,1107,qs),
(275,1081,o),
(228,1081,qs)
);
},
{
closed = 1;
nodes = (
(327,955,o),
(372,1007,qs),
(439,1083,o),
(439,1195,qs),
(439,1306,o),
(372,1383,qs),
(327,1434,o),
(228,1434,qs),
(130,1434,o),
(85,1383,qs),
(18,1306,o),
(18,1195,qs),
(18,1083,o),
(85,1007,qs),
(130,955,o),
(228,955,qs)
);
},
{
closed = 1;
nodes = (
(510,128,o),
(489,152,qs),
(462,184,o),
(462,239,qs),
(462,296,o),
(489,327,qs),
(510,353,o),
(556,353,qs),
(603,353,o),
(624,327,qs),
(650,296,o),
(650,239,qs),
(650,184,o),
(624,152,qs),
(603,128,o),
(556,128,qs)
);
},
{
closed = 1;
nodes = (
(655,0,o),
(700,51,qs),
(767,128,o),
(767,239,qs),
(767,351,o),
(700,427,qs),
(655,479,o),
(556,479,qs),
(458,479,o),
(413,427,qs),
(346,351,o),
(346,239,qs),
(346,128,o),
(413,51,qs),
(458,0,o),
(556,0,qs)
);
},
{
closed = 1;
nodes = (
(12,0,l),
(186,0,l),
(782,1456,l),
(608,1456,l)
);
},
{
closed = 1;
nodes = (
(960,128,o),
(939,152,qs),
(912,184,o),
(912,239,qs),
(912,296,o),
(939,327,qs),
(960,353,o),
(1006,353,qs),
(1053,353,o),
(1074,327,qs),
(1100,296,o),
(1100,239,qs),
(1100,184,o),
(1074,152,qs),
(1053,128,o),
(1006,128,qs)
);
},
{
closed = 1;
nodes = (
(1105,0,o),
(1150,51,qs),
(1217,128,o),
(1217,239,qs),
(1217,351,o),
(1150,427,qs),
(1105,479,o),
(1006,479,qs),
(908,479,o),
(863,427,qs),
(796,351,o),
(796,239,qs),
(796,128,o),
(863,51,qs),
(908,0,o),
(1006,0,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
100 1 4 6 97 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
16 1 5 17 1 7 2 5 7 105 10 1 2 8 1 0 1 2 0 105 0 4 4 6 97 12 1 6 6 32 77 18 9 14 3 1 1 3 97 20 13 19 11 15 5 3 3 37 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
12 1 6 0 4 5 6 4 105 16 1 5 17 1 7 2 5 7 105 10 1 2 8 1 0 1 2 0 105 18 9 14 3 1 1 3 97 20 13 19 11 15 5 3 3 37 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 58 values pushed */
96 96 80 80 64 64 48 48 32 32 16 16 0 0 96 101 96 101 99 98 80 95 80 94 88 86 64 79 64 78 72 70 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 21 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = uni2031;
lastChange = "2025-02-27 17:26:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,1081,o),
(161,1107,qs),
(134,1138,o),
(134,1195,qs),
(134,1250,o),
(161,1282,q),
(182,1306,o),
(228,1306,qs),
(275,1306,o),
(295,1282,qs),
(322,1250,o),
(322,1195,qs),
(322,1138,o),
(295,1107,qs),
(275,1081,o),
(228,1081,qs)
);
},
{
closed = 1;
nodes = (
(327,955,o),
(372,1007,qs),
(439,1083,o),
(439,1195,qs),
(439,1306,o),
(372,1383,qs),
(327,1434,o),
(228,1434,qs),
(130,1434,o),
(85,1383,qs),
(18,1306,o),
(18,1195,qs),
(18,1083,o),
(85,1007,qs),
(130,955,o),
(228,955,qs)
);
},
{
closed = 1;
nodes = (
(510,128,o),
(489,152,qs),
(462,184,o),
(462,239,qs),
(462,296,o),
(489,327,qs),
(510,353,o),
(556,353,qs),
(603,353,o),
(624,327,qs),
(650,296,o),
(650,239,qs),
(650,184,o),
(624,152,qs),
(603,128,o),
(556,128,qs)
);
},
{
closed = 1;
nodes = (
(655,0,o),
(700,51,qs),
(767,128,o),
(767,239,qs),
(767,351,o),
(700,427,qs),
(655,479,o),
(556,479,qs),
(458,479,o),
(413,427,qs),
(346,351,o),
(346,239,qs),
(346,128,o),
(413,51,qs),
(458,0,o),
(556,0,qs)
);
},
{
closed = 1;
nodes = (
(12,0,l),
(186,0,l),
(782,1456,l),
(608,1456,l)
);
},
{
closed = 1;
nodes = (
(960,128,o),
(939,152,qs),
(912,184,o),
(912,239,qs),
(912,296,o),
(939,327,qs),
(960,353,o),
(1006,353,qs),
(1053,353,o),
(1074,327,qs),
(1100,296,o),
(1100,239,qs),
(1100,184,o),
(1074,152,qs),
(1053,128,o),
(1006,128,qs)
);
},
{
closed = 1;
nodes = (
(1105,0,o),
(1150,51,qs),
(1217,128,o),
(1217,239,qs),
(1217,351,o),
(1150,427,qs),
(1105,479,o),
(1006,479,qs),
(908,479,o),
(863,427,qs),
(796,351,o),
(796,239,qs),
(796,128,o),
(863,51,qs),
(908,0,o),
(1006,0,qs)
);
},
{
closed = 1;
nodes = (
(730,638,o),
(709,662,qs),
(682,694,o),
(682,749,qs),
(682,806,o),
(709,837,qs),
(730,863,o),
(776,863,qs),
(823,863,o),
(844,837,qs),
(870,806,o),
(870,749,qs),
(870,694,o),
(844,662,qs),
(823,638,o),
(776,638,qs)
);
},
{
closed = 1;
nodes = (
(875,510,o),
(920,561,qs),
(987,638,o),
(987,749,qs),
(987,861,o),
(920,937,qs),
(875,989,o),
(776,989,qs),
(678,989,o),
(633,937,qs),
(566,861,o),
(566,749,qs),
(566,638,o),
(633,561,qs),
(678,510,o),
(776,510,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 152 values pushed */
132 1 8 10 129 1 7 5 2 76 22 1 9 23 1 11 0 9 11 105 0 2 0 0 1 2 0 106 18 1 1 19 1 3 4 1 3 105 14 1 6 12 1 4 5 6 4 105 0 8 8 10 97 16 1 10 10 32 77 24 13 20 3 5 5 7 97 26 17 25 15 21 5 7 7 31 7 78 128 128 112 112 96 96 80 80 64 64 48 48 32 32 16 16 0 0 128 133 128 133 131 130 112 127 112 126 120 118 96 111 96 110 104 102 80 95 80 94 88 86 64 79 64 78 72 70 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 27 8 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2031;
unicode = 8241;
},
{
glyphname = therefore;
lastChange = "2025-02-28 18:06:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1130,196,l),
(936,391,o),
(936,391,q),
(740,196,l),
(936,0,l)
);
},
{
closed = 1;
nodes = (
(489,196,l),
(295,391,o),
(295,391,q),
(99,196,l),
(295,0,l)
);
},
{
closed = 1;
nodes = (
(809,677,l),
(615,872,o),
(615,872,q),
(420,677,l),
(615,481,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 11 9 6 4 1 3 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = therefore;
unicode = 8756;
},
{
glyphname = uni221B;
lastChange = "2025-03-02 12:36:05 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = radical;
},
{
pos = (6,963);
ref = three;
scale = (0.3387,0.3387);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
36 31 2 2 3 15 1 1 2 14 1 0 1 45 1 6 7 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 3 1 3 2 114 0 6 7 6 134 5 1 4 0 3 2 4 3 103 0 1 0 0 8 1 0 105 0 8 7 7 8 87 0 8 8 7 95 0 7 8 7 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 3 1 3 2 1 128 0 6 7 6 134 5 1 4 0 3 2 4 3 103 0 1 0 0 8 1 0 105 0 8 7 7 8 87 0 8 8 7 95 0 7 8 7 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 17 17 18 17 18 40 52 58 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni221B;
unicode = 8731;
},
{
glyphname = uni221C;
lastChange = "2025-03-02 12:36:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = radical;
},
{
pos = (32,955);
ref = four;
scale = (0.3438,0.3438);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
12 1 0 1 23 1 8 9 2 76 7 1 6 1 6 133 0 8 9 8 134 2 1 0 5 1 3 4 0 3 103 0 1 0 4 10 1 4 103 0 10 9 9 10 87 0 10 10 9 95 0 9 10 9 79 22 21 20 19 17 17 18 17 17 17 17 17 16 11 6 31
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni221C;
unicode = 8732;
},
{
glyphname = uni2235;
lastChange = "2025-03-01 22:05:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
angle = 180;
pos = (1229,875);
ref = therefore;
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 11 9 6 4 1 3 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2235;
unicode = 8757;
},
{
glyphname = uni2236;
lastChange = "2025-02-28 18:38:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,195,l),
(614,0,o),
(614,0,q),
(809,195,l),
(614,390,l)
);
},
{
closed = 1;
nodes = (
(420,803,l),
(614,608,o),
(614,608,qs),
(809,803,l),
(614,999,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
9 6 4 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2236;
unicode = 8758;
},
{
glyphname = uni2237;
lastChange = "2025-02-28 18:05:19 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(732,196,l),
(926,0,o),
(926,0,q),
(1122,196,l),
(926,391,l)
);
},
{
closed = 1;
nodes = (
(106,196,l),
(300,0,o),
(300,0,q),
(496,196,l),
(300,391,l)
);
},
{
closed = 1;
nodes = (
(732,805,l),
(926,610,o),
(926,610,q),
(1122,805,l),
(926,1001,l)
);
},
{
closed = 1;
nodes = (
(106,805,l),
(300,610,o),
(300,610,q),
(496,805,l),
(300,1001,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
19 16 14 11 9 6 4 1 4 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni2237;
unicode = 8759;
},
{
glyphname = uni229B;
lastChange = "2025-03-03 15:55:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,272,o),
(297,208,qs),
(357,143,o),
(520,69,o),
(615,69,qs),
(709,69,o),
(872,144,o),
(932,209,qs),
(992,273,o),
(1060,445,o),
(1060,543,qs),
(1060,640,o),
(992,811,o),
(932,875,qs),
(872,939,o),
(709,1012,o),
(615,1012,qs),
(520,1012,o),
(357,939,o),
(297,875,qs),
(237,811,o),
(169,640,o),
(169,543,qs),
(169,445,o)
);
},
{
closed = 1;
nodes = (
(169,871,o),
(242,945,qs),
(314,1019,o),
(508,1102,o),
(615,1102,qs),
(728,1102,o),
(922,1014,o),
(994,939,qs),
(1065,863,o),
(1147,659,o),
(1147,542,qs),
(1147,425,o),
(1065,220,o),
(994,144,qs),
(922,67,o),
(728,-21,o),
(615,-21,qs),
(502,-21,o),
(307,67,o),
(236,144,qs),
(164,220,o),
(82,425,o),
(82,542,qs),
(83,664,o)
);
},
{
pos = (281,128);
ref = asterisk;
scale = (0.5427,0.5427);
}
);
width = 1229;
}
);
unicode = 8859;
},
{
glyphname = uni229C;
lastChange = "2025-03-03 20:09:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (312,214);
ref = equal;
scale = (0.4867,0.4867);
},
{
closed = 1;
nodes = (
(237,272,o),
(297,208,qs),
(357,143,o),
(520,69,o),
(615,69,qs),
(709,69,o),
(872,144,o),
(932,209,qs),
(992,273,o),
(1060,445,o),
(1060,543,qs),
(1060,640,o),
(992,811,o),
(932,875,qs),
(872,939,o),
(709,1012,o),
(615,1012,qs),
(520,1012,o),
(357,939,o),
(297,875,qs),
(237,811,o),
(169,640,o),
(169,543,qs),
(169,445,o)
);
},
{
closed = 1;
nodes = (
(169,871,o),
(242,945,qs),
(314,1019,o),
(508,1102,o),
(615,1102,qs),
(728,1102,o),
(922,1014,o),
(994,939,qs),
(1065,863,o),
(1147,659,o),
(1147,542,qs),
(1147,425,o),
(1065,220,o),
(994,144,qs),
(922,67,o),
(728,-21,o),
(615,-21,qs),
(502,-21,o),
(307,67,o),
(236,144,qs),
(164,220,o),
(82,425,o),
(82,542,qs),
(83,664,o)
);
}
);
width = 1229;
}
);
unicode = 8860;
},
{
glyphname = uni22EE;
lastChange = "2025-02-28 07:59:02 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,1200,l),
(514,1000,l),
(714,1000,l),
(714,1200,l)
);
},
{
closed = 1;
nodes = (
(514,800,l),
(514,600,l),
(714,600,l),
(714,800,l)
);
},
{
closed = 1;
nodes = (
(514,400,l),
(514,200,l),
(714,200,l),
(714,400,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 2 1 3 2 103 0 1 0 0 5 1 0 103 0 5 4 4 5 87 0 5 5 4 95 0 4 5 4 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni22EE;
unicode = 8942;
},
{
glyphname = uni22EF;
lastChange = "2025-02-28 07:58:45 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,600,l),
(314,600,l),
(314,800,l),
(114,800,l)
);
},
{
closed = 1;
nodes = (
(514,600,l),
(714,600,l),
(714,800,l),
(514,800,l)
);
},
{
closed = 1;
nodes = (
(914,600,l),
(1114,600,l),
(1114,800,l),
(914,800,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
4 2 2 0 1 1 0 87 4 2 2 0 0 1 95 8 5 7 3 6 5 1 0 1 79 8 8 4 4 0 0 8 11 8 11 10 9 4 7 4 7 6 5 0 3 0 3 17 9 6 23
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni22EF;
unicode = 8943;
},
{
glyphname = uni22F0;
lastChange = "2025-02-28 07:59:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,276,l),
(473,417,l),
(331,559,l),
(190,417,l)
);
},
{
closed = 1;
nodes = (
(614,559,l),
(755,700,l),
(614,841,l),
(473,700,l)
);
},
{
closed = 1;
nodes = (
(897,841,l),
(1038,983,l),
(897,1124,l),
(755,983,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
10 8 6 4 2 0 3 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni22F0;
unicode = 8944;
},
{
glyphname = uni22F1;
lastChange = "2025-02-28 07:59:23 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,983,l),
(331,841,l),
(473,983,l),
(331,1124,l)
);
},
{
closed = 1;
nodes = (
(473,700,l),
(614,559,l),
(755,700,l),
(614,841,l)
);
},
{
closed = 1;
nodes = (
(755,417,l),
(897,276,l),
(1038,417,l),
(897,559,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 9 7 5 3 1 3 50
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni22F1;
unicode = 8945;
},
{
glyphname = uni21BA;
lastChange = "2025-03-03 20:34:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,458,o),
(291,311,o),
(343,256,qs),
(394,200,o),
(534,137,o),
(615,137,qs),
(695,137,o),
(835,201,o),
(886,257,qs),
(938,312,o),
(996,459,o),
(996,543,qs),
(996,626,o),
(938,772,o),
(886,827,qs),
(835,882,o),
(736,928,o),
(654,939,qs),
(616,944,l),
(616,741,l),
(252,990,l),
(613,1259,l),
(613,1082,l),
(727,1070,o),
(922,1014,o),
(994,939,qs),
(1065,863,o),
(1147,659,o),
(1147,542,qs),
(1147,425,o),
(1065,220,o),
(994,144,qs),
(922,67,o),
(728,-21,o),
(615,-21,qs),
(502,-21,o),
(307,67,o),
(236,144,qs),
(164,220,o),
(82,425,o),
(82,542,q),
(82,542,l),
(233,542,l)
);
},
{
closed = 1;
nodes = (
(615,1102,l)
);
}
);
width = 1229;
}
);
unicode = 8634;
},
{
glyphname = uni21BB;
lastChange = "2025-03-03 20:32:30 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1147,542,l),
(1147,542,l),
(1147,425,o),
(1065,220,o),
(993,144,qs),
(922,67,o),
(727,-21,o),
(614,-21,qs),
(501,-21,o),
(307,67,o),
(235,144,qs),
(164,220,o),
(82,425,o),
(82,542,qs),
(82,659,o),
(164,863,o),
(235,939,qs),
(307,1014,o),
(502,1070,o),
(616,1082,q),
(616,1259,l),
(977,990,l),
(613,741,l),
(613,944,l),
(575,939,ls),
(493,928,o),
(394,882,o),
(343,827,qs),
(291,772,o),
(233,626,o),
(233,543,qs),
(233,459,o),
(291,312,o),
(343,257,qs),
(394,201,o),
(534,137,o),
(614,137,qs),
(695,137,o),
(835,200,o),
(886,256,qs),
(938,311,o),
(996,458,o),
(996,542,q)
);
},
{
closed = 1;
nodes = (
(614,1102,l)
);
}
);
width = 1229;
}
);
unicode = 8635;
},
{
glyphname = lozenge;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,0,l),
(811,567,l),
(496,1135,l),
(386,1135,l),
(74,567,l),
(389,0,l)
);
},
{
closed = 1;
nodes = (
(440,978,l),
(662,567,l),
(444,156,l),
(222,567,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
9 8 7 3 4 1 0 1 76 0 0 1 0 133 0 1 1 118 18 17 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = lozenge;
unicode = 9674;
},
{
category = Symbol;
glyphname = uni1F16D;
lastChange = "2025-03-16 17:43:13 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 0;
nodes = (
(581,488,l)
);
},
{
closed = 1;
nodes = (
(237,272,o),
(297,208,qs),
(357,143,o),
(520,69,o),
(615,69,qs),
(709,69,o),
(872,144,o),
(932,209,qs),
(992,273,o),
(1060,445,o),
(1060,543,qs),
(1060,640,o),
(992,811,o),
(932,875,qs),
(872,939,o),
(709,1012,o),
(615,1012,qs),
(520,1012,o),
(357,939,o),
(297,875,qs),
(237,811,o),
(169,640,o),
(169,543,qs),
(169,445,o)
);
},
{
closed = 1;
nodes = (
(169,871,o),
(242,945,qs),
(314,1019,o),
(508,1102,o),
(615,1102,qs),
(728,1102,o),
(922,1014,o),
(994,939,qs),
(1065,863,o),
(1147,659,o),
(1147,542,qs),
(1147,425,o),
(1065,220,o),
(994,144,qs),
(922,67,o),
(728,-21,o),
(615,-21,qs),
(502,-21,o),
(307,67,o),
(236,144,qs),
(164,220,o),
(82,425,o),
(82,542,qs),
(83,664,o)
);
},
{
closed = 1;
nodes = (
(339,534,l),
(339,518,o),
(340,500,o),
(344,485,c),
(347,470,o),
(353,456,o),
(360,444,c),
(368,432,o),
(379,422,o),
(392,415,c),
(405,407,o),
(423,406,o),
(442,406,c),
(454,406,o),
(469,405,o),
(480,409,c),
(490,414,o),
(499,419,o),
(507,426,c),
(514,433,o),
(520,441,o),
(524,449,c),
(529,458,o),
(529,474,o),
(529,485,c),
(587,485,l),
(587,467,o),
(586,447,o),
(579,431,c),
(572,416,o),
(562,402,o),
(549,390,c),
(536,379,o),
(521,370,o),
(503,363,c),
(486,356,o),
(463,356,o),
(442,356,c),
(416,356,o),
(388,358,o),
(368,368,c),
(349,377,o),
(332,390,o),
(318,406,c),
(305,423,o),
(295,442,o),
(288,463,c),
(281,485,o),
(281,511,o),
(281,534,c),
(281,548,l),
(281,571,o),
(281,597,o),
(288,618,c),
(295,640,o),
(305,659,o),
(318,675,c),
(332,691,o),
(349,704,o),
(368,714,c),
(388,723,o),
(416,725,o),
(442,725,c),
(463,725,o),
(486,725,o),
(503,719,c),
(521,712,o),
(536,703,o),
(549,691,c),
(562,680,o),
(572,666,o),
(579,650,c),
(586,634,o),
(587,614,o),
(587,596,c),
(529,596,l),
(529,607,o),
(530,621,o),
(526,630,c),
(521,640,o),
(515,648,o),
(507,655,c),
(499,662,o),
(490,668,o),
(480,672,c),
(469,676,o),
(454,675,o),
(442,675,c),
(423,675,o),
(405,675,o),
(392,667,c),
(379,659,o),
(368,650,o),
(360,638,c),
(353,625,o),
(347,612,o),
(344,596,c),
(340,582,o),
(339,563,o),
(339,548,c)
);
},
{
closed = 1;
nodes = (
(699,534,l),
(699,518,o),
(700,500,o),
(704,485,c),
(707,470,o),
(713,456,o),
(720,444,c),
(728,432,o),
(739,422,o),
(752,415,c),
(765,407,o),
(783,406,o),
(802,406,c),
(814,406,o),
(829,405,o),
(840,409,c),
(850,414,o),
(859,419,o),
(867,426,c),
(874,433,o),
(880,441,o),
(884,449,c),
(889,458,o),
(889,474,o),
(889,485,c),
(947,485,l),
(947,467,o),
(946,447,o),
(939,431,c),
(932,416,o),
(922,402,o),
(909,390,c),
(896,379,o),
(881,370,o),
(863,363,c),
(846,356,o),
(823,356,o),
(802,356,c),
(776,356,o),
(748,358,o),
(728,368,c),
(709,377,o),
(692,390,o),
(678,406,c),
(665,423,o),
(655,442,o),
(648,463,c),
(641,485,o),
(641,511,o),
(641,534,c),
(641,548,l),
(641,571,o),
(641,597,o),
(648,618,c),
(655,640,o),
(665,659,o),
(678,675,c),
(692,691,o),
(709,704,o),
(728,714,c),
(748,723,o),
(776,725,o),
(802,725,c),
(823,725,o),
(846,725,o),
(863,719,c),
(881,712,o),
(896,703,o),
(909,691,c),
(922,680,o),
(932,666,o),
(939,650,c),
(946,634,o),
(947,614,o),
(947,596,c),
(889,596,l),
(889,607,o),
(890,621,o),
(886,630,c),
(881,640,o),
(875,648,o),
(867,655,c),
(859,662,o),
(850,668,o),
(840,672,c),
(829,676,o),
(814,675,o),
(802,675,c),
(783,675,o),
(765,675,o),
(752,667,c),
(739,659,o),
(728,650,o),
(720,638,c),
(713,625,o),
(707,612,o),
(704,596,c),
(700,582,o),
(699,563,o),
(699,548,c)
);
}
);
width = 1229;
}
);
subCategory = Other;
unicode = 127341;
},
{
category = Symbol;
glyphname = uni1F16E;
lastChange = "2025-03-03 20:08:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(679,-29,o),
(880,42,o),
(958,112,qs),
(1035,182,o),
(1135,379,o),
(1145,496,qs),
(1155,612,o),
(1091,822,o),
(1027,904,qs),
(962,985,o),
(776,1090,o),
(664,1100,qs),
(557,1109,o),
(357,1043,o),
(279,976,qs),
(199,908,o),
(96,710,o),
(84,588,qs),
(74,472,o),
(138,260,o),
(203,178,qs),
(267,96,o),
(453,-9,o),
(566,-19,qs)
);
},
{
closed = 1;
nodes = (
(479,79,o),
(323,167,o),
(269,237,qs),
(215,306,o),
(167,513,o),
(175,611,q),
(388,534,l),
(388,532,ls),
(388,478,o),
(416,385,o),
(447,349,qs),
(478,312,o),
(567,270,o),
(627,270,qs),
(669,270,o),
(744,300,o),
(799,334,o),
(818,377,q),
(1002,310,l),
(913,168,o),
(668,62,o),
(574,71,qs)
);
},
{
closed = 1;
nodes = (
(588,368,o),
(540,397,o),
(524,421,qs),
(508,444,o),
(500,481,o),
(499,493,q),
(721,413,l),
(712,395,o),
(686,382,o),
(645,368,o),
(625,368,qs)
);
},
{
closed = 1;
nodes = (
(497,591,l),
(503,638,o),
(524,661,qs),
(540,684,o),
(589,714,o),
(625,714,qs),
(648,714,o),
(688,698,o),
(704,684,qs),
(718,670,o),
(735,632,o),
(737,612,q),
(840,612,l),
(840,652,o),
(807,732,o),
(779,759,qs),
(751,786,o),
(673,813,o),
(627,813,qs),
(567,813,o),
(478,770,o),
(447,734,qs),
(409,693,o),
(396,628,q),
(194,701,l),
(236,807,o),
(327,901,qs),
(393,960,o),
(561,1018,o),
(656,1010,qs),
(750,1002,o),
(906,915,o),
(960,846,qs),
(1014,777,o),
(1067,601,o),
(1059,504,qs),
(1050,442,o),
(1036,395,q)
);
}
);
width = 1229;
}
);
subCategory = Other;
unicode = 127342;
},
{
category = Symbol;
glyphname = uni1F16F;
lastChange = "2025-03-03 19:12:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,272,o),
(297,208,qs),
(357,143,o),
(520,69,o),
(615,69,qs),
(709,69,o),
(872,144,o),
(932,209,qs),
(992,273,o),
(1060,445,o),
(1060,543,qs),
(1060,640,o),
(992,811,o),
(932,875,qs),
(872,939,o),
(709,1012,o),
(615,1012,qs),
(520,1012,o),
(357,939,o),
(297,875,qs),
(237,811,o),
(169,640,o),
(169,543,qs),
(169,445,o)
);
},
{
closed = 1;
nodes = (
(169,871,o),
(242,945,qs),
(314,1019,o),
(508,1102,o),
(615,1102,qs),
(728,1102,o),
(922,1014,o),
(994,939,qs),
(1065,863,o),
(1147,659,o),
(1147,542,qs),
(1147,425,o),
(1065,220,o),
(994,144,qs),
(922,67,o),
(728,-21,o),
(615,-21,qs),
(502,-21,o),
(307,67,o),
(236,144,qs),
(164,220,o),
(82,425,o),
(82,542,qs),
(83,664,o)
);
},
{
closed = 1;
nodes = (
(535,450,l),
(535,229,l),
(695,229,l),
(695,450,l),
(739,450,l),
(739,671,l),
(491,671,l),
(491,450,l)
);
},
{
closed = 1;
nodes = (
(657,688,o),
(692,722,o),
(692,765,cs),
(692,807,o),
(657,842,o),
(615,842,cs),
(573,842,o),
(538,807,o),
(538,765,cs),
(538,722,o),
(573,688,o),
(615,688,cs)
);
}
);
width = 1229;
}
);
subCategory = Other;
unicode = 127343;
},
{
category = Symbol;
glyphname = uni1F10D;
lastChange = "2025-03-16 17:42:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,272,o),
(297,208,qs),
(357,143,o),
(520,69,o),
(615,69,qs),
(709,69,o),
(872,144,o),
(932,209,qs),
(992,273,o),
(1060,445,o),
(1060,543,qs),
(1060,640,o),
(992,811,o),
(932,875,qs),
(872,939,o),
(709,1012,o),
(615,1012,qs),
(520,1012,o),
(357,939,o),
(297,875,qs),
(237,811,o),
(169,640,o),
(169,543,qs),
(169,445,o)
);
},
{
closed = 1;
nodes = (
(169,871,o),
(242,945,qs),
(314,1019,o),
(508,1102,o),
(615,1102,qs),
(728,1102,o),
(922,1014,o),
(994,939,qs),
(1065,863,o),
(1147,659,o),
(1147,542,qs),
(1147,425,o),
(1065,220,o),
(994,144,qs),
(922,67,o),
(728,-21,o),
(615,-21,qs),
(502,-21,o),
(307,67,o),
(236,144,qs),
(164,220,o),
(82,425,o),
(82,542,qs),
(83,664,o)
);
},
{
closed = 1;
nodes = (
(557,469,l),
(661,572,l),
(661,644,l),
(558,541,l)
);
},
{
closed = 1;
nodes = (
(647,285,l),
(682,285,o),
(716,300,o),
(741,327,c),
(766,354,o),
(780,390,o),
(780,428,c),
(780,684,l),
(780,722,o),
(766,759,o),
(741,785,c),
(716,812,o),
(682,828,o),
(647,828,c),
(571,828,l),
(536,828,o),
(502,812,o),
(477,785,c),
(452,759,o),
(438,722,o),
(438,684,c),
(438,428,l),
(438,390,o),
(452,354,o),
(477,327,c),
(502,300,o),
(536,285,o),
(571,285,c)
);
},
{
closed = 1;
nodes = (
(537,345,o),
(499,385,o),
(499,435,c),
(499,677,l),
(499,727,o),
(537,768,o),
(583,768,c),
(635,768,l),
(681,768,o),
(719,727,o),
(719,677,c),
(719,435,l),
(719,385,o),
(681,345,o),
(635,345,c),
(583,345,l)
);
}
);
width = 1229;
}
);
subCategory = Other;
unicode = 127245;
},
{
category = Symbol;
glyphname = uni1F10E;
lastChange = "2025-03-03 20:36:37 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,272,o),
(297,208,qs),
(357,143,o),
(520,69,o),
(615,69,qs),
(709,69,o),
(872,144,o),
(932,209,qs),
(992,273,o),
(1060,445,o),
(1060,543,qs),
(1060,640,o),
(992,811,o),
(932,875,qs),
(872,939,o),
(709,1012,o),
(615,1012,qs),
(520,1012,o),
(357,939,o),
(297,875,qs),
(237,811,o),
(169,640,o),
(169,543,qs),
(169,445,o)
);
},
{
closed = 1;
nodes = (
(169,871,o),
(242,945,qs),
(314,1019,o),
(508,1102,o),
(615,1102,qs),
(728,1102,o),
(922,1014,o),
(994,939,qs),
(1065,863,o),
(1147,659,o),
(1147,542,qs),
(1147,425,o),
(1065,220,o),
(994,144,qs),
(922,67,o),
(728,-21,o),
(615,-21,qs),
(502,-21,o),
(307,67,o),
(236,144,qs),
(164,220,o),
(82,425,o),
(82,542,qs),
(83,664,o)
);
},
{
pos = (319,251);
ref = uni21BA;
scale = (0.4824,0.4824);
}
);
width = 1229;
}
);
subCategory = Other;
unicode = 127246;
},
{
category = Symbol;
glyphname = uni1F10F;
lastChange = "2025-03-16 16:31:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,233,l),
(647,233,l),
(647,294,l),
(676,295,o),
(706,302,o),
(725,324,c),
(750,349,o),
(758,393,o),
(760,430,c),
(760,449,o),
(755,467,o),
(747,482,c),
(740,497,o),
(727,507,o),
(715,518,c),
(694,534,o),
(670,544,o),
(647,554,c),
(647,740,l),
(664,737,o),
(681,729,o),
(693,715,c),
(710,697,o),
(707,665,o),
(707,640,c),
(760,640,l),
(759,652,o),
(760,679,o),
(755,697,c),
(750,719,o),
(744,741,o),
(729,755,c),
(706,776,o),
(676,784,o),
(647,789,c),
(647,850,l),
(581,850,l),
(581,790,l),
(551,788,o),
(522,781,o),
(503,761,c),
(478,735,o),
(470,691,o),
(469,654,c),
(469,636,o),
(473,617,o),
(482,602,c),
(489,587,o),
(502,575,o),
(514,567,c),
(534,550,o),
(557,540,o),
(581,530,c),
(581,344,l),
(563,347,o),
(546,355,o),
(534,369,c),
(519,387,o),
(520,419,o),
(520,443,c),
(469,443,l),
(470,432,o),
(469,404,o),
(473,387,c),
(478,365,o),
(484,343,o),
(500,328,c),
(521,308,o),
(551,298,o),
(581,295,c)
);
},
{
closed = 1;
nodes = (
(647,497,l),
(663,487,o),
(680,478,o),
(692,463,c),
(700,454,o),
(705,442,o),
(706,429,c),
(707,407,o),
(704,383,o),
(690,368,c),
(679,355,o),
(663,347,o),
(647,344,c)
);
},
{
closed = 1;
nodes = (
(581,587,l),
(564,597,o),
(549,607,o),
(537,622,c),
(528,630,o),
(524,644,o),
(522,654,c),
(521,676,o),
(525,701,o),
(539,716,c),
(550,729,o),
(564,735,o),
(581,740,c)
);
},
{
closed = 1;
nodes = (
(592,-4,o),
(661,-1,o),
(727,16,c),
(793,33,o),
(853,62,o),
(907,102,c),
(961,143,o),
(1007,193,o),
(1044,253,c),
(1081,313,o),
(1106,380,o),
(1119,455,c),
(1133,528,o),
(1132,600,o),
(1117,669,c),
(1102,738,o),
(1077,800,o),
(1040,856,c),
(1004,911,o),
(957,958,o),
(901,997,c),
(844,1036,o),
(780,1062,o),
(709,1074,c),
(641,1086,o),
(574,1084,o),
(508,1069,c),
(442,1054,o),
(382,1027,o),
(328,988,c),
(274,949,o),
(227,899,o),
(189,838,c),
(150,778,o),
(124,709,o),
(109,632,c),
(96,558,o),
(97,486,o),
(111,417,c),
(126,348,o),
(152,285,o),
(189,229,c),
(225,173,o),
(271,125,o),
(328,86,c),
(385,47,o),
(449,21,o),
(521,9,c)
);
},
{
closed = 1;
nodes = (
(476,105,o),
(422,127,o),
(375,159,c),
(327,192,o),
(288,232,o),
(257,279,c),
(226,327,o),
(206,384,o),
(197,452,c),
(187,520,o),
(188,585,o),
(198,647,c),
(967,288,l),
(901,202,o),
(828,146,o),
(747,119,c),
(666,92,o),
(595,84,o),
(536,94,c)
);
},
{
closed = 1;
nodes = (
(224,730,l),
(257,796,o),
(305,857,o),
(369,912,c),
(414,946,o),
(464,970,o),
(520,984,c),
(575,998,o),
(633,999,o),
(693,989,c),
(753,978,o),
(806,957,o),
(853,925,c),
(901,892,o),
(940,853,o),
(971,806,c),
(1002,759,o),
(1023,706,o),
(1035,648,c),
(1048,590,o),
(1048,531,o),
(1037,470,c),
(1028,430,o),
(1018,396,o),
(1006,367,c)
);
}
);
width = 1229;
}
);
subCategory = Other;
unicode = 127247;
},
{
glyphname = dieresiscomb;
lastChange = "2025-03-03 14:28:43 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = dieresis;
}
);
width = 1229;
}
);
unicode = 776;
},
{
glyphname = dotaccentcomb;
lastChange = "2025-03-03 14:29:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = dotaccent;
}
);
width = 1229;
}
);
unicode = 775;
},
{
glyphname = gravecomb;
lastChange = "2025-03-03 14:26:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = grave;
}
);
width = 1229;
}
);
unicode = 768;
},
{
glyphname = acutecomb;
lastChange = "2025-03-03 14:25:13 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = acute;
}
);
width = 1229;
}
);
unicode = 769;
},
{
glyphname = hungarumlautcomb;
lastChange = "2025-03-03 14:31:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = hungarumlaut;
}
);
width = 1229;
}
);
unicode = 779;
},
{
glyphname = caroncomb.alt;
lastChange = "2025-03-01 22:23:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(956,1317,l),
(816,1317,l),
(900,1583,l),
(1084,1583,l)
);
}
);
width = 1229;
}
);
},
{
glyphname = circumflexcomb;
lastChange = "2025-03-03 14:23:48 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = circumflex;
}
);
width = 1229;
}
);
unicode = 770;
},
{
glyphname = caroncomb;
lastChange = "2025-03-03 14:24:40 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = caron;
}
);
width = 1229;
}
);
unicode = 780;
},
{
glyphname = brevecomb;
lastChange = "2025-03-03 14:22:50 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = breve;
}
);
width = 1229;
}
);
unicode = 774;
},
{
glyphname = ringcomb;
lastChange = "2025-03-03 14:21:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = ring;
}
);
width = 1229;
}
);
unicode = 778;
},
{
glyphname = tildecomb;
lastChange = "2025-03-03 14:30:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = tilde;
}
);
width = 1229;
}
);
unicode = 771;
},
{
glyphname = macroncomb;
lastChange = "2025-03-03 14:23:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = macron;
}
);
width = 1229;
}
);
unicode = 772;
},
{
glyphname = commaturnedabovecomb;
lastChange = "2025-03-01 22:30:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = uni02BB;
}
);
width = 1229;
}
);
unicode = 786;
},
{
glyphname = commaaccent;
lastChange = "2025-03-03 12:36:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,-500,l),
(592,-499,l),
(703,-100,l),
(526,-100,l)
);
}
);
width = 1229;
}
);
unicode = 806;
},
{
glyphname = commaaccentcomb.loclMAH;
lastChange = "2025-03-01 22:22:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,-480,l),
(638,-479,l),
(749,-80,l),
(572,-80,l)
);
}
);
width = 1229;
}
);
},
{
glyphname = cedillacomb;
lastChange = "2025-03-03 14:19:13 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = cedilla;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1
PUSHW[ ]	/* 1 value pushed */
-1038
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 1229;
}
);
note = uni0327;
unicode = 807;
},
{
glyphname = ogonekcomb;
lastChange = "2025-03-03 14:19:39 +0000";
layers = (
{
layerId = m01;
shapes = (
{
ref = ogonek;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
3 1 2 0 2 133 0 0 1 1 0 87 0 0 0 1 96 0 1 0 1 80 0 0 0 5 0 5 17 17 4 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = uni0328;
unicode = 808;
},
{
glyphname = dieresis;
lastChange = "2025-03-01 19:57:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,1350,l),
(499,1350,l),
(499,1550,l),
(299,1550,l)
);
},
{
closed = 1;
nodes = (
(729,1350,l),
(929,1350,l),
(929,1550,l),
(729,1550,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = dotaccent;
lastChange = "2025-03-01 19:58:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,1350,l),
(714,1350,l),
(714,1550,l),
(514,1550,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = grave;
lastChange = "2025-03-02 10:23:16 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,1583,l),
(564,1583,l),
(739,1317,l),
(589,1317,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = grave;
unicode = 96;
},
{
glyphname = acute;
lastChange = "2025-03-01 23:33:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(696,1317,l),
(556,1317,l),
(740,1583,l),
(964,1583,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 20 values pushed */
0 0 1 0 133 2 1 1 1 118 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = acute;
unicode = 180;
},
{
glyphname = hungarumlaut;
lastChange = "2025-03-01 19:58:50 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,1317,l),
(476,1317,l),
(626,1583,l),
(426,1583,l)
);
},
{
closed = 1;
nodes = (
(676,1317,l),
(856,1317,l),
(1026,1583,l),
(826,1583,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = circumflex;
lastChange = "2025-03-01 23:32:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,1317,l),
(565,1583,l),
(719,1583,l),
(950,1317,l),
(793,1317,l),
(642,1469,l),
(491,1317,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = uni02C9;
lastChange = "2025-03-01 19:59:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,1520,l),
(971,1520,l),
(971,1380,l),
(257,1380,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = uni02C9;
unicode = 713;
},
{
glyphname = uni02CA;
lastChange = "2025-03-01 19:59:10 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,1317,l),
(410,1317,l),
(594,1583,l),
(818,1583,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 20 values pushed */
0 0 1 0 133 2 1 1 1 118 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = uni02CA;
unicode = 714;
},
{
glyphname = caron;
lastChange = "2025-03-01 20:31:17 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(970,1583,l),
(736,1317,l),
(582,1317,l),
(351,1583,l),
(508,1583,l),
(659,1431,l),
(810,1583,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
2 1 2 0 1 76 1 1 0 2 0 133 0 2 2 118 17 18 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = caron;
unicode = 711;
},
{
glyphname = uni02CB;
lastChange = "2025-03-01 19:59:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(415,1583,l),
(638,1583,l),
(813,1317,l),
(663,1317,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = uni02CB;
unicode = 715;
},
{
glyphname = breve;
lastChange = "2025-03-02 12:31:39 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(871,1426,o),
(832,1391,qs),
(793,1356,o),
(683,1317,o),
(615,1317,qs),
(546,1317,o),
(436,1356,o),
(397,1391,qs),
(358,1426,o),
(315,1525,o),
(315,1584,q),
(465,1584,l),
(465,1554,o),
(483,1499,o),
(501,1479,qs),
(519,1459,o),
(575,1435,o),
(615,1435,qs),
(654,1435,o),
(709,1459,o),
(727,1479,qs),
(745,1499,o),
(763,1554,o),
(763,1584,q),
(913,1584,l),
(913,1525,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
11 7 5 1 4 0 74 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 36 34 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = breve;
unicode = 728;
},
{
glyphname = ring;
lastChange = "2025-03-02 10:25:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,1564,o),
(472,1591,qs),
(499,1617,o),
(574,1647,o),
(616,1647,qs),
(658,1647,o),
(731,1617,o),
(759,1591,qs),
(786,1564,o),
(818,1491,o),
(818,1448,qs),
(818,1405,o),
(786,1333,o),
(759,1308,qs),
(731,1282,o),
(658,1254,o),
(616,1254,qs),
(574,1254,o),
(499,1282,o),
(472,1308,qs),
(444,1333,o),
(411,1405,o),
(411,1448,qs),
(411,1491,o)
);
},
{
closed = 1;
nodes = (
(527,1388,o),
(542,1374,qs),
(556,1359,o),
(594,1343,o),
(616,1343,qs),
(638,1343,o),
(675,1359,o),
(689,1373,qs),
(703,1387,o),
(719,1425,o),
(719,1448,qs),
(719,1472,o),
(703,1513,o),
(689,1528,qs),
(675,1542,o),
(638,1557,o),
(616,1557,qs),
(595,1557,o),
(557,1542,o),
(543,1529,qs),
(528,1514,o),
(510,1473,o),
(510,1448,qs),
(510,1426,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 0 1 2 0 105 4 1 1 3 3 1 89 4 1 1 1 3 97 5 1 3 1 3 81 8 8 0 0 8 15 8 14 12 10 0 7 0 6 34 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = ring;
unicode = 730;
},
{
glyphname = tilde;
lastChange = "2025-03-01 20:07:21 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(963,1428,o),
(936,1398,qs),
(909,1367,o),
(833,1331,o),
(788,1331,qs),
(755,1331,o),
(703,1345,o),
(682,1356,qs),
(660,1366,o),
(622,1391,o),
(603,1402,qs),
(583,1412,o),
(539,1426,o),
(512,1426,qs),
(468,1426,o),
(411,1361,o),
(410,1315,q),
(306,1315,l),
(306,1360,o),
(337,1467,o),
(364,1499,qs),
(391,1530,o),
(466,1568,o),
(512,1568,qs),
(554,1568,o),
(621,1538,o),
(653,1521,qs),
(684,1503,o),
(749,1473,o),
(788,1473,qs),
(809,1473,o),
(847,1491,o),
(861,1506,qs),
(874,1521,o),
(891,1562,o),
(891,1585,q),
(994,1585,l),
(994,1540,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 1 2 114 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 98 6 5 2 3 1 3 82
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 1 1 2 114 6 1 5 4 3 4 5 114 0 1 4 3 1 89 0 0 0 4 5 0 4 105 0 1 1 3 98 0 3 1 3 82
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 1 1 2 114 6 1 5 4 3 4 5 3 128 0 1 4 3 1 89 0 0 0 4 5 0 4 105 0 1 1 3 98 0 3 1 3 82
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 0 1 0 2 1 128 6 1 5 4 3 4 5 3 128 0 1 4 3 1 89 0 0 0 4 5 0 4 105 0 1 1 3 98 0 3 1 3 82
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 27 35 35 19 35 35 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = macron;
lastChange = "2025-03-01 19:59:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,1520,l),
(971,1520,l),
(971,1380,l),
(257,1380,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = macron;
unicode = 175;
},
{
glyphname = cedilla;
lastChange = "2025-03-03 12:32:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524,-302,l),
(283,-302,l),
(283,-435,l),
(704,-435,l),
(704,0,l),
(524,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = ogonek;
lastChange = "2025-03-03 12:34:11 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(525,0,l),
(525,-435,l),
(946,-435,l),
(946,-302,l),
(705,-302,l),
(705,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 2 133 0 0 1 1 0 87 0 0 0 1 96 0 1 0 1 80 17 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = uni02C9.alt;
lastChange = "2025-03-03 14:38:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = uni02C9;
}
);
width = 1229;
}
);
},
{
glyphname = uni02CA.alt;
lastChange = "2025-03-03 14:37:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = uni02CA;
}
);
width = 1229;
}
);
},
{
glyphname = uni02CB.alt;
lastChange = "2025-03-03 14:37:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,300);
ref = uni02CB;
}
);
width = 1229;
}
);
},
{
glyphname = uni02BB;
lastChange = "2025-03-01 22:29:31 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,1594,l),
(658,1594,l),
(784,1806,l),
(669,1806,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 20 values pushed */
2 1 1 0 1 133 0 0 0 118 0 0 0 3 0 3 17 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = uni02BB;
unicode = 699;
},
{
glyphname = uni02C8;
lastChange = "2025-03-01 22:30:53 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(671,1231,l),
(682,1564,l),
(558,1564,l),
(547,1231,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = uni02C8;
unicode = 712;
},
{
glyphname = uniE227;
lastChange = "2025-03-16 13:06:40 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(574,1456,o),
(553,1455,o),
(532,1452,c),
(501,1447,o),
(471,1444,o),
(440,1433,c),
(392,1420,o),
(347,1397,o),
(307,1367,c),
(245,1320,o),
(202,1265,o),
(149,1183,c),
(130,1152,o),
(121,1119,o),
(110,1088,c),
(94,1037,o),
(82,983,o),
(78,928,c),
(75,881,o),
(79,790,o),
(91,730,c),
(103,671,o),
(124,611,o),
(153,556,c),
(169,528,o),
(188,505,o),
(210,482,c),
(254,433,o),
(311,390,o),
(374,363,c),
(424,342,o),
(477,338,o),
(528,332,c),
(528,233,l),
(650,233,l),
(650,334,l),
(673,336,o),
(695,343,o),
(717,352,c),
(729,358,o),
(739,365,o),
(750,373,c),
(761,381,o),
(770,389,o),
(780,398,c),
(834,454,o),
(846,526,o),
(836,598,c),
(834,619,o),
(826,640,o),
(816,658,c),
(778,727,o),
(703,762,o),
(638,788,c),
(553,820,l),
(526,831,o),
(502,851,o),
(491,875,c),
(482,902,o),
(482,933,o),
(493,959,c),
(504,986,o),
(524,1007,o),
(551,1012,c),
(584,1018,o),
(597,1020,o),
(626,1012,c),
(655,1005,o),
(672,987,o),
(684,962,c),
(696,937,o),
(702,906,o),
(702,877,c),
(702,866,o),
(702,858,o),
(702,858,c),
(832,858,l),
(832,858,o),
(832,866,o),
(832,877,c),
(832,941,o),
(820,1020,o),
(766,1071,c),
(749,1088,o),
(731,1100,o),
(708,1113,c),
(690,1121,o),
(671,1127,o),
(650,1131,c),
(650,1247,l),
(528,1247,l),
(528,1131,l),
(494,1125,o),
(463,1111,o),
(435,1090,c),
(357,1029,o),
(331,916,o),
(369,824,c),
(400,751,o),
(474,708,o),
(540,684,c),
(625,650,l),
(652,640,o),
(676,625,o),
(692,602,c),
(714,571,o),
(711,521,o),
(688,491,c),
(675,472,o),
(652,459,o),
(628,455,c),
(595,451,o),
(595,448,o),
(548,452,c),
(469,459,o),
(385,483,o),
(330,537,c),
(287,583,o),
(253,644,o),
(233,704,c),
(203,789,o),
(204,852,o),
(206,908,c),
(206,952,o),
(223,1028,o),
(250,1083,c),
(314,1216,o),
(398,1297,o),
(543,1323,c),
(568,1328,o),
(595,1328,o),
(622,1327,c),
(650,1326,o),
(681,1320,o),
(708,1311,c),
(749,1299,o),
(785,1276,o),
(818,1247,c),
(863,1207,o),
(900,1156,o),
(929,1100,c),
(962,1041,o),
(986,970,o),
(1001,889,c),
(1016,808,o),
(1014,723,o),
(1002,630,c),
(989,545,o),
(969,468,o),
(936,401,c),
(905,332,o),
(867,281,o),
(827,241,c),
(787,202,o),
(741,173,o),
(687,157,c),
(633,141,o),
(572,141,o),
(504,153,c),
(466,160,o),
(428,172,o),
(394,188,c),
(392,188,o),
(374,196,o),
(374,196,c),
(328,60,l),
(328,60,o),
(335,57,o),
(345,53,c),
(365,44,o),
(386,36,o),
(411,28,c),
(433,20,o),
(456,16,o),
(478,12,c),
(574,-6,o),
(660,-2,o),
(737,24,c),
(814,49,o),
(878,91,o),
(932,145,c),
(987,199,o),
(1033,262,o),
(1068,339,c),
(1102,417,o),
(1126,505,o),
(1140,605,c),
(1155,708,o),
(1155,808,o),
(1140,901,c),
(1126,995,o),
(1099,1082,o),
(1059,1160,c),
(1021,1230,o),
(970,1295,o),
(908,1346,c),
(869,1377,o),
(827,1404,o),
(780,1421,c),
(722,1444,o),
(659,1456,o),
(595,1456,c)
);
}
);
width = 1229;
}
);
subCategory = Currency;
unicode = 57895;
},
{
glyphname = uniE926;
lastChange = "2025-03-16 13:23:41 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(607,1456,o),
(569,1453,o),
(529,1446,c),
(445,1432,o),
(372,1399,o),
(310,1349,c),
(248,1299,o),
(198,1237,o),
(159,1162,c),
(159,1162,o),
(159,1161,o),
(159,1161,c),
(159,1161,o),
(159,1161,o),
(159,1161,c),
(118,1083,o),
(91,997,o),
(77,904,c),
(62,810,o),
(63,710,o),
(77,605,c),
(77,605,o),
(77,605,o),
(77,605,c),
(91,506,o),
(115,418,o),
(149,341,c),
(183,264,o),
(228,198,o),
(285,145,c),
(339,90,o),
(405,49,o),
(481,24,c),
(481,24,o),
(481,24,o),
(481,24,c),
(558,-2,o),
(645,-6,o),
(741,11,c),
(763,15,o),
(785,20,o),
(810,28,c),
(810,28,o),
(810,28,o),
(810,28,c),
(833,36,o),
(855,44,o),
(876,53,c),
(876,53,o),
(876,53,o),
(876,53,c),
(885,58,o),
(893,61,o),
(893,61,c),
(846,201,l),
(846,201,o),
(835,197,o),
(824,192,c),
(824,192,o),
(824,192,o),
(824,192,c),
(807,184,o),
(788,176,o),
(769,170,c),
(751,164,o),
(733,160,o),
(715,158,c),
(715,158,o),
(715,158,o),
(715,158,c),
(715,157,o),
(714,157,o),
(714,157,c),
(646,144,o),
(586,146,o),
(532,162,c),
(479,178,o),
(433,205,o),
(394,245,c),
(394,245,o),
(394,245,o),
(394,245,c),
(394,246,o),
(393,246,o),
(393,246,c),
(393,246,l),
(353,284,o),
(317,336,o),
(284,404,c),
(252,471,o),
(231,547,o),
(220,632,c),
(220,633,o),
(220,633,o),
(219,633,c),
(206,724,o),
(206,810,o),
(221,890,c),
(236,971,o),
(259,1041,o),
(292,1101,c),
(292,1101,o),
(292,1101,o),
(292,1101,c),
(292,1101,o),
(292,1101,o),
(292,1101,c),
(323,1158,o),
(360,1206,o),
(403,1247,c),
(446,1286,o),
(496,1310,o),
(554,1321,c),
(613,1331,o),
(665,1328,o),
(713,1314,c),
(761,1299,o),
(808,1272,o),
(846,1238,c),
(896,1195,o),
(938,1142,o),
(966,1083,c),
(998,1017,o),
(1020,944,o),
(1020,872,c),
(1021,751,o),
(1000,623,o),
(938,524,c),
(917,489,o),
(876,459,o),
(834,440,c),
(819,432,o),
(803,424,o),
(785,420,c),
(753,413,o),
(718,411,o),
(683,412,c),
(657,414,o),
(630,417,o),
(606,425,c),
(584,432,o),
(568,439,o),
(553,452,c),
(542,461,o),
(528,478,o),
(520,495,c),
(511,511,o),
(505,530,o),
(501,549,c),
(496,569,o),
(495,587,o),
(493,606,c),
(492,623,o),
(492,640,o),
(492,656,c),
(706,656,l),
(706,796,l),
(493,796,l),
(493,811,o),
(495,826,o),
(498,841,c),
(502,861,o),
(504,881,o),
(509,901,c),
(514,919,o),
(518,936,o),
(524,949,c),
(531,964,o),
(539,977,o),
(549,987,c),
(563,1001,o),
(579,1012,o),
(596,1020,c),
(616,1029,o),
(637,1034,o),
(658,1035,c),
(677,1035,o),
(697,1031,o),
(713,1023,c),
(726,1017,o),
(739,1005,o),
(751,992,c),
(763,978,o),
(772,960,o),
(780,942,c),
(788,922,o),
(794,902,o),
(797,878,c),
(797,878,o),
(797,878,o),
(797,878,c),
(799,868,o),
(800,860,o),
(800,860,c),
(933,860,l),
(933,860,o),
(932,872,o),
(931,884,c),
(926,922,o),
(921,958,o),
(906,994,c),
(894,1025,o),
(877,1055,o),
(854,1081,c),
(832,1104,o),
(806,1127,o),
(773,1140,c),
(732,1157,o),
(688,1160,o),
(648,1160,c),
(616,1160,o),
(584,1156,o),
(554,1145,c),
(527,1135,o),
(502,1121,o),
(481,1103,c),
(457,1085,o),
(438,1063,o),
(422,1039,c),
(404,1015,o),
(392,988,o),
(382,961,c),
(371,932,o),
(364,903,o),
(359,873,c),
(355,847,o),
(355,821,o),
(354,796,c),
(275,796,l),
(275,656,l),
(354,656,l),
(355,630,o),
(355,603,o),
(359,576,c),
(364,546,o),
(371,516,o),
(382,488,c),
(392,461,o),
(405,434,o),
(422,410,c),
(438,387,o),
(458,365,o),
(481,347,c),
(507,326,o),
(537,310,o),
(568,299,c),
(603,287,o),
(639,281,o),
(674,279,c),
(722,276,o),
(774,275,o),
(824,289,c),
(870,302,o),
(911,326,o),
(948,353,c),
(994,388,o),
(1034,432,o),
(1067,479,c),
(1146,595,o),
(1164,746,o),
(1162,882,c),
(1161,973,o),
(1134,1064,o),
(1094,1145,c),
(1056,1222,o),
(1002,1291,o),
(937,1346,c),
(885,1390,o),
(824,1429,o),
(752,1445,c),
(717,1452,o),
(681,1456,o),
(644,1456,c)
);
}
);
width = 1229;
}
);
subCategory = Currency;
unicode = 59686;
},
{
glyphname = uniEAFA;
lastChange = "2025-03-16 13:33:14 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,1455,o),
(574,1449,o),
(532,1440,c),
(456,1423,o),
(377,1395,o),
(315,1344,c),
(254,1294,o),
(204,1232,o),
(165,1158,c),
(165,1158,o),
(165,1158,o),
(165,1158,c),
(125,1080,o),
(97,994,o),
(83,901,c),
(69,807,o),
(69,708,o),
(84,603,c),
(84,603,o),
(84,603,o),
(84,603,c),
(97,504,o),
(121,416,o),
(155,339,c),
(189,262,o),
(235,197,o),
(291,144,c),
(344,89,o),
(409,49,o),
(485,24,c),
(485,24,o),
(485,24,o),
(485,24,c),
(562,-2,o),
(648,-6,o),
(744,11,c),
(765,15,o),
(788,20,o),
(811,28,c),
(811,28,o),
(811,28,o),
(811,28,c),
(834,36,o),
(856,44,o),
(877,53,c),
(885,57,o),
(890,59,o),
(890,59,c),
(846,190,l),
(846,190,o),
(832,184,o),
(830,183,c),
(812,174,o),
(794,167,o),
(775,161,c),
(756,155,o),
(738,150,o),
(719,148,c),
(719,148,o),
(719,148,o),
(719,148,c),
(650,135,o),
(588,136,o),
(534,152,c),
(534,152,l),
(479,168,o),
(432,196,o),
(392,237,c),
(392,237,o),
(392,237,o),
(392,237,c),
(351,276,o),
(314,329,o),
(282,398,c),
(250,466,o),
(228,543,o),
(216,629,c),
(216,629,o),
(216,629,o),
(216,629,c),
(202,721,o),
(203,808,o),
(218,889,c),
(233,971,o),
(257,1042,o),
(290,1102,c),
(290,1102,o),
(290,1102,o),
(290,1103,c),
(320,1160,o),
(357,1209,o),
(402,1250,c),
(445,1289,o),
(500,1311,o),
(557,1325,c),
(614,1339,o),
(676,1341,o),
(734,1330,c),
(787,1319,o),
(840,1297,o),
(882,1265,c),
(934,1225,o),
(979,1173,o),
(1002,1115,c),
(1028,1049,o),
(1034,972,o),
(1018,903,c),
(1009,867,o),
(993,827,o),
(969,795,c),
(945,763,o),
(914,740,o),
(874,734,c),
(581,734,l),
(581,982,l),
(890,982,l),
(890,1103,l),
(444,1103,l),
(444,519,l),
(359,519,l),
(359,401,l),
(444,401,l),
(444,252,l),
(581,252,l),
(581,401,l),
(750,401,l),
(750,519,l),
(581,519,l),
(581,615,l),
(875,615,l),
(974,615,o),
(1042,669,o),
(1083,735,c),
(1125,802,o),
(1144,881,o),
(1151,938,c),
(1162,1019,o),
(1150,1107,o),
(1116,1183,c),
(1082,1256,o),
(1023,1316,o),
(960,1362,c),
(903,1404,o),
(835,1433,o),
(766,1446,c),
(737,1452,o),
(708,1454,o),
(678,1455,c),
(672,1455,o),
(666,1455,o),
(660,1455,c)
);
}
);
width = 1229;
}
);
subCategory = Currency;
unicode = 60154;
},
{
glyphname = uniF1B6;
lastChange = "2025-03-03 15:13:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,1082,l),
(114,936,l),
(1114,936,l),
(1114,1082,l)
);
},
{
closed = 1;
nodes = (
(114,790,l),
(114,644,l),
(1114,644,l),
(1114,790,l)
);
},
{
closed = 1;
nodes = (
(114,498,l),
(114,352,l),
(1114,352,l),
(1114,498,l)
);
},
{
closed = 1;
nodes = (
(694,219,l),
(534,219,l),
(534,0,l),
(694,0,l)
);
},
{
closed = 1;
nodes = (
(694,1456,l),
(534,1456,l),
(534,1238,l),
(694,1238,l)
);
}
);
width = 1229;
}
);
subCategory = Currency;
unicode = 61878;
},
{
glyphname = uniE0A9;
lastChange = "2025-03-03 20:40:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(737,360,l),
(766,382,l),
(794,413,o),
(827,495,o),
(827,542,qs),
(827,588,o),
(794,670,o),
(766,700,qs),
(737,730,o),
(660,765,o),
(615,765,qs),
(569,765,o),
(492,730,o),
(463,700,qs),
(435,670,o),
(402,588,o),
(402,542,qs),
(402,495,o),
(435,413,o),
(463,382,q),
(492,360,l),
(382,35,l),
(297,70,o),
(236,144,qs),
(164,220,o),
(82,425,o),
(82,542,qs),
(83,664,o),
(169,871,o),
(242,945,qs),
(314,1019,o),
(508,1102,o),
(615,1102,qs),
(728,1102,o),
(922,1014,o),
(994,939,qs),
(1065,863,o),
(1147,659,o),
(1147,542,qs),
(1147,425,o),
(1065,220,o),
(994,144,qs),
(922,73,o),
(841,31,q)
);
}
);
width = 1229;
}
);
subCategory = Other;
unicode = 57513;
},
{
glyphname = uniE0AE;
lastChange = "2025-03-16 11:57:06 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,60,l),
(129,199,l),
(221,328,l),
(185,426,l),
(27,452,l),
(27,648,l),
(185,674,l),
(223,777,l),
(129,888,l),
(255,1038,l),
(391,959,l),
(495,1002,l),
(520,1153,l),
(716,1153,l),
(741,1002,l),
(843,959,l),
(978,1038,l),
(1103,887,l),
(1008,775,l),
(1045,674,l),
(1202,648,l),
(1202,452,l),
(1044,426,l),
(1004,320,l),
(1103,182,l),
(964,43,l),
(804,124,l),
(717,399,l),
(741,417,l),
(765,443,o),
(792,512,o),
(792,551,qs),
(792,590,o),
(765,658,o),
(741,683,qs),
(717,708,o),
(653,738,o),
(615,738,qs),
(576,738,o),
(512,708,o),
(488,683,qs),
(464,658,o),
(437,590,o),
(437,551,qs),
(437,512,o),
(464,443,o),
(488,417,q),
(512,399,l),
(420,128,l)
);
}
);
width = 1229;
}
);
subCategory = Other;
unicode = 57518;
},
{
glyphname = uniE02F;
lastChange = "2025-03-03 14:41:34 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,540,l),
(384,540,l),
(1078,1080,l),
(844,1080,l)
);
}
);
width = 1229;
}
);
unicode = 57391;
},
{
glyphname = uniE100;
lastChange = "2025-03-16 14:16:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681,945,l),
(922,945,l),
(922,1082,l),
(518,1082,l),
(518,406,l),
(681,406,l)
);
}
);
width = 1229;
}
);
unicode = 57600;
},
{
glyphname = uniE101;
lastChange = "2025-03-03 14:41:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(548,0,l),
(548,-505,l),
(922,-505,l),
(922,-372,l),
(726,-372,l),
(726,0,l)
);
}
);
width = 1229;
}
);
unicode = 57601;
},
{
glyphname = uniE334;
lastChange = "2025-03-03 14:41:51 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,1372,l),
(637,1372,l),
(637,1221,l),
(0,1221,l)
);
}
);
width = 1229;
}
);
unicode = 58164;
},
{
glyphname = uniE335;
lastChange = "2025-03-03 14:41:55 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,1372,l),
(1226,1372,l),
(1226,1221,l),
(589,1221,l)
);
}
);
width = 1229;
}
);
unicode = 58165;
},
{
glyphname = uniE336;
lastChange = "2025-03-03 14:41:59 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,802,l),
(637,802,l),
(637,651,l),
(0,651,l)
);
}
);
width = 1229;
}
);
unicode = 58166;
},
{
glyphname = uniE337;
lastChange = "2025-03-03 14:42:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,676,l),
(933,676,l),
(933,525,l),
(296,525,l)
);
}
);
width = 1229;
}
);
unicode = 58167;
},
{
glyphname = uniECB0;
lastChange = "2025-03-03 14:42:20 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,416,l),
(657,416,l),
(657,265,l),
(20,265,l)
);
}
);
width = 1229;
}
);
unicode = 60592;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = postscriptFontName;
value = "Zephirum-Regular";
},
{
key = postscriptFullNames;
values = (
{
language = ENG;
value = "Zephirum Regular";
}
);
}
);
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2019 The Zephirum Project Authors (https://github.com/rastislavcore/zephirum)";
}
);
},
{
key = descriptions;
values = (
{
language = ENG;
value = "Zephirum is a monospace font";
}
);
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://openfontlicense.org";
}
);
},
{
key = licenseURL;
value = "https://openfontlicense.org";
},
{
key = sampleTexts;
values = (
{
language = ENG;
value = "The quick brown fox jumps over the lazy dog";
},
{
language = SKY;
value = "Bystrá líška v okamihu preskočila driemajúceho psa";
},
{
language = CSY;
value = "Hbitá liška se ladně přenesla přes ospalého psa";
},
{
language = PLK;
value = "Zwinny lis błyskawicznie przemknął nad śpiącym psem";
},
{
language = ROM;
value = "Vicleană și rapidă, vulpea a sărit peste câinele adormit";
},
{
language = DEU;
value = "Ein schlauer Fuchs setzte mit einem Sprung über den trägen Hund hinweg";
},
{
language = ITA;
value = "La volpe astuta e fulminea salta con eleganza sopra il cane sonnolento";
},
{
language = ESP;
value = "Con un ágil brinco, el zorro marrón cruza por encima del perro perezoso";
},
{
language = HUN;
value = "A fürge, barna róka átugrik a lusta kutya felett";
}
);
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 2048;
versionMajor = 1;
versionMinor = 200;
}
